ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_CSD_CSHL.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	CapSense_CSD_rawFilterData1,24,4
  20              		.comm	CapSense_CSD_rawFilterData2,24,4
  21              		.global	CapSense_CSD_sensorBaseline
  22              		.bss
  23              		.align	2
  24              		.type	CapSense_CSD_sensorBaseline, %object
  25              		.size	CapSense_CSD_sensorBaseline, 24
  26              	CapSense_CSD_sensorBaseline:
  27 0000 00000000 		.space	24
  27      00000000 
  27      00000000 
  27      00000000 
  27      00000000 
  28              		.global	CapSense_CSD_sensorBaselineLow
  29              		.align	2
  30              		.type	CapSense_CSD_sensorBaselineLow, %object
  31              		.size	CapSense_CSD_sensorBaselineLow, 12
  32              	CapSense_CSD_sensorBaselineLow:
  33 0018 00000000 		.space	12
  33      00000000 
  33      00000000 
  34              		.global	CapSense_CSD_sensorSignal
  35              		.align	2
  36              		.type	CapSense_CSD_sensorSignal, %object
  37              		.size	CapSense_CSD_sensorSignal, 24
  38              	CapSense_CSD_sensorSignal:
  39 0024 00000000 		.space	24
  39      00000000 
  39      00000000 
  39      00000000 
  39      00000000 
  40              		.global	CapSense_CSD_sensorOnMask
  41              		.align	2
  42              		.type	CapSense_CSD_sensorOnMask, %object
  43              		.size	CapSense_CSD_sensorOnMask, 2
  44              	CapSense_CSD_sensorOnMask:
  45 003c 0000     		.space	2
  46              		.comm	CapSense_CSD_lowBaselineResetCnt,12,4
  47              		.global	CapSense_CSD_lowBaselineReset
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 2


  48              		.data
  49              		.align	2
  50              		.type	CapSense_CSD_lowBaselineReset, %object
  51              		.size	CapSense_CSD_lowBaselineReset, 12
  52              	CapSense_CSD_lowBaselineReset:
  53 0000 05       		.byte	5
  54 0001 05       		.byte	5
  55 0002 05       		.byte	5
  56 0003 05       		.byte	5
  57 0004 05       		.byte	5
  58 0005 05       		.byte	5
  59 0006 05       		.byte	5
  60 0007 05       		.byte	5
  61 0008 05       		.byte	5
  62 0009 05       		.byte	5
  63 000a 05       		.byte	5
  64 000b 05       		.byte	5
  65              		.global	CapSense_CSD_enableRawFilters
  66              		.type	CapSense_CSD_enableRawFilters, %object
  67              		.size	CapSense_CSD_enableRawFilters, 1
  68              	CapSense_CSD_enableRawFilters:
  69 000c 01       		.byte	1
  70              		.global	CapSense_CSD_fingerThreshold
  71 000d 000000   		.align	2
  72              		.type	CapSense_CSD_fingerThreshold, %object
  73              		.size	CapSense_CSD_fingerThreshold, 24
  74              	CapSense_CSD_fingerThreshold:
  75 0010 6400     		.short	100
  76 0012 6400     		.short	100
  77 0014 6400     		.short	100
  78 0016 6400     		.short	100
  79 0018 6400     		.short	100
  80 001a 6400     		.short	100
  81 001c 6400     		.short	100
  82 001e 6400     		.short	100
  83 0020 6400     		.short	100
  84 0022 6400     		.short	100
  85 0024 6400     		.short	100
  86 0026 6400     		.short	100
  87              		.global	CapSense_CSD_noiseThreshold
  88              		.align	2
  89              		.type	CapSense_CSD_noiseThreshold, %object
  90              		.size	CapSense_CSD_noiseThreshold, 24
  91              	CapSense_CSD_noiseThreshold:
  92 0028 1400     		.short	20
  93 002a 1400     		.short	20
  94 002c 1400     		.short	20
  95 002e 1400     		.short	20
  96 0030 1400     		.short	20
  97 0032 1400     		.short	20
  98 0034 1400     		.short	20
  99 0036 1400     		.short	20
 100 0038 1400     		.short	20
 101 003a 1400     		.short	20
 102 003c 1400     		.short	20
 103 003e 1400     		.short	20
 104              		.global	CapSense_CSD_negativeNoiseThreshold
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 3


 105              		.align	2
 106              		.type	CapSense_CSD_negativeNoiseThreshold, %object
 107              		.size	CapSense_CSD_negativeNoiseThreshold, 24
 108              	CapSense_CSD_negativeNoiseThreshold:
 109 0040 1400     		.short	20
 110 0042 1400     		.short	20
 111 0044 1400     		.short	20
 112 0046 1400     		.short	20
 113 0048 1400     		.short	20
 114 004a 1400     		.short	20
 115 004c 1400     		.short	20
 116 004e 1400     		.short	20
 117 0050 1400     		.short	20
 118 0052 1400     		.short	20
 119 0054 1400     		.short	20
 120 0056 1400     		.short	20
 121              		.global	CapSense_CSD_hysteresis
 122              		.align	2
 123              		.type	CapSense_CSD_hysteresis, %object
 124              		.size	CapSense_CSD_hysteresis, 24
 125              	CapSense_CSD_hysteresis:
 126 0058 0A00     		.short	10
 127 005a 0A00     		.short	10
 128 005c 0A00     		.short	10
 129 005e 0A00     		.short	10
 130 0060 0A00     		.short	10
 131 0062 0A00     		.short	10
 132 0064 0A00     		.short	10
 133 0066 0A00     		.short	10
 134 0068 0A00     		.short	10
 135 006a 0A00     		.short	10
 136 006c 0A00     		.short	10
 137 006e 0A00     		.short	10
 138              		.global	CapSense_CSD_debounce
 139              		.align	2
 140              		.type	CapSense_CSD_debounce, %object
 141              		.size	CapSense_CSD_debounce, 12
 142              	CapSense_CSD_debounce:
 143 0070 05       		.byte	5
 144 0071 05       		.byte	5
 145 0072 05       		.byte	5
 146 0073 05       		.byte	5
 147 0074 05       		.byte	5
 148 0075 05       		.byte	5
 149 0076 05       		.byte	5
 150 0077 05       		.byte	5
 151 0078 05       		.byte	5
 152 0079 05       		.byte	5
 153 007a 05       		.byte	5
 154 007b 05       		.byte	5
 155              		.bss
 156 003e 0000     		.align	2
 157              	CapSense_CSD_debounceCounter:
 158 0040 00000000 		.space	13
 158      00000000 
 158      00000000 
 158      00
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 4


 159              		.global	CapSense_CSD_rawDataIndex
 160              		.section	.rodata
 161              		.align	2
 162              		.type	CapSense_CSD_rawDataIndex, %object
 163              		.size	CapSense_CSD_rawDataIndex, 12
 164              	CapSense_CSD_rawDataIndex:
 165 0000 00       		.byte	0
 166 0001 01       		.byte	1
 167 0002 02       		.byte	2
 168 0003 03       		.byte	3
 169 0004 04       		.byte	4
 170 0005 05       		.byte	5
 171 0006 06       		.byte	6
 172 0007 07       		.byte	7
 173 0008 08       		.byte	8
 174 0009 09       		.byte	9
 175 000a 0A       		.byte	10
 176 000b 0B       		.byte	11
 177              		.global	CapSense_CSD_numberOfSensors
 178              		.align	2
 179              		.type	CapSense_CSD_numberOfSensors, %object
 180              		.size	CapSense_CSD_numberOfSensors, 12
 181              	CapSense_CSD_numberOfSensors:
 182 000c 01       		.byte	1
 183 000d 01       		.byte	1
 184 000e 01       		.byte	1
 185 000f 01       		.byte	1
 186 0010 01       		.byte	1
 187 0011 01       		.byte	1
 188 0012 01       		.byte	1
 189 0013 01       		.byte	1
 190 0014 01       		.byte	1
 191 0015 01       		.byte	1
 192 0016 01       		.byte	1
 193 0017 01       		.byte	1
 194              		.section	.text.CapSense_CSD_BaseInit,"ax",%progbits
 195              		.align	2
 196              		.global	CapSense_CSD_BaseInit
 197              		.code	16
 198              		.thumb_func
 199              		.type	CapSense_CSD_BaseInit, %function
 200              	CapSense_CSD_BaseInit:
 201              	.LFB32:
 202              		.file 1 "Generated_Source\\PSoC4\\CapSense_CSD_CSHL.c"
   1:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * File Name: CapSense_CSD_CSHL.c
   3:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Version 2.60
   4:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
   5:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Description:
   6:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CSD component.
   8:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
   9:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Note:
  10:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
  11:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Copyright 2013-2016, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 5


  14:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  18:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #include "CapSense_CSD_CSHL.h"
  19:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #include "CapSense_CSD_PVT.h"
  20:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  21:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /* SmartSense functions */
  22:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO)
  23:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     extern void CapSense_CSD_UpdateThresholds(uint32 sensor);
  24:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO) */
  25:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  26:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /* Storage of filters data */
  27:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER)) || \
  28:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER)) )
  29:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  30:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_rawFilterData1[CapSense_CSD_TOTAL_SENSOR_COUNT];
  31:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_rawFilterData2[CapSense_CSD_TOTAL_SENSOR_COUNT];
  32:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  33:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #elif ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER))   || \
  34:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER))   || \
  35:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_JITTER_FILTER)) || \
  36:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR8_FILTER))   || \
  37:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR16_FILTER)) )
  38:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  39:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_rawFilterData1[CapSense_CSD_TOTAL_SENSOR_COUNT];
  40:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif  /* ( (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) || \
  41:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         *    (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER) )
  42:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         */
  43:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  44:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** extern uint16 CapSense_CSD_sensorRaw[CapSense_CSD_TOTAL_SENSOR_COUNT];
  45:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** extern uint8 CapSense_CSD_sensorEnableMask[CapSense_CSD_TOTAL_SENSOR_MASK];
  46:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** extern const uint8 CapSense_CSD_widgetNumber[CapSense_CSD_TOTAL_SENSOR_COUNT];
  47:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  48:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE)
  49:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     extern uint32 CapSense_CSD_widgetResolution[CapSense_CSD_RESOLUTIONS_TBL_SIZE];
  50:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE) */
  51:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  52:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint16 CapSense_CSD_sensorBaseline[CapSense_CSD_TOTAL_SENSOR_COUNT] = {0u};
  53:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_sensorBaselineLow[CapSense_CSD_TOTAL_SENSOR_COUNT] = {0u};
  54:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint16 CapSense_CSD_sensorSignal[CapSense_CSD_TOTAL_SENSOR_COUNT] = {0u};
  55:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_sensorOnMask[CapSense_CSD_TOTAL_SENSOR_MASK] = {0u};
  56:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  57:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_lowBaselineResetCnt[CapSense_CSD_TOTAL_SENSOR_COUNT];
  58:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_lowBaselineReset[CapSense_CSD_TOTAL_SENSOR_COUNT] = {
  59:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     5u, 5u, 5u, 5u, 5u, 5u, 5u, 5u, 5u, 5u, 5u, 5u, 
  60:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** };
  61:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  62:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  63:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  64:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO)
  65:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     extern CapSense_CSD_CONFIG_TYPE_P4_v2_60 CapSense_CSD_config;
  66:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif  /* (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO) */
  67:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  68:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (CapSense_CSD_RAW_FILTER_MASK != 0u)
  69:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_enableRawFilters = CapSense_CSD_RAW_FILTERS_ENABLED;
  70:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif  /* (CapSense_CSD_RAW_FILTER_MASK != 0u) */
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 6


  71:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  72:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /* Generated by Customizer */
  73:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint16 CapSense_CSD_fingerThreshold[] = {
  74:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     100u, 100u, 100u, 100u, 100u, 100u, 100u, 100u, 100u, 100u, 100u, 100u, 
  75:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** };
  76:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  77:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint16 CapSense_CSD_noiseThreshold[] = {
  78:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     20u, 20u, 20u, 20u, 20u, 20u, 20u, 20u, 20u, 20u, 20u, 20u, 
  79:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** };
  80:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  81:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint16 CapSense_CSD_negativeNoiseThreshold[] = {
  82:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     20u, 20u, 20u, 20u, 20u, 20u, 20u, 20u, 20u, 20u, 20u, 20u, 
  83:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** };
  84:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  85:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint16 CapSense_CSD_hysteresis[] = {
  86:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     10u, 10u, 10u, 10u, 10u, 10u, 10u, 10u, 10u, 10u, 10u, 10u, 
  87:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** };
  88:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  89:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_debounce[] = {
  90:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     5u, 5u, 5u, 5u, 5u, 5u, 5u, 5u, 5u, 5u, 5u, 5u, 
  91:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** };
  92:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  93:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** static uint8 CapSense_CSD_debounceCounter[] = {
  94:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 
  95:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** };
  96:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  97:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** const uint8 CapSense_CSD_rawDataIndex[] = {
  98:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     0u, /* Button0__BTN */
  99:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     1u, /* Button1__BTN */
 100:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     2u, /* Button2__BTN */
 101:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     3u, /* Button3__BTN */
 102:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     4u, /* Button4__BTN */
 103:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     5u, /* Button5__BTN */
 104:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     6u, /* Button6__BTN */
 105:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     7u, /* Button7__BTN */
 106:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     8u, /* Button8__BTN */
 107:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     9u, /* Button9__BTN */
 108:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     10u, /* Button10__BTN */
 109:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     11u, /* Button11__BTN */
 110:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** };
 111:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 112:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** const uint8 CapSense_CSD_numberOfSensors[] = {
 113:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     1u, /* Button0__BTN */
 114:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     1u, /* Button1__BTN */
 115:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     1u, /* Button2__BTN */
 116:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     1u, /* Button3__BTN */
 117:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     1u, /* Button4__BTN */
 118:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     1u, /* Button5__BTN */
 119:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     1u, /* Button6__BTN */
 120:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     1u, /* Button7__BTN */
 121:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     1u, /* Button8__BTN */
 122:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     1u, /* Button9__BTN */
 123:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     1u, /* Button10__BTN */
 124:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     1u, /* Button11__BTN */
 125:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** };
 126:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 127:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 7


 128:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 129:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 130:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 131:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_BaseInit
 132:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 133:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 134:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 135:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Loads the CapSense_CSD_sensorBaseline[sensor] array element with an
 136:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  initial value which is equal to the raw count value.
 137:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Resets to zero CapSense_CSD_sensorBaselineLow[sensor] and
 138:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[sensor] array element.
 139:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Loads the CapSense_CSD_rawFilterData2[sensor] and
 140:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData2[sensor] array element with an
 141:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  initial value which is equal to the raw count value if the raw data filter is enabled.
 142:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 143:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 144:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 145:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 146:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 147:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 148:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 149:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 150:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaseline[]    - used to store the baseline value.
 151:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaselineLow[] - used to store the fraction byte of
 152:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  the baseline value.
 153:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[]      - used to store a difference between
 154:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  the current value of raw data and the previous value of the baseline.
 155:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData1[]    - used to store a previous sample of
 156:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  any enabled raw data filter.
 157:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData2[]    - used to store before a previous sample
 158:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  of the enabled raw data filter. Required only for median or average filters.
 159:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 160:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 161:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 162:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 163:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 164:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_BaseInit(uint32 sensor)
 165:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 203              		.loc 1 165 0
 204              		.cfi_startproc
 205              		@ args = 0, pretend = 0, frame = 16
 206              		@ frame_needed = 1, uses_anonymous_args = 0
 207 0000 80B5     		push	{r7, lr}
 208              		.cfi_def_cfa_offset 8
 209              		.cfi_offset 7, -8
 210              		.cfi_offset 14, -4
 211 0002 84B0     		sub	sp, sp, #16
 212              		.cfi_def_cfa_offset 24
 213 0004 00AF     		add	r7, sp, #0
 214              		.cfi_def_cfa_register 7
 215 0006 7860     		str	r0, [r7, #4]
 166:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if ((CapSense_CSD_TOTAL_BUTTONS_COUNT) || (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT) || \
 167:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****          (CapSense_CSD_TOTAL_GENERICS_COUNT))
 168:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 widget = CapSense_CSD_widgetNumber[sensor];
 216              		.loc 1 168 0
 217 0008 0F23     		movs	r3, #15
 218 000a FB18     		adds	r3, r7, r3
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 8


 219 000c 1A49     		ldr	r1, .L2
 220 000e 7A68     		ldr	r2, [r7, #4]
 221 0010 8A18     		adds	r2, r1, r2
 222 0012 1278     		ldrb	r2, [r2]
 223 0014 1A70     		strb	r2, [r3]
 169:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif /* ((CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUN
 170:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 171:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT)
 172:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 debounceIndex;
 173:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT) */
 174:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 175:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 176:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 177:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(widget < CapSense_CSD_END_OF_WIDGETS_INDEX)
 178:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 179:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 180:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 181:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Initialize Baseline */
 182:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_sensorBaseline[sensor] = CapSense_CSD_sensorRaw[sensor];
 224              		.loc 1 182 0
 225 0016 194B     		ldr	r3, .L2+4
 226 0018 7A68     		ldr	r2, [r7, #4]
 227 001a 5200     		lsls	r2, r2, #1
 228 001c D15A     		ldrh	r1, [r2, r3]
 229 001e 184B     		ldr	r3, .L2+8
 230 0020 7A68     		ldr	r2, [r7, #4]
 231 0022 5200     		lsls	r2, r2, #1
 232 0024 D152     		strh	r1, [r2, r3]
 183:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_sensorBaselineLow[sensor] = 0u;
 233              		.loc 1 183 0
 234 0026 174A     		ldr	r2, .L2+12
 235 0028 7B68     		ldr	r3, [r7, #4]
 236 002a D318     		adds	r3, r2, r3
 237 002c 0022     		movs	r2, #0
 238 002e 1A70     		strb	r2, [r3]
 184:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_sensorSignal[sensor] = 0u;
 239              		.loc 1 184 0
 240 0030 154B     		ldr	r3, .L2+16
 241 0032 7A68     		ldr	r2, [r7, #4]
 242 0034 5200     		lsls	r2, r2, #1
 243 0036 0021     		movs	r1, #0
 244 0038 D152     		strh	r1, [r2, r3]
 185:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 186:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_debounceCounter[widget] =  CapSense_CSD_debounce[widget];
 245              		.loc 1 186 0
 246 003a 0F23     		movs	r3, #15
 247 003c FB18     		adds	r3, r7, r3
 248 003e 1B78     		ldrb	r3, [r3]
 249 0040 0F22     		movs	r2, #15
 250 0042 BA18     		adds	r2, r7, r2
 251 0044 1278     		ldrb	r2, [r2]
 252 0046 1149     		ldr	r1, .L2+20
 253 0048 895C     		ldrb	r1, [r1, r2]
 254 004a 114A     		ldr	r2, .L2+24
 255 004c D154     		strb	r1, [r2, r3]
 187:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 188:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 9


 189:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if ((0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER)) ||\
 190:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****          (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER)))
 191:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 192:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = CapSense_CSD_sensorRaw[sensor];
 256              		.loc 1 192 0
 257 004e 0B4B     		ldr	r3, .L2+4
 258 0050 7A68     		ldr	r2, [r7, #4]
 259 0052 5200     		lsls	r2, r2, #1
 260 0054 D15A     		ldrh	r1, [r2, r3]
 261 0056 0F4B     		ldr	r3, .L2+28
 262 0058 7A68     		ldr	r2, [r7, #4]
 263 005a 5200     		lsls	r2, r2, #1
 264 005c D152     		strh	r1, [r2, r3]
 193:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData2[sensor] = CapSense_CSD_sensorRaw[sensor];
 265              		.loc 1 193 0
 266 005e 074B     		ldr	r3, .L2+4
 267 0060 7A68     		ldr	r2, [r7, #4]
 268 0062 5200     		lsls	r2, r2, #1
 269 0064 D15A     		ldrh	r1, [r2, r3]
 270 0066 0C4B     		ldr	r3, .L2+32
 271 0068 7A68     		ldr	r2, [r7, #4]
 272 006a 5200     		lsls	r2, r2, #1
 273 006c D152     		strh	r1, [r2, r3]
 194:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 195:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #elif ((CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER) ||\
 196:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****            (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER) ||\
 197:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****            (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_JITTER_FILTER) ||\
 198:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****            (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR8_FILTER) ||\
 199:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****            (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR16_FILTER))
 200:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 201:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = CapSense_CSD_sensorRaw[sensor];
 202:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 203:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #else
 204:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* No Raw filters */
 205:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* ((CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) || \
 206:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             *   (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER))
 207:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             */
 208:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 209:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 210:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 211:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 212:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 213:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 274              		.loc 1 213 0
 275 006e C046     		nop
 276 0070 BD46     		mov	sp, r7
 277 0072 04B0     		add	sp, sp, #16
 278              		@ sp needed
 279 0074 80BD     		pop	{r7, pc}
 280              	.L3:
 281 0076 C046     		.align	2
 282              	.L2:
 283 0078 00000000 		.word	CapSense_CSD_widgetNumber
 284 007c 00000000 		.word	CapSense_CSD_sensorRaw
 285 0080 00000000 		.word	CapSense_CSD_sensorBaseline
 286 0084 00000000 		.word	CapSense_CSD_sensorBaselineLow
 287 0088 00000000 		.word	CapSense_CSD_sensorSignal
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 10


 288 008c 00000000 		.word	CapSense_CSD_debounce
 289 0090 40000000 		.word	CapSense_CSD_debounceCounter
 290 0094 00000000 		.word	CapSense_CSD_rawFilterData1
 291 0098 00000000 		.word	CapSense_CSD_rawFilterData2
 292              		.cfi_endproc
 293              	.LFE32:
 294              		.size	CapSense_CSD_BaseInit, .-CapSense_CSD_BaseInit
 295              		.section	.text.CapSense_CSD_InitializeSensorBaseline,"ax",%progbits
 296              		.align	2
 297              		.global	CapSense_CSD_InitializeSensorBaseline
 298              		.code	16
 299              		.thumb_func
 300              		.type	CapSense_CSD_InitializeSensorBaseline, %function
 301              	CapSense_CSD_InitializeSensorBaseline:
 302              	.LFB33:
 214:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 215:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 216:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 217:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_InitializeSensorBaseline
 218:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 219:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 220:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 221:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Loads the CapSense_CSD_sensorBaseline[sensor] array element with an
 222:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or a pair
 223:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the
 224:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if
 225:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  enabled.
 226:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 227:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 228:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 229:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 230:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 231:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 232:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 233:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 234:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 235:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 236:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 237:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 238:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 239:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 240:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_InitializeSensorBaseline(uint32 sensor)
 241:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 303              		.loc 1 241 0
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 8
 306              		@ frame_needed = 1, uses_anonymous_args = 0
 307 0000 80B5     		push	{r7, lr}
 308              		.cfi_def_cfa_offset 8
 309              		.cfi_offset 7, -8
 310              		.cfi_offset 14, -4
 311 0002 82B0     		sub	sp, sp, #8
 312              		.cfi_def_cfa_offset 16
 313 0004 00AF     		add	r7, sp, #0
 314              		.cfi_def_cfa_register 7
 315 0006 7860     		str	r0, [r7, #4]
 242:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Scan sensor */
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 11


 243:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_ScanSensor(sensor);
 316              		.loc 1 243 0
 317 0008 7B68     		ldr	r3, [r7, #4]
 318 000a 1800     		movs	r0, r3
 319 000c FFF7FEFF 		bl	CapSense_CSD_ScanSensor
 244:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     while(CapSense_CSD_IsBusy() != 0u)
 320              		.loc 1 244 0
 321 0010 C046     		nop
 322              	.L5:
 323              		.loc 1 244 0 is_stmt 0 discriminator 1
 324 0012 FFF7FEFF 		bl	CapSense_CSD_IsBusy
 325 0016 031E     		subs	r3, r0, #0
 326 0018 FBD1     		bne	.L5
 245:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 246:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Wait while sensor is busy */
 247:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 248:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 249:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Initialize Baseline, Signal and debounce counters */
 250:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_BaseInit(sensor);
 327              		.loc 1 250 0 is_stmt 1
 328 001a 7B68     		ldr	r3, [r7, #4]
 329 001c 1800     		movs	r0, r3
 330 001e FFF7FEFF 		bl	CapSense_CSD_BaseInit
 251:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 331              		.loc 1 251 0
 332 0022 C046     		nop
 333 0024 BD46     		mov	sp, r7
 334 0026 02B0     		add	sp, sp, #8
 335              		@ sp needed
 336 0028 80BD     		pop	{r7, pc}
 337              		.cfi_endproc
 338              	.LFE33:
 339              		.size	CapSense_CSD_InitializeSensorBaseline, .-CapSense_CSD_InitializeSensorBaseline
 340 002a C046     		.section	.text.CapSense_CSD_InitializeAllBaselines,"ax",%progbits
 341              		.align	2
 342              		.global	CapSense_CSD_InitializeAllBaselines
 343              		.code	16
 344              		.thumb_func
 345              		.type	CapSense_CSD_InitializeAllBaselines, %function
 346              	CapSense_CSD_InitializeAllBaselines:
 347              	.LFB34:
 252:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 253:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 254:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 255:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_InitializeAllBaselines
 256:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 257:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 258:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 259:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Uses the CapSense_CSD_InitializeSensorBaseline function to load the
 260:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaseline[] array with an initial values by scanning
 261:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  all the sensors. The raw count values are copied into the baseline array for
 262:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  all the sensors. The raw data filters are initialized if enabled.
 263:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 264:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 265:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 266:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 267:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 12


 268:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 269:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 270:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 271:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 272:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 273:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 274:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 275:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 276:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 277:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_InitializeAllBaselines(void)
 278:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 348              		.loc 1 278 0
 349              		.cfi_startproc
 350              		@ args = 0, pretend = 0, frame = 8
 351              		@ frame_needed = 1, uses_anonymous_args = 0
 352 0000 80B5     		push	{r7, lr}
 353              		.cfi_def_cfa_offset 8
 354              		.cfi_offset 7, -8
 355              		.cfi_offset 14, -4
 356 0002 82B0     		sub	sp, sp, #8
 357              		.cfi_def_cfa_offset 16
 358 0004 00AF     		add	r7, sp, #0
 359              		.cfi_def_cfa_register 7
 279:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 i;
 280:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 281:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_SCANSLOT_COUNT; i++)
 360              		.loc 1 281 0
 361 0006 0023     		movs	r3, #0
 362 0008 7B60     		str	r3, [r7, #4]
 363 000a 06E0     		b	.L7
 364              	.L8:
 282:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 283:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_InitializeSensorBaseline(i);
 365              		.loc 1 283 0 discriminator 3
 366 000c 7B68     		ldr	r3, [r7, #4]
 367 000e 1800     		movs	r0, r3
 368 0010 FFF7FEFF 		bl	CapSense_CSD_InitializeSensorBaseline
 281:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 369              		.loc 1 281 0 discriminator 3
 370 0014 7B68     		ldr	r3, [r7, #4]
 371 0016 0133     		adds	r3, r3, #1
 372 0018 7B60     		str	r3, [r7, #4]
 373              	.L7:
 281:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 374              		.loc 1 281 0 is_stmt 0 discriminator 1
 375 001a 7B68     		ldr	r3, [r7, #4]
 376 001c 0B2B     		cmp	r3, #11
 377 001e F5D9     		bls	.L8
 284:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 285:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 378              		.loc 1 285 0 is_stmt 1
 379 0020 C046     		nop
 380 0022 BD46     		mov	sp, r7
 381 0024 02B0     		add	sp, sp, #8
 382              		@ sp needed
 383 0026 80BD     		pop	{r7, pc}
 384              		.cfi_endproc
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 13


 385              	.LFE34:
 386              		.size	CapSense_CSD_InitializeAllBaselines, .-CapSense_CSD_InitializeAllBaselines
 387              		.section	.text.CapSense_CSD_InitializeEnabledBaselines,"ax",%progbits
 388              		.align	2
 389              		.global	CapSense_CSD_InitializeEnabledBaselines
 390              		.code	16
 391              		.thumb_func
 392              		.type	CapSense_CSD_InitializeEnabledBaselines, %function
 393              	CapSense_CSD_InitializeEnabledBaselines:
 394              	.LFB35:
 286:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 287:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 288:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 289:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_InitializeEnabledBaselines
 290:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 291:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 292:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 293:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Scans all the enabled widgets and the raw count values are copied into the
 294:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  baseline array for all the sensors enabled in the scanning process. The baselines
 295:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  are initialized with zero values for sensors disabled from the scanning process.
 296:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  The raw data filters are initialized if enabled.
 297:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 298:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 299:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 300:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 301:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 302:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 303:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 304:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 305:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorRaw[] - used to store the sensors raw data.
 306:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[ ] - used to store bit masks of the enabled sensors.
 307:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 308:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 309:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 310:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 311:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 312:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_InitializeEnabledBaselines(void)
 313:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 395              		.loc 1 313 0
 396              		.cfi_startproc
 397              		@ args = 0, pretend = 0, frame = 8
 398              		@ frame_needed = 1, uses_anonymous_args = 0
 399 0000 80B5     		push	{r7, lr}
 400              		.cfi_def_cfa_offset 8
 401              		.cfi_offset 7, -8
 402              		.cfi_offset 14, -4
 403 0002 82B0     		sub	sp, sp, #8
 404              		.cfi_def_cfa_offset 16
 405 0004 00AF     		add	r7, sp, #0
 406              		.cfi_def_cfa_register 7
 314:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 i;
 315:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 isSensorEnabled;
 316:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 317:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_ScanEnabledWidgets();
 407              		.loc 1 317 0
 408 0006 FFF7FEFF 		bl	CapSense_CSD_ScanEnabledWidgets
 318:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     while(CapSense_CSD_IsBusy() != 0u)
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 14


 409              		.loc 1 318 0
 410 000a C046     		nop
 411              	.L10:
 412              		.loc 1 318 0 is_stmt 0 discriminator 1
 413 000c FFF7FEFF 		bl	CapSense_CSD_IsBusy
 414 0010 031E     		subs	r3, r0, #0
 415 0012 FBD1     		bne	.L10
 319:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 320:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Wait while sensor is busy */
 321:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 322:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 323:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_SENSOR_COUNT; i++)
 416              		.loc 1 323 0 is_stmt 1
 417 0014 0023     		movs	r3, #0
 418 0016 7B60     		str	r3, [r7, #4]
 419 0018 11E0     		b	.L11
 420              	.L13:
 324:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 325:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         isSensorEnabled = CapSense_CSD_GetBitValue(CapSense_CSD_sensorEnableMask, i);
 421              		.loc 1 325 0
 422 001a 7A68     		ldr	r2, [r7, #4]
 423 001c 0B4B     		ldr	r3, .L14
 424 001e 1100     		movs	r1, r2
 425 0020 1800     		movs	r0, r3
 426 0022 FFF7FEFF 		bl	CapSense_CSD_GetBitValue
 427 0026 0300     		movs	r3, r0
 428 0028 3B60     		str	r3, [r7]
 326:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 327:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 328:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(isSensorEnabled != 0u)
 429              		.loc 1 328 0
 430 002a 3B68     		ldr	r3, [r7]
 431 002c 002B     		cmp	r3, #0
 432 002e 03D0     		beq	.L12
 329:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 330:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Initialize baselines */
 331:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_BaseInit(i);
 433              		.loc 1 331 0
 434 0030 7B68     		ldr	r3, [r7, #4]
 435 0032 1800     		movs	r0, r3
 436 0034 FFF7FEFF 		bl	CapSense_CSD_BaseInit
 437              	.L12:
 323:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 438              		.loc 1 323 0 discriminator 2
 439 0038 7B68     		ldr	r3, [r7, #4]
 440 003a 0133     		adds	r3, r3, #1
 441 003c 7B60     		str	r3, [r7, #4]
 442              	.L11:
 323:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 443              		.loc 1 323 0 is_stmt 0 discriminator 1
 444 003e 7B68     		ldr	r3, [r7, #4]
 445 0040 0B2B     		cmp	r3, #11
 446 0042 EAD9     		bls	.L13
 332:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 333:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 334:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 447              		.loc 1 334 0 is_stmt 1
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 15


 448 0044 C046     		nop
 449 0046 BD46     		mov	sp, r7
 450 0048 02B0     		add	sp, sp, #8
 451              		@ sp needed
 452 004a 80BD     		pop	{r7, pc}
 453              	.L15:
 454              		.align	2
 455              	.L14:
 456 004c 00000000 		.word	CapSense_CSD_sensorEnableMask
 457              		.cfi_endproc
 458              	.LFE35:
 459              		.size	CapSense_CSD_InitializeEnabledBaselines, .-CapSense_CSD_InitializeEnabledBaselines
 460              		.section	.text.CapSense_CSD_UpdateBaselineNoThreshold,"ax",%progbits
 461              		.align	2
 462              		.global	CapSense_CSD_UpdateBaselineNoThreshold
 463              		.code	16
 464              		.thumb_func
 465              		.type	CapSense_CSD_UpdateBaselineNoThreshold, %function
 466              	CapSense_CSD_UpdateBaselineNoThreshold:
 467              	.LFB36:
 335:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 336:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 337:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 338:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_UpdateBaselineNoThreshold
 339:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 340:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 341:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 342:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Updates the CapSense_CSD_sensorBaseline[sensor] array element using the
 343:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by
 344:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 345:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  it in CapSense_CSD_sensorSignal[sensor].
 346:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold.
 347:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating; baseline is loaded
 348:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  with a raw count value if a signal is greater than zero and if signal is less
 349:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  than noise threshold.
 350:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline
 351:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  calculation.
 352:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 353:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API does not update the thresholds in the Smartsense Mode.
 354:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 355:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 356:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 357:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 358:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 359:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 360:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 361:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 362:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_widgetNumber[]  - stores widget numbers.
 363:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaseline[]    - used to store baseline value.
 364:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaselineLow[] - used to store fraction byte of
 365:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  baseline value.
 366:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[]      - used to store difference between
 367:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  current value of raw data and previous value of baseline.
 368:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData1[]    - used to store previous sample of
 369:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  any enabled raw data filter.
 370:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData2[]    - used to store before previous sample
 371:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 16


 372:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 373:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 374:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 375:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 376:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 377:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_UpdateBaselineNoThreshold(uint32 sensor)
 378:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 468              		.loc 1 378 0
 469              		.cfi_startproc
 470              		@ args = 0, pretend = 0, frame = 24
 471              		@ frame_needed = 1, uses_anonymous_args = 0
 472 0000 90B5     		push	{r4, r7, lr}
 473              		.cfi_def_cfa_offset 12
 474              		.cfi_offset 4, -12
 475              		.cfi_offset 7, -8
 476              		.cfi_offset 14, -4
 477 0002 87B0     		sub	sp, sp, #28
 478              		.cfi_def_cfa_offset 40
 479 0004 00AF     		add	r7, sp, #0
 480              		.cfi_def_cfa_register 7
 481 0006 7860     		str	r0, [r7, #4]
 379:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 calc;
 380:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 sign;
 381:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 tempRaw;
 382:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 filteredRawData;
 383:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 widget = CapSense_CSD_widgetNumber[sensor];
 482              		.loc 1 383 0
 483 0008 0F23     		movs	r3, #15
 484 000a FB18     		adds	r3, r7, r3
 485 000c 7049     		ldr	r1, .L26
 486 000e 7A68     		ldr	r2, [r7, #4]
 487 0010 8A18     		adds	r2, r1, r2
 488 0012 1278     		ldrb	r2, [r2]
 489 0014 1A70     		strb	r2, [r3]
 384:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 noiseThreshold;
 385:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 386:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 387:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 388:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(widget < CapSense_CSD_END_OF_WIDGETS_INDEX)
 389:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 390:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 391:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 392:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     noiseThreshold = CapSense_CSD_noiseThreshold[widget];
 490              		.loc 1 392 0
 491 0016 0F23     		movs	r3, #15
 492 0018 FB18     		adds	r3, r7, r3
 493 001a 1978     		ldrb	r1, [r3]
 494 001c 0C23     		movs	r3, #12
 495 001e FB18     		adds	r3, r7, r3
 496 0020 6C4A     		ldr	r2, .L26+4
 497 0022 4900     		lsls	r1, r1, #1
 498 0024 8A5A     		ldrh	r2, [r1, r2]
 499 0026 1A80     		strh	r2, [r3]
 393:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     filteredRawData = CapSense_CSD_sensorRaw[sensor];
 500              		.loc 1 393 0
 501 0028 1023     		movs	r3, #16
 502 002a FB18     		adds	r3, r7, r3
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 17


 503 002c 6A4A     		ldr	r2, .L26+8
 504 002e 7968     		ldr	r1, [r7, #4]
 505 0030 4900     		lsls	r1, r1, #1
 506 0032 8A5A     		ldrh	r2, [r1, r2]
 507 0034 1A80     		strh	r2, [r3]
 394:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 395:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_RAW_FILTER_MASK != 0u)
 396:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     if(CapSense_CSD_enableRawFilters != 0u)
 508              		.loc 1 396 0
 509 0036 694B     		ldr	r3, .L26+12
 510 0038 1B78     		ldrb	r3, [r3]
 511 003a 002B     		cmp	r3, #0
 512 003c 26D0     		beq	.L17
 397:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 398:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER)
 399:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             tempRaw = filteredRawData;
 513              		.loc 1 399 0
 514 003e 1223     		movs	r3, #18
 515 0040 FB18     		adds	r3, r7, r3
 516 0042 1022     		movs	r2, #16
 517 0044 BA18     		adds	r2, r7, r2
 518 0046 1288     		ldrh	r2, [r2]
 519 0048 1A80     		strh	r2, [r3]
 400:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             filteredRawData = CapSense_CSD_MedianFilter(filteredRawData, CapSense_CSD_rawFilterData
 520              		.loc 1 400 0
 521 004a 654B     		ldr	r3, .L26+16
 522 004c 7A68     		ldr	r2, [r7, #4]
 523 004e 5200     		lsls	r2, r2, #1
 524 0050 D15A     		ldrh	r1, [r2, r3]
 525 0052 644B     		ldr	r3, .L26+20
 526 0054 7A68     		ldr	r2, [r7, #4]
 527 0056 5200     		lsls	r2, r2, #1
 528 0058 D25A     		ldrh	r2, [r2, r3]
 529 005a 1023     		movs	r3, #16
 530 005c FC18     		adds	r4, r7, r3
 531 005e 1023     		movs	r3, #16
 532 0060 FB18     		adds	r3, r7, r3
 533 0062 1B88     		ldrh	r3, [r3]
 534 0064 1800     		movs	r0, r3
 535 0066 FFF7FEFF 		bl	CapSense_CSD_MedianFilter
 536 006a 0300     		movs	r3, r0
 537 006c 2380     		strh	r3, [r4]
 401:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                             CapSense_CSD_rawFilterData2[sensor]);
 402:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_rawFilterData2[sensor] = CapSense_CSD_rawFilterData1[sensor];
 538              		.loc 1 402 0
 539 006e 5C4B     		ldr	r3, .L26+16
 540 0070 7A68     		ldr	r2, [r7, #4]
 541 0072 5200     		lsls	r2, r2, #1
 542 0074 D15A     		ldrh	r1, [r2, r3]
 543 0076 5B4B     		ldr	r3, .L26+20
 544 0078 7A68     		ldr	r2, [r7, #4]
 545 007a 5200     		lsls	r2, r2, #1
 546 007c D152     		strh	r1, [r2, r3]
 403:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_rawFilterData1[sensor] = tempRaw;
 547              		.loc 1 403 0
 548 007e 584B     		ldr	r3, .L26+16
 549 0080 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 18


 550 0082 5200     		lsls	r2, r2, #1
 551 0084 1221     		movs	r1, #18
 552 0086 7918     		adds	r1, r7, r1
 553 0088 0988     		ldrh	r1, [r1]
 554 008a D152     		strh	r1, [r2, r3]
 555              	.L17:
 404:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 405:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER)
 406:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             tempRaw = filteredRawData;
 407:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             filteredRawData = CapSense_CSD_AveragingFilter(filteredRawData, CapSense_CSD_rawFilterD
 408:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                CapSense_CSD_rawFilterData2[sensor])
 409:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_rawFilterData2[sensor] = CapSense_CSD_rawFilterData1[sensor];
 410:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_rawFilterData1[sensor] = tempRaw;
 411:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 412:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER)
 413:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             filteredRawData = CapSense_CSD_IIR2Filter(filteredRawData, CapSense_CSD_rawFilterData1[
 414:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 415:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 416:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER)
 417:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             filteredRawData = CapSense_CSD_IIR4Filter(filteredRawData, CapSense_CSD_rawFilterData1[
 418:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 419:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 420:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_JITTER_FILTER)
 421:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             filteredRawData = CapSense_CSD_JitterFilter(filteredRawData, CapSense_CSD_rawFilterData
 422:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 423:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 424:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR8_FILTER)
 425:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             filteredRawData = CapSense_CSD_IIR8Filter(filteredRawData, CapSense_CSD_rawFilterData1[
 426:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 427:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 428:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR16_FILTER)
 429:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             filteredRawData = CapSense_CSD_IIR16Filter(filteredRawData, CapSense_CSD_rawFilterData1
 430:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 431:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 432:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #else
 433:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* No Raw filters */
 434:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif  /* (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) */
 435:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 436:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* (CapSense_CSD_RAW_FILTER_MASK != 0u) */
 437:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 438:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO)
 439:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         MeasureNoiseEnvelope_P4_v2_60(&CapSense_CSD_config, (uint8)sensor, CapSense_CSD_sensorRaw);
 440:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif /* (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO) */
 441:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 442:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Baseline calculation */
 443:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 444:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     if(filteredRawData >= CapSense_CSD_sensorBaseline[sensor])
 556              		.loc 1 444 0
 557 008c 564B     		ldr	r3, .L26+24
 558 008e 7A68     		ldr	r2, [r7, #4]
 559 0090 5200     		lsls	r2, r2, #1
 560 0092 D35A     		ldrh	r3, [r2, r3]
 561 0094 1022     		movs	r2, #16
 562 0096 BA18     		adds	r2, r7, r2
 563 0098 1288     		ldrh	r2, [r2]
 564 009a 9A42     		cmp	r2, r3
 565 009c 12D3     		bcc	.L18
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 19


 445:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 446:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_lowBaselineResetCnt[sensor] = 0u;
 566              		.loc 1 446 0
 567 009e 534A     		ldr	r2, .L26+28
 568 00a0 7B68     		ldr	r3, [r7, #4]
 569 00a2 D318     		adds	r3, r2, r3
 570 00a4 0022     		movs	r2, #0
 571 00a6 1A70     		strb	r2, [r3]
 447:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tempRaw = filteredRawData - CapSense_CSD_sensorBaseline[sensor];
 572              		.loc 1 447 0
 573 00a8 4F4B     		ldr	r3, .L26+24
 574 00aa 7A68     		ldr	r2, [r7, #4]
 575 00ac 5200     		lsls	r2, r2, #1
 576 00ae D25A     		ldrh	r2, [r2, r3]
 577 00b0 1223     		movs	r3, #18
 578 00b2 FB18     		adds	r3, r7, r3
 579 00b4 1021     		movs	r1, #16
 580 00b6 7918     		adds	r1, r7, r1
 581 00b8 0988     		ldrh	r1, [r1]
 582 00ba 8A1A     		subs	r2, r1, r2
 583 00bc 1A80     		strh	r2, [r3]
 448:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         sign = 1u;    /* Positive difference - Calculate the Signal */
 584              		.loc 1 448 0
 585 00be 0123     		movs	r3, #1
 586 00c0 7B61     		str	r3, [r7, #20]
 587 00c2 0CE0     		b	.L19
 588              	.L18:
 449:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 450:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     else
 451:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 452:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tempRaw = CapSense_CSD_sensorBaseline[sensor] - filteredRawData;
 589              		.loc 1 452 0
 590 00c4 484B     		ldr	r3, .L26+24
 591 00c6 7A68     		ldr	r2, [r7, #4]
 592 00c8 5200     		lsls	r2, r2, #1
 593 00ca D15A     		ldrh	r1, [r2, r3]
 594 00cc 1223     		movs	r3, #18
 595 00ce FB18     		adds	r3, r7, r3
 596 00d0 1022     		movs	r2, #16
 597 00d2 BA18     		adds	r2, r7, r2
 598 00d4 1288     		ldrh	r2, [r2]
 599 00d6 8A1A     		subs	r2, r1, r2
 600 00d8 1A80     		strh	r2, [r3]
 453:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         sign = 0u;    /* Negative difference - Do NOT calculate the Signal */
 601              		.loc 1 453 0
 602 00da 0023     		movs	r3, #0
 603 00dc 7B61     		str	r3, [r7, #20]
 604              	.L19:
 454:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 455:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 456:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE)
 457:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     if((sign == 0u) && (tempRaw > (uint16) CapSense_CSD_negativeNoiseThreshold[widget]))
 605              		.loc 1 457 0
 606 00de 7B69     		ldr	r3, [r7, #20]
 607 00e0 002B     		cmp	r3, #0
 608 00e2 2AD1     		bne	.L20
 609              		.loc 1 457 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 20


 610 00e4 0F23     		movs	r3, #15
 611 00e6 FB18     		adds	r3, r7, r3
 612 00e8 1A78     		ldrb	r2, [r3]
 613 00ea 414B     		ldr	r3, .L26+32
 614 00ec 5200     		lsls	r2, r2, #1
 615 00ee D35A     		ldrh	r3, [r2, r3]
 616 00f0 1222     		movs	r2, #18
 617 00f2 BA18     		adds	r2, r7, r2
 618 00f4 1288     		ldrh	r2, [r2]
 619 00f6 9A42     		cmp	r2, r3
 620 00f8 1FD9     		bls	.L20
 458:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #else
 459:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     if((sign == 0u) && (tempRaw > (uint16) CapSense_CSD_NEGATIVE_NOISE_THRESHOLD))
 460:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif /* (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE) */
 461:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 462:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(CapSense_CSD_lowBaselineResetCnt[sensor] >= CapSense_CSD_lowBaselineReset[sensor])
 621              		.loc 1 462 0 is_stmt 1
 622 00fa 3C4A     		ldr	r2, .L26+28
 623 00fc 7B68     		ldr	r3, [r7, #4]
 624 00fe D318     		adds	r3, r2, r3
 625 0100 1A78     		ldrb	r2, [r3]
 626 0102 3C49     		ldr	r1, .L26+36
 627 0104 7B68     		ldr	r3, [r7, #4]
 628 0106 CB18     		adds	r3, r1, r3
 629 0108 1B78     		ldrb	r3, [r3]
 630 010a 9A42     		cmp	r2, r3
 631 010c 09D3     		bcc	.L21
 463:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 464:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_BaseInit(sensor);
 632              		.loc 1 464 0
 633 010e 7B68     		ldr	r3, [r7, #4]
 634 0110 1800     		movs	r0, r3
 635 0112 FFF7FEFF 		bl	CapSense_CSD_BaseInit
 465:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_lowBaselineResetCnt[sensor] = 0u;
 636              		.loc 1 465 0
 637 0116 354A     		ldr	r2, .L26+28
 638 0118 7B68     		ldr	r3, [r7, #4]
 639 011a D318     		adds	r3, r2, r3
 640 011c 0022     		movs	r2, #0
 641 011e 1A70     		strb	r2, [r3]
 462:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 642              		.loc 1 462 0
 643 0120 3AE0     		b	.L23
 644              	.L21:
 466:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 467:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         else
 468:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 469:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_lowBaselineResetCnt[sensor]++;
 645              		.loc 1 469 0
 646 0122 324A     		ldr	r2, .L26+28
 647 0124 7B68     		ldr	r3, [r7, #4]
 648 0126 D318     		adds	r3, r2, r3
 649 0128 1B78     		ldrb	r3, [r3]
 650 012a 0133     		adds	r3, r3, #1
 651 012c D9B2     		uxtb	r1, r3
 652 012e 2F4A     		ldr	r2, .L26+28
 653 0130 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 21


 654 0132 D318     		adds	r3, r2, r3
 655 0134 0A1C     		adds	r2, r1, #0
 656 0136 1A70     		strb	r2, [r3]
 462:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 657              		.loc 1 462 0
 658 0138 2EE0     		b	.L23
 659              	.L20:
 470:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 471:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 472:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     else
 473:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 474:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE)
 475:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE)
 476:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Update Baseline if lower than noiseThreshold */
 477:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if ( (tempRaw <= noiseThreshold) ||
 478:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****              ((tempRaw < (uint16) CapSense_CSD_negativeNoiseThreshold[widget])
 479:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                && (sign == 0u)))
 480:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
 481:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #else
 482:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Update Baseline if lower than noiseThreshold */
 483:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if ( (tempRaw <= noiseThreshold) ||
 484:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                  ((tempRaw < (uint16) CapSense_CSD_NEGATIVE_NOISE_THRESHOLD)
 485:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                    && (sign == 0u)))
 486:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
 487:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE) */
 488:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE) */
 489:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Make full Baseline 23 bits */
 490:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 calc = (uint32) CapSense_CSD_sensorBaseline[sensor] << 8u;
 660              		.loc 1 490 0
 661 013a 2B4B     		ldr	r3, .L26+24
 662 013c 7A68     		ldr	r2, [r7, #4]
 663 013e 5200     		lsls	r2, r2, #1
 664 0140 D35A     		ldrh	r3, [r2, r3]
 665 0142 1B02     		lsls	r3, r3, #8
 666 0144 BB60     		str	r3, [r7, #8]
 491:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 calc |= (uint32) CapSense_CSD_sensorBaselineLow[sensor];
 667              		.loc 1 491 0
 668 0146 2C4A     		ldr	r2, .L26+40
 669 0148 7B68     		ldr	r3, [r7, #4]
 670 014a D318     		adds	r3, r2, r3
 671 014c 1B78     		ldrb	r3, [r3]
 672 014e 1A00     		movs	r2, r3
 673 0150 BB68     		ldr	r3, [r7, #8]
 674 0152 1343     		orrs	r3, r2
 675 0154 BB60     		str	r3, [r7, #8]
 492:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 493:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Add Raw Data to Baseline */
 494:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 calc += filteredRawData;
 676              		.loc 1 494 0
 677 0156 1023     		movs	r3, #16
 678 0158 FB18     		adds	r3, r7, r3
 679 015a 1B88     		ldrh	r3, [r3]
 680 015c BA68     		ldr	r2, [r7, #8]
 681 015e D318     		adds	r3, r2, r3
 682 0160 BB60     		str	r3, [r7, #8]
 495:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 496:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Sub the high Baseline */
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 22


 497:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 calc -= CapSense_CSD_sensorBaseline[sensor];
 683              		.loc 1 497 0
 684 0162 214B     		ldr	r3, .L26+24
 685 0164 7A68     		ldr	r2, [r7, #4]
 686 0166 5200     		lsls	r2, r2, #1
 687 0168 D35A     		ldrh	r3, [r2, r3]
 688 016a 1A00     		movs	r2, r3
 689 016c BB68     		ldr	r3, [r7, #8]
 690 016e 9B1A     		subs	r3, r3, r2
 691 0170 BB60     		str	r3, [r7, #8]
 498:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 499:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Put Baseline and BaselineLow */
 500:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 692              		.loc 1 500 0
 693 0172 BB68     		ldr	r3, [r7, #8]
 694 0174 1B0A     		lsrs	r3, r3, #8
 695 0176 99B2     		uxth	r1, r3
 696 0178 1B4B     		ldr	r3, .L26+24
 697 017a 7A68     		ldr	r2, [r7, #4]
 698 017c 5200     		lsls	r2, r2, #1
 699 017e D152     		strh	r1, [r2, r3]
 501:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorBaselineLow[sensor] = ((uint8) calc);
 700              		.loc 1 501 0
 701 0180 BB68     		ldr	r3, [r7, #8]
 702 0182 D9B2     		uxtb	r1, r3
 703 0184 1C4A     		ldr	r2, .L26+40
 704 0186 7B68     		ldr	r3, [r7, #4]
 705 0188 D318     		adds	r3, r2, r3
 706 018a 0A1C     		adds	r2, r1, #0
 707 018c 1A70     		strb	r2, [r3]
 502:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 503:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 CapSense_CSD_lowBaselineResetCnt[sensor] = 0u;
 708              		.loc 1 503 0
 709 018e 174A     		ldr	r2, .L26+28
 710 0190 7B68     		ldr	r3, [r7, #4]
 711 0192 D318     		adds	r3, r2, r3
 712 0194 0022     		movs	r2, #0
 713 0196 1A70     		strb	r2, [r3]
 714              	.L23:
 504:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE)
 505:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
 506:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE) */
 507:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 508:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 509:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Calculate Signal if positive difference > noiseThreshold */
 510:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (sign != 0u))
 715              		.loc 1 510 0
 716 0198 1223     		movs	r3, #18
 717 019a FA18     		adds	r2, r7, r3
 718 019c 0C23     		movs	r3, #12
 719 019e FB18     		adds	r3, r7, r3
 720 01a0 1288     		ldrh	r2, [r2]
 721 01a2 1B88     		ldrh	r3, [r3]
 722 01a4 9A42     		cmp	r2, r3
 723 01a6 0AD9     		bls	.L24
 724              		.loc 1 510 0 is_stmt 0 discriminator 1
 725 01a8 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 23


 726 01aa 002B     		cmp	r3, #0
 727 01ac 07D0     		beq	.L24
 511:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 512:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_SIGNAL_SIZE == CapSense_CSD_SIGNAL_SIZE_UINT8)
 513:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Over flow defence for uint8 */
 514:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if (tempRaw > 0xFFu)
 515:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
 516:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorSignal[sensor] = 0xFFu;
 517:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
 518:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             else
 519:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
 520:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorSignal[sensor] = ((uint8) tempRaw);
 521:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
 522:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #else
 523:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_sensorSignal[sensor] = ((uint16) tempRaw);
 728              		.loc 1 523 0 is_stmt 1
 729 01ae 134B     		ldr	r3, .L26+44
 730 01b0 7A68     		ldr	r2, [r7, #4]
 731 01b2 5200     		lsls	r2, r2, #1
 732 01b4 1221     		movs	r1, #18
 733 01b6 7918     		adds	r1, r7, r1
 734 01b8 0988     		ldrh	r1, [r1]
 735 01ba D152     		strh	r1, [r2, r3]
 736 01bc 04E0     		b	.L25
 737              	.L24:
 524:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif  /* (CapSense_CSD_SIGNAL_SIZE == CapSense_CSD_SIGNAL_SIZE_UINT8) */
 525:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 526:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     else
 527:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 528:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Signal is zero */
 529:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_sensorSignal[sensor] = 0u;
 738              		.loc 1 529 0
 739 01be 0F4B     		ldr	r3, .L26+44
 740 01c0 7A68     		ldr	r2, [r7, #4]
 741 01c2 5200     		lsls	r2, r2, #1
 742 01c4 0021     		movs	r1, #0
 743 01c6 D152     		strh	r1, [r2, r3]
 744              	.L25:
 530:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 531:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 532:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 533:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 534:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 535:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 536:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 745              		.loc 1 536 0
 746 01c8 C046     		nop
 747 01ca BD46     		mov	sp, r7
 748 01cc 07B0     		add	sp, sp, #28
 749              		@ sp needed
 750 01ce 90BD     		pop	{r4, r7, pc}
 751              	.L27:
 752              		.align	2
 753              	.L26:
 754 01d0 00000000 		.word	CapSense_CSD_widgetNumber
 755 01d4 00000000 		.word	CapSense_CSD_noiseThreshold
 756 01d8 00000000 		.word	CapSense_CSD_sensorRaw
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 24


 757 01dc 00000000 		.word	CapSense_CSD_enableRawFilters
 758 01e0 00000000 		.word	CapSense_CSD_rawFilterData1
 759 01e4 00000000 		.word	CapSense_CSD_rawFilterData2
 760 01e8 00000000 		.word	CapSense_CSD_sensorBaseline
 761 01ec 00000000 		.word	CapSense_CSD_lowBaselineResetCnt
 762 01f0 00000000 		.word	CapSense_CSD_negativeNoiseThreshold
 763 01f4 00000000 		.word	CapSense_CSD_lowBaselineReset
 764 01f8 00000000 		.word	CapSense_CSD_sensorBaselineLow
 765 01fc 00000000 		.word	CapSense_CSD_sensorSignal
 766              		.cfi_endproc
 767              	.LFE36:
 768              		.size	CapSense_CSD_UpdateBaselineNoThreshold, .-CapSense_CSD_UpdateBaselineNoThreshold
 769              		.section	.text.CapSense_CSD_UpdateSensorBaseline,"ax",%progbits
 770              		.align	2
 771              		.global	CapSense_CSD_UpdateSensorBaseline
 772              		.code	16
 773              		.thumb_func
 774              		.type	CapSense_CSD_UpdateSensorBaseline, %function
 775              	CapSense_CSD_UpdateSensorBaseline:
 776              	.LFB37:
 537:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 538:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 539:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 540:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_UpdateSensorBaseline
 541:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 542:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 543:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 544:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Updates the CapSense_CSD_sensorBaseline[sensor] array element using the
 545:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by
 546:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 547:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  it in CapSense_CSD_sensorSignal[sensor].
 548:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold.
 549:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating.
 550:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Baseline is loaded with raw count value if a signal is greater than zero and
 551:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  if signal is less than noise threshold.
 552:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline
 553:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  calculation.
 554:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API updates the thresholds in the Smartsense Mode.
 555:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 556:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 557:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 558:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 559:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 560:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 561:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 562:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 563:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_widgetNumber[]  - stores widget numbers.
 564:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 565:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 566:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 567:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 568:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 569:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****  void CapSense_CSD_UpdateSensorBaseline(uint32 sensor)
 570:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 777              		.loc 1 570 0
 778              		.cfi_startproc
 779              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 25


 780              		@ frame_needed = 1, uses_anonymous_args = 0
 781 0000 80B5     		push	{r7, lr}
 782              		.cfi_def_cfa_offset 8
 783              		.cfi_offset 7, -8
 784              		.cfi_offset 14, -4
 785 0002 82B0     		sub	sp, sp, #8
 786              		.cfi_def_cfa_offset 16
 787 0004 00AF     		add	r7, sp, #0
 788              		.cfi_def_cfa_register 7
 789 0006 7860     		str	r0, [r7, #4]
 571:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 572:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 widget;
 573:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 574:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         widget = CapSense_CSD_widgetNumber[sensor];
 575:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 576:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 577:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(widget < CapSense_CSD_END_OF_WIDGETS_INDEX)
 578:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 579:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 580:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 581:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO)
 582:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_UpdateThresholds(sensor);
 583:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif /* (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO) */
 584:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 585:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_UpdateBaselineNoThreshold(sensor);
 790              		.loc 1 585 0
 791 0008 7B68     		ldr	r3, [r7, #4]
 792 000a 1800     		movs	r0, r3
 793 000c FFF7FEFF 		bl	CapSense_CSD_UpdateBaselineNoThreshold
 586:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 587:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 588:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 589:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 590:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 591:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 794              		.loc 1 591 0
 795 0010 C046     		nop
 796 0012 BD46     		mov	sp, r7
 797 0014 02B0     		add	sp, sp, #8
 798              		@ sp needed
 799 0016 80BD     		pop	{r7, pc}
 800              		.cfi_endproc
 801              	.LFE37:
 802              		.size	CapSense_CSD_UpdateSensorBaseline, .-CapSense_CSD_UpdateSensorBaseline
 803              		.section	.text.CapSense_CSD_UpdateEnabledBaselines,"ax",%progbits
 804              		.align	2
 805              		.global	CapSense_CSD_UpdateEnabledBaselines
 806              		.code	16
 807              		.thumb_func
 808              		.type	CapSense_CSD_UpdateEnabledBaselines, %function
 809              	CapSense_CSD_UpdateEnabledBaselines:
 810              	.LFB38:
 592:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 593:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 594:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 595:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_UpdateEnabledBaselines
 596:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 26


 597:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 598:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 599:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Checks CapSense_CSD_sensorEnableMask[] array and calls the
 600:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_UpdateSensorBaseline function to update the baselines
 601:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  for the enabled sensors.
 602:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 603:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 604:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 605:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 606:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 607:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 608:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 609:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 610:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[] - used to store the sensor scanning
 611:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  state.
 612:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors
 613:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 614:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for
 615:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 616:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  0 - sensor doesn't scan by CapSense_CSD_ScanEnabledWidgets().
 617:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  1 - sensor scans by CapSense_CSD_ScanEnabledWidgets().
 618:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 619:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 620:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 621:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 622:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 623:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****  void CapSense_CSD_UpdateEnabledBaselines(void)
 624:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 811              		.loc 1 624 0
 812              		.cfi_startproc
 813              		@ args = 0, pretend = 0, frame = 8
 814              		@ frame_needed = 1, uses_anonymous_args = 0
 815 0000 80B5     		push	{r7, lr}
 816              		.cfi_def_cfa_offset 8
 817              		.cfi_offset 7, -8
 818              		.cfi_offset 14, -4
 819 0002 82B0     		sub	sp, sp, #8
 820              		.cfi_def_cfa_offset 16
 821 0004 00AF     		add	r7, sp, #0
 822              		.cfi_def_cfa_register 7
 625:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 i;
 626:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 isSensorEnabled;
 627:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 628:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_SENSOR_COUNT; i++)
 823              		.loc 1 628 0
 824 0006 0023     		movs	r3, #0
 825 0008 7B60     		str	r3, [r7, #4]
 826 000a 11E0     		b	.L30
 827              	.L32:
 629:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 630:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         isSensorEnabled = CapSense_CSD_GetBitValue(CapSense_CSD_sensorEnableMask, i);
 828              		.loc 1 630 0
 829 000c 7A68     		ldr	r2, [r7, #4]
 830 000e 0C4B     		ldr	r3, .L33
 831 0010 1100     		movs	r1, r2
 832 0012 1800     		movs	r0, r3
 833 0014 FFF7FEFF 		bl	CapSense_CSD_GetBitValue
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 27


 834 0018 0300     		movs	r3, r0
 835 001a 3B60     		str	r3, [r7]
 631:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 632:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(0u != isSensorEnabled)
 836              		.loc 1 632 0
 837 001c 3B68     		ldr	r3, [r7]
 838 001e 002B     		cmp	r3, #0
 839 0020 03D0     		beq	.L31
 633:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 634:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_UpdateSensorBaseline(i);
 840              		.loc 1 634 0
 841 0022 7B68     		ldr	r3, [r7, #4]
 842 0024 1800     		movs	r0, r3
 843 0026 FFF7FEFF 		bl	CapSense_CSD_UpdateSensorBaseline
 844              	.L31:
 628:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 845              		.loc 1 628 0 discriminator 2
 846 002a 7B68     		ldr	r3, [r7, #4]
 847 002c 0133     		adds	r3, r3, #1
 848 002e 7B60     		str	r3, [r7, #4]
 849              	.L30:
 628:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 850              		.loc 1 628 0 is_stmt 0 discriminator 1
 851 0030 7B68     		ldr	r3, [r7, #4]
 852 0032 0B2B     		cmp	r3, #11
 853 0034 EAD9     		bls	.L32
 635:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 636:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 637:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 854              		.loc 1 637 0 is_stmt 1
 855 0036 C046     		nop
 856 0038 BD46     		mov	sp, r7
 857 003a 02B0     		add	sp, sp, #8
 858              		@ sp needed
 859 003c 80BD     		pop	{r7, pc}
 860              	.L34:
 861 003e C046     		.align	2
 862              	.L33:
 863 0040 00000000 		.word	CapSense_CSD_sensorEnableMask
 864              		.cfi_endproc
 865              	.LFE38:
 866              		.size	CapSense_CSD_UpdateEnabledBaselines, .-CapSense_CSD_UpdateEnabledBaselines
 867              		.section	.text.CapSense_CSD_UpdateWidgetBaseline,"ax",%progbits
 868              		.align	2
 869              		.global	CapSense_CSD_UpdateWidgetBaseline
 870              		.code	16
 871              		.thumb_func
 872              		.type	CapSense_CSD_UpdateWidgetBaseline, %function
 873              	CapSense_CSD_UpdateWidgetBaseline:
 874              	.LFB39:
 638:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 639:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 640:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_UpdateWidgetBaseline
 641:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 642:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 643:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 644:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Checks CapSense_CSD_sensorEnableMask[] array and calls the
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 28


 645:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_UpdateSensorBaseline function to update the baselines
 646:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  for the enabled sensors that belong to widget.
 647:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 648:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 649:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  widget:  Widget number.
 650:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 651:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 652:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 653:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 654:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 655:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[] - used to store the sensor scanning
 656:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  state.
 657:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors
 658:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 659:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for
 660:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 661:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  0 - sensor doesn't scan by CapSense_CSD_ScanEnabledWidgets().
 662:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  1 - sensor scans by CapSense_CSD_ScanEnabledWidgets().
 663:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 664:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 665:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 666:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 667:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 668:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_UpdateWidgetBaseline(uint32 widget)
 669:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 875              		.loc 1 669 0
 876              		.cfi_startproc
 877              		@ args = 0, pretend = 0, frame = 32
 878              		@ frame_needed = 1, uses_anonymous_args = 0
 879 0000 80B5     		push	{r7, lr}
 880              		.cfi_def_cfa_offset 8
 881              		.cfi_offset 7, -8
 882              		.cfi_offset 14, -4
 883 0002 88B0     		sub	sp, sp, #32
 884              		.cfi_def_cfa_offset 40
 885 0004 00AF     		add	r7, sp, #0
 886              		.cfi_def_cfa_register 7
 887 0006 7860     		str	r0, [r7, #4]
 670:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 sensorsPerWidget;
 671:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 firstSensor;
 672:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 lastSensor;
 673:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 i;
 674:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 isSensorEnabled;
 675:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 676:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Get number of sensors in widget */
 677:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     sensorsPerWidget = CapSense_CSD_numberOfSensors[widget];
 888              		.loc 1 677 0
 889 0008 174A     		ldr	r2, .L39
 890 000a 7B68     		ldr	r3, [r7, #4]
 891 000c D318     		adds	r3, r2, r3
 892 000e 1B78     		ldrb	r3, [r3]
 893 0010 BB61     		str	r3, [r7, #24]
 678:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 679:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Get first sensor in widget */
 680:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     firstSensor = CapSense_CSD_rawDataIndex[widget];
 894              		.loc 1 680 0
 895 0012 164A     		ldr	r2, .L39+4
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 29


 896 0014 7B68     		ldr	r3, [r7, #4]
 897 0016 D318     		adds	r3, r2, r3
 898 0018 1B78     		ldrb	r3, [r3]
 899 001a 7B61     		str	r3, [r7, #20]
 681:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 682:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Get last sensor in widget */
 683:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     lastSensor = (CapSense_CSD_rawDataIndex[widget] + sensorsPerWidget);
 900              		.loc 1 683 0
 901 001c 134A     		ldr	r2, .L39+4
 902 001e 7B68     		ldr	r3, [r7, #4]
 903 0020 D318     		adds	r3, r2, r3
 904 0022 1B78     		ldrb	r3, [r3]
 905 0024 1A00     		movs	r2, r3
 906 0026 BB69     		ldr	r3, [r7, #24]
 907 0028 D318     		adds	r3, r2, r3
 908 002a 3B61     		str	r3, [r7, #16]
 684:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 685:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 909              		.loc 1 685 0
 910 002c 7B69     		ldr	r3, [r7, #20]
 911 002e FB61     		str	r3, [r7, #28]
 912 0030 11E0     		b	.L36
 913              	.L38:
 686:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 687:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         isSensorEnabled = CapSense_CSD_GetBitValue(CapSense_CSD_sensorEnableMask, i);
 914              		.loc 1 687 0
 915 0032 FA69     		ldr	r2, [r7, #28]
 916 0034 0E4B     		ldr	r3, .L39+8
 917 0036 1100     		movs	r1, r2
 918 0038 1800     		movs	r0, r3
 919 003a FFF7FEFF 		bl	CapSense_CSD_GetBitValue
 920 003e 0300     		movs	r3, r0
 921 0040 FB60     		str	r3, [r7, #12]
 688:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 689:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(0u != isSensorEnabled)
 922              		.loc 1 689 0
 923 0042 FB68     		ldr	r3, [r7, #12]
 924 0044 002B     		cmp	r3, #0
 925 0046 03D0     		beq	.L37
 690:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 691:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_UpdateSensorBaseline(i);
 926              		.loc 1 691 0
 927 0048 FB69     		ldr	r3, [r7, #28]
 928 004a 1800     		movs	r0, r3
 929 004c FFF7FEFF 		bl	CapSense_CSD_UpdateSensorBaseline
 930              	.L37:
 685:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 931              		.loc 1 685 0 discriminator 2
 932 0050 FB69     		ldr	r3, [r7, #28]
 933 0052 0133     		adds	r3, r3, #1
 934 0054 FB61     		str	r3, [r7, #28]
 935              	.L36:
 685:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 936              		.loc 1 685 0 is_stmt 0 discriminator 1
 937 0056 FA69     		ldr	r2, [r7, #28]
 938 0058 3B69     		ldr	r3, [r7, #16]
 939 005a 9A42     		cmp	r2, r3
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 30


 940 005c E9D3     		bcc	.L38
 692:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 693:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 694:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 941              		.loc 1 694 0 is_stmt 1
 942 005e C046     		nop
 943 0060 BD46     		mov	sp, r7
 944 0062 08B0     		add	sp, sp, #32
 945              		@ sp needed
 946 0064 80BD     		pop	{r7, pc}
 947              	.L40:
 948 0066 C046     		.align	2
 949              	.L39:
 950 0068 00000000 		.word	CapSense_CSD_numberOfSensors
 951 006c 00000000 		.word	CapSense_CSD_rawDataIndex
 952 0070 00000000 		.word	CapSense_CSD_sensorEnableMask
 953              		.cfi_endproc
 954              	.LFE39:
 955              		.size	CapSense_CSD_UpdateWidgetBaseline, .-CapSense_CSD_UpdateWidgetBaseline
 956              		.section	.text.CapSense_CSD_GetBaselineData,"ax",%progbits
 957              		.align	2
 958              		.global	CapSense_CSD_GetBaselineData
 959              		.code	16
 960              		.thumb_func
 961              		.type	CapSense_CSD_GetBaselineData, %function
 962              	CapSense_CSD_GetBaselineData:
 963              	.LFB40:
 695:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 696:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 697:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 698:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetBaselineData
 699:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 700:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 701:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 702:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This function reads the sensor baseline from the component.
 703:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 704:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 705:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 706:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 707:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 708:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the baseline value of the sensor indicated by an argument.
 709:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 710:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 711:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaseline[] - the array with an initial values by scanning
 712:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 713:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 714:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 715:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 716:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 717:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint16 CapSense_CSD_GetBaselineData(uint32 sensor)
 718:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 964              		.loc 1 718 0
 965              		.cfi_startproc
 966              		@ args = 0, pretend = 0, frame = 8
 967              		@ frame_needed = 1, uses_anonymous_args = 0
 968 0000 80B5     		push	{r7, lr}
 969              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 31


 970              		.cfi_offset 7, -8
 971              		.cfi_offset 14, -4
 972 0002 82B0     		sub	sp, sp, #8
 973              		.cfi_def_cfa_offset 16
 974 0004 00AF     		add	r7, sp, #0
 975              		.cfi_def_cfa_register 7
 976 0006 7860     		str	r0, [r7, #4]
 719:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return (CapSense_CSD_sensorBaseline[sensor]);
 977              		.loc 1 719 0
 978 0008 034B     		ldr	r3, .L43
 979 000a 7A68     		ldr	r2, [r7, #4]
 980 000c 5200     		lsls	r2, r2, #1
 981 000e D35A     		ldrh	r3, [r2, r3]
 720:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 982              		.loc 1 720 0
 983 0010 1800     		movs	r0, r3
 984 0012 BD46     		mov	sp, r7
 985 0014 02B0     		add	sp, sp, #8
 986              		@ sp needed
 987 0016 80BD     		pop	{r7, pc}
 988              	.L44:
 989              		.align	2
 990              	.L43:
 991 0018 00000000 		.word	CapSense_CSD_sensorBaseline
 992              		.cfi_endproc
 993              	.LFE40:
 994              		.size	CapSense_CSD_GetBaselineData, .-CapSense_CSD_GetBaselineData
 995              		.section	.text.CapSense_CSD_SetBaselineData,"ax",%progbits
 996              		.align	2
 997              		.global	CapSense_CSD_SetBaselineData
 998              		.code	16
 999              		.thumb_func
 1000              		.type	CapSense_CSD_SetBaselineData, %function
 1001              	CapSense_CSD_SetBaselineData:
 1002              	.LFB41:
 721:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 722:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 723:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 724:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_SetBaselineData
 725:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 726:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 727:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 728:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API writes the data value passed as an argument to the sensor baseline array.
 729:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 730:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 731:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 732:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  data:    Sensor baseline.
 733:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 734:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 735:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None.
 736:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 737:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 738:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaseline[] - the array with initial values by scanning
 739:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 740:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 741:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 742:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 32


 743:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 744:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_SetBaselineData(uint32 sensor, uint16 data)
 745:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1003              		.loc 1 745 0
 1004              		.cfi_startproc
 1005              		@ args = 0, pretend = 0, frame = 8
 1006              		@ frame_needed = 1, uses_anonymous_args = 0
 1007 0000 80B5     		push	{r7, lr}
 1008              		.cfi_def_cfa_offset 8
 1009              		.cfi_offset 7, -8
 1010              		.cfi_offset 14, -4
 1011 0002 82B0     		sub	sp, sp, #8
 1012              		.cfi_def_cfa_offset 16
 1013 0004 00AF     		add	r7, sp, #0
 1014              		.cfi_def_cfa_register 7
 1015 0006 7860     		str	r0, [r7, #4]
 1016 0008 0A00     		movs	r2, r1
 1017 000a BB1C     		adds	r3, r7, #2
 1018 000c 1A80     		strh	r2, [r3]
 746:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_sensorBaseline[sensor] = data;
 1019              		.loc 1 746 0
 1020 000e 054B     		ldr	r3, .L46
 1021 0010 7A68     		ldr	r2, [r7, #4]
 1022 0012 5200     		lsls	r2, r2, #1
 1023 0014 B91C     		adds	r1, r7, #2
 1024 0016 0988     		ldrh	r1, [r1]
 1025 0018 D152     		strh	r1, [r2, r3]
 747:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1026              		.loc 1 747 0
 1027 001a C046     		nop
 1028 001c BD46     		mov	sp, r7
 1029 001e 02B0     		add	sp, sp, #8
 1030              		@ sp needed
 1031 0020 80BD     		pop	{r7, pc}
 1032              	.L47:
 1033 0022 C046     		.align	2
 1034              	.L46:
 1035 0024 00000000 		.word	CapSense_CSD_sensorBaseline
 1036              		.cfi_endproc
 1037              	.LFE41:
 1038              		.size	CapSense_CSD_SetBaselineData, .-CapSense_CSD_SetBaselineData
 1039              		.section	.text.CapSense_CSD_GetDiffCountData,"ax",%progbits
 1040              		.align	2
 1041              		.global	CapSense_CSD_GetDiffCountData
 1042              		.code	16
 1043              		.thumb_func
 1044              		.type	CapSense_CSD_GetDiffCountData, %function
 1045              	CapSense_CSD_GetDiffCountData:
 1046              	.LFB42:
 748:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 749:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 750:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 751:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetDiffCountData
 752:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 753:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 754:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 755:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This function returns the Sensor Signal from the component.
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 33


 756:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 757:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 758:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 759:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 760:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 761:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the difference count value of the sensor indicated by the
 762:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  argument.
 763:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 764:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 765:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[] - the array with difference counts for sensors
 766:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 767:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 768:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 769:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 770:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 771:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint16 CapSense_CSD_GetDiffCountData(uint32 sensor)
 772:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1047              		.loc 1 772 0
 1048              		.cfi_startproc
 1049              		@ args = 0, pretend = 0, frame = 8
 1050              		@ frame_needed = 1, uses_anonymous_args = 0
 1051 0000 80B5     		push	{r7, lr}
 1052              		.cfi_def_cfa_offset 8
 1053              		.cfi_offset 7, -8
 1054              		.cfi_offset 14, -4
 1055 0002 82B0     		sub	sp, sp, #8
 1056              		.cfi_def_cfa_offset 16
 1057 0004 00AF     		add	r7, sp, #0
 1058              		.cfi_def_cfa_register 7
 1059 0006 7860     		str	r0, [r7, #4]
 773:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return (CapSense_CSD_sensorSignal[sensor]);
 1060              		.loc 1 773 0
 1061 0008 034B     		ldr	r3, .L50
 1062 000a 7A68     		ldr	r2, [r7, #4]
 1063 000c 5200     		lsls	r2, r2, #1
 1064 000e D35A     		ldrh	r3, [r2, r3]
 774:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1065              		.loc 1 774 0
 1066 0010 1800     		movs	r0, r3
 1067 0012 BD46     		mov	sp, r7
 1068 0014 02B0     		add	sp, sp, #8
 1069              		@ sp needed
 1070 0016 80BD     		pop	{r7, pc}
 1071              	.L51:
 1072              		.align	2
 1073              	.L50:
 1074 0018 00000000 		.word	CapSense_CSD_sensorSignal
 1075              		.cfi_endproc
 1076              	.LFE42:
 1077              		.size	CapSense_CSD_GetDiffCountData, .-CapSense_CSD_GetDiffCountData
 1078              		.section	.text.CapSense_CSD_SetDiffCountData,"ax",%progbits
 1079              		.align	2
 1080              		.global	CapSense_CSD_SetDiffCountData
 1081              		.code	16
 1082              		.thumb_func
 1083              		.type	CapSense_CSD_SetDiffCountData, %function
 1084              	CapSense_CSD_SetDiffCountData:
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 34


 1085              	.LFB43:
 775:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 776:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 777:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 778:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_SetDiffCountData
 779:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 780:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 781:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 782:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API writes the data value passed as an argument to the sensor signal array.
 783:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 784:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 785:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 786:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  value:   Sensor signal.
 787:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 788:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 789:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None.
 790:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 791:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 792:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[] - the array with difference counts for sensors
 793:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 794:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 795:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 796:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 797:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 798:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_SetDiffCountData(uint32 sensor, uint16 value)
 799:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1086              		.loc 1 799 0
 1087              		.cfi_startproc
 1088              		@ args = 0, pretend = 0, frame = 8
 1089              		@ frame_needed = 1, uses_anonymous_args = 0
 1090 0000 80B5     		push	{r7, lr}
 1091              		.cfi_def_cfa_offset 8
 1092              		.cfi_offset 7, -8
 1093              		.cfi_offset 14, -4
 1094 0002 82B0     		sub	sp, sp, #8
 1095              		.cfi_def_cfa_offset 16
 1096 0004 00AF     		add	r7, sp, #0
 1097              		.cfi_def_cfa_register 7
 1098 0006 7860     		str	r0, [r7, #4]
 1099 0008 0A00     		movs	r2, r1
 1100 000a BB1C     		adds	r3, r7, #2
 1101 000c 1A80     		strh	r2, [r3]
 800:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_sensorSignal[sensor] = value;
 1102              		.loc 1 800 0
 1103 000e 054B     		ldr	r3, .L53
 1104 0010 7A68     		ldr	r2, [r7, #4]
 1105 0012 5200     		lsls	r2, r2, #1
 1106 0014 B91C     		adds	r1, r7, #2
 1107 0016 0988     		ldrh	r1, [r1]
 1108 0018 D152     		strh	r1, [r2, r3]
 801:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1109              		.loc 1 801 0
 1110 001a C046     		nop
 1111 001c BD46     		mov	sp, r7
 1112 001e 02B0     		add	sp, sp, #8
 1113              		@ sp needed
 1114 0020 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 35


 1115              	.L54:
 1116 0022 C046     		.align	2
 1117              	.L53:
 1118 0024 00000000 		.word	CapSense_CSD_sensorSignal
 1119              		.cfi_endproc
 1120              	.LFE43:
 1121              		.size	CapSense_CSD_SetDiffCountData, .-CapSense_CSD_SetDiffCountData
 1122              		.section	.text.CapSense_CSD_GetFingerThreshold,"ax",%progbits
 1123              		.align	2
 1124              		.global	CapSense_CSD_GetFingerThreshold
 1125              		.code	16
 1126              		.thumb_func
 1127              		.type	CapSense_CSD_GetFingerThreshold, %function
 1128              	CapSense_CSD_GetFingerThreshold:
 1129              	.LFB44:
 802:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 803:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 804:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 805:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetFingerThreshold
 806:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 807:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 808:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 809:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This function reads the finger threshold from the component.
 810:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 811:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 812:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  widget:  widget number.
 813:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 814:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 815:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the finger threshold of the widget indicated by the argument.
 816:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 817:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 818:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_fingerThreshold[] - This array contains the level of signal
 819:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  for each widget that is determined if a finger is present on the widget.
 820:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 821:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 822:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 823:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 824:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 825:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint16 CapSense_CSD_GetFingerThreshold(uint32 widget)
 826:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1130              		.loc 1 826 0
 1131              		.cfi_startproc
 1132              		@ args = 0, pretend = 0, frame = 8
 1133              		@ frame_needed = 1, uses_anonymous_args = 0
 1134 0000 80B5     		push	{r7, lr}
 1135              		.cfi_def_cfa_offset 8
 1136              		.cfi_offset 7, -8
 1137              		.cfi_offset 14, -4
 1138 0002 82B0     		sub	sp, sp, #8
 1139              		.cfi_def_cfa_offset 16
 1140 0004 00AF     		add	r7, sp, #0
 1141              		.cfi_def_cfa_register 7
 1142 0006 7860     		str	r0, [r7, #4]
 827:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return(CapSense_CSD_fingerThreshold[widget]);
 1143              		.loc 1 827 0
 1144 0008 034B     		ldr	r3, .L57
 1145 000a 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 36


 1146 000c 5200     		lsls	r2, r2, #1
 1147 000e D35A     		ldrh	r3, [r2, r3]
 828:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1148              		.loc 1 828 0
 1149 0010 1800     		movs	r0, r3
 1150 0012 BD46     		mov	sp, r7
 1151 0014 02B0     		add	sp, sp, #8
 1152              		@ sp needed
 1153 0016 80BD     		pop	{r7, pc}
 1154              	.L58:
 1155              		.align	2
 1156              	.L57:
 1157 0018 00000000 		.word	CapSense_CSD_fingerThreshold
 1158              		.cfi_endproc
 1159              	.LFE44:
 1160              		.size	CapSense_CSD_GetFingerThreshold, .-CapSense_CSD_GetFingerThreshold
 1161              		.section	.text.CapSense_CSD_GetNoiseThreshold,"ax",%progbits
 1162              		.align	2
 1163              		.global	CapSense_CSD_GetNoiseThreshold
 1164              		.code	16
 1165              		.thumb_func
 1166              		.type	CapSense_CSD_GetNoiseThreshold, %function
 1167              	CapSense_CSD_GetNoiseThreshold:
 1168              	.LFB45:
 829:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 830:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 831:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 832:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetNoiseThreshold
 833:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 834:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 835:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 836:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This function reads the noise threshold from the component.
 837:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 838:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 839:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  widget:  widget number.
 840:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 841:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 842:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the noise threshold of the widget indicated by the argument.
 843:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 844:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 845:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_noiseThreshold[] - This array contains the level of signal
 846:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  for each widget that determines the level of noise in the capacitive scan.
 847:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 848:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 849:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 850:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 851:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 852:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint16 CapSense_CSD_GetNoiseThreshold(uint32 widget)
 853:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1169              		.loc 1 853 0
 1170              		.cfi_startproc
 1171              		@ args = 0, pretend = 0, frame = 8
 1172              		@ frame_needed = 1, uses_anonymous_args = 0
 1173 0000 80B5     		push	{r7, lr}
 1174              		.cfi_def_cfa_offset 8
 1175              		.cfi_offset 7, -8
 1176              		.cfi_offset 14, -4
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 37


 1177 0002 82B0     		sub	sp, sp, #8
 1178              		.cfi_def_cfa_offset 16
 1179 0004 00AF     		add	r7, sp, #0
 1180              		.cfi_def_cfa_register 7
 1181 0006 7860     		str	r0, [r7, #4]
 854:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return (CapSense_CSD_noiseThreshold[widget]);
 1182              		.loc 1 854 0
 1183 0008 034B     		ldr	r3, .L61
 1184 000a 7A68     		ldr	r2, [r7, #4]
 1185 000c 5200     		lsls	r2, r2, #1
 1186 000e D35A     		ldrh	r3, [r2, r3]
 855:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1187              		.loc 1 855 0
 1188 0010 1800     		movs	r0, r3
 1189 0012 BD46     		mov	sp, r7
 1190 0014 02B0     		add	sp, sp, #8
 1191              		@ sp needed
 1192 0016 80BD     		pop	{r7, pc}
 1193              	.L62:
 1194              		.align	2
 1195              	.L61:
 1196 0018 00000000 		.word	CapSense_CSD_noiseThreshold
 1197              		.cfi_endproc
 1198              	.LFE45:
 1199              		.size	CapSense_CSD_GetNoiseThreshold, .-CapSense_CSD_GetNoiseThreshold
 1200              		.section	.text.CapSense_CSD_GetFingerHysteresis,"ax",%progbits
 1201              		.align	2
 1202              		.global	CapSense_CSD_GetFingerHysteresis
 1203              		.code	16
 1204              		.thumb_func
 1205              		.type	CapSense_CSD_GetFingerHysteresis, %function
 1206              	CapSense_CSD_GetFingerHysteresis:
 1207              	.LFB46:
 856:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 857:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 858:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 859:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetFingerHysteresis
 860:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 861:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 862:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 863:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This function reads the Hysteresis value from the component.
 864:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 865:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 866:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  widget:  widget number.
 867:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 868:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 869:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the Hysteresis of the widget indicated by the argument.
 870:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 871:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 872:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_hysteresis[] - This array contains the hysteresis value
 873:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *   for each widget.
 874:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_widgetNumberSld - structure with dynamic sliders' parameters.
 875:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 876:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 877:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 878:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 879:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 38


 880:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint16 CapSense_CSD_GetFingerHysteresis(uint32 widget)
 881:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1208              		.loc 1 881 0
 1209              		.cfi_startproc
 1210              		@ args = 0, pretend = 0, frame = 8
 1211              		@ frame_needed = 1, uses_anonymous_args = 0
 1212 0000 80B5     		push	{r7, lr}
 1213              		.cfi_def_cfa_offset 8
 1214              		.cfi_offset 7, -8
 1215              		.cfi_offset 14, -4
 1216 0002 82B0     		sub	sp, sp, #8
 1217              		.cfi_def_cfa_offset 16
 1218 0004 00AF     		add	r7, sp, #0
 1219              		.cfi_def_cfa_register 7
 1220 0006 7860     		str	r0, [r7, #4]
 882:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return(CapSense_CSD_hysteresis[widget]);
 1221              		.loc 1 882 0
 1222 0008 034B     		ldr	r3, .L65
 1223 000a 7A68     		ldr	r2, [r7, #4]
 1224 000c 5200     		lsls	r2, r2, #1
 1225 000e D35A     		ldrh	r3, [r2, r3]
 883:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1226              		.loc 1 883 0
 1227 0010 1800     		movs	r0, r3
 1228 0012 BD46     		mov	sp, r7
 1229 0014 02B0     		add	sp, sp, #8
 1230              		@ sp needed
 1231 0016 80BD     		pop	{r7, pc}
 1232              	.L66:
 1233              		.align	2
 1234              	.L65:
 1235 0018 00000000 		.word	CapSense_CSD_hysteresis
 1236              		.cfi_endproc
 1237              	.LFE46:
 1238              		.size	CapSense_CSD_GetFingerHysteresis, .-CapSense_CSD_GetFingerHysteresis
 1239              		.section	.text.CapSense_CSD_GetNegativeNoiseThreshold,"ax",%progbits
 1240              		.align	2
 1241              		.global	CapSense_CSD_GetNegativeNoiseThreshold
 1242              		.code	16
 1243              		.thumb_func
 1244              		.type	CapSense_CSD_GetNegativeNoiseThreshold, %function
 1245              	CapSense_CSD_GetNegativeNoiseThreshold:
 1246              	.LFB47:
 884:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 885:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 886:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 887:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetNegativeNoiseThreshold
 888:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 889:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 890:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 891:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This function reads the negative noise threshold from the component.
 892:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 893:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 894:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None.
 895:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 896:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return Value:
 897:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the negative noise threshold
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 39


 898:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 899:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 900:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_negativeNoiseThreshold - This variable specifies the negative
 901:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *   difference between the raw count and baseline levels for Baseline resetting
 902:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *   to the raw count level.
 903:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 904:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 905:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 906:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 907:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 908:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint16 CapSense_CSD_GetNegativeNoiseThreshold(uint32 widget)
 909:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1247              		.loc 1 909 0
 1248              		.cfi_startproc
 1249              		@ args = 0, pretend = 0, frame = 8
 1250              		@ frame_needed = 1, uses_anonymous_args = 0
 1251 0000 80B5     		push	{r7, lr}
 1252              		.cfi_def_cfa_offset 8
 1253              		.cfi_offset 7, -8
 1254              		.cfi_offset 14, -4
 1255 0002 82B0     		sub	sp, sp, #8
 1256              		.cfi_def_cfa_offset 16
 1257 0004 00AF     		add	r7, sp, #0
 1258              		.cfi_def_cfa_register 7
 1259 0006 7860     		str	r0, [r7, #4]
 910:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE)
 911:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return(CapSense_CSD_negativeNoiseThreshold[widget]);
 1260              		.loc 1 911 0
 1261 0008 034B     		ldr	r3, .L69
 1262 000a 7A68     		ldr	r2, [r7, #4]
 1263 000c 5200     		lsls	r2, r2, #1
 1264 000e D35A     		ldrh	r3, [r2, r3]
 912:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #else
 913:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return(CapSense_CSD_NEGATIVE_NOISE_THRESHOLD);
 914:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE) */
 915:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1265              		.loc 1 915 0
 1266 0010 1800     		movs	r0, r3
 1267 0012 BD46     		mov	sp, r7
 1268 0014 02B0     		add	sp, sp, #8
 1269              		@ sp needed
 1270 0016 80BD     		pop	{r7, pc}
 1271              	.L70:
 1272              		.align	2
 1273              	.L69:
 1274 0018 00000000 		.word	CapSense_CSD_negativeNoiseThreshold
 1275              		.cfi_endproc
 1276              	.LFE47:
 1277              		.size	CapSense_CSD_GetNegativeNoiseThreshold, .-CapSense_CSD_GetNegativeNoiseThreshold
 1278              		.section	.text.CapSense_CSD_SetFingerThreshold,"ax",%progbits
 1279              		.align	2
 1280              		.global	CapSense_CSD_SetFingerThreshold
 1281              		.code	16
 1282              		.thumb_func
 1283              		.type	CapSense_CSD_SetFingerThreshold, %function
 1284              	CapSense_CSD_SetFingerThreshold:
 1285              	.LFB48:
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 40


 916:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 917:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 918:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if(CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE)
 919:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
 920:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_SetFingerThreshold
 921:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
 922:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 923:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
 924:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This API sets the finger threshold value for a widget.
 925:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 926:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
 927:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  sensorNumber:  widget index.
 928:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  value:  Finger threshold value for the widget.
 929:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 930:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return Value:
 931:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
 932:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 933:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
 934:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_fingerThreshold[] - This array contains the level of signal
 935:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *   for each widget that determines if a finger is present on the widget.
 936:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 937:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
 938:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
 939:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 940:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
 941:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     void CapSense_CSD_SetFingerThreshold(uint32 widget, uint16 value)
 942:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 1286              		.loc 1 942 0
 1287              		.cfi_startproc
 1288              		@ args = 0, pretend = 0, frame = 8
 1289              		@ frame_needed = 1, uses_anonymous_args = 0
 1290 0000 80B5     		push	{r7, lr}
 1291              		.cfi_def_cfa_offset 8
 1292              		.cfi_offset 7, -8
 1293              		.cfi_offset 14, -4
 1294 0002 82B0     		sub	sp, sp, #8
 1295              		.cfi_def_cfa_offset 16
 1296 0004 00AF     		add	r7, sp, #0
 1297              		.cfi_def_cfa_register 7
 1298 0006 7860     		str	r0, [r7, #4]
 1299 0008 0A00     		movs	r2, r1
 1300 000a BB1C     		adds	r3, r7, #2
 1301 000c 1A80     		strh	r2, [r3]
 943:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_fingerThreshold[widget] = value;
 1302              		.loc 1 943 0
 1303 000e 054B     		ldr	r3, .L72
 1304 0010 7A68     		ldr	r2, [r7, #4]
 1305 0012 5200     		lsls	r2, r2, #1
 1306 0014 B91C     		adds	r1, r7, #2
 1307 0016 0988     		ldrh	r1, [r1]
 1308 0018 D152     		strh	r1, [r2, r3]
 944:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 1309              		.loc 1 944 0
 1310 001a C046     		nop
 1311 001c BD46     		mov	sp, r7
 1312 001e 02B0     		add	sp, sp, #8
 1313              		@ sp needed
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 41


 1314 0020 80BD     		pop	{r7, pc}
 1315              	.L73:
 1316 0022 C046     		.align	2
 1317              	.L72:
 1318 0024 00000000 		.word	CapSense_CSD_fingerThreshold
 1319              		.cfi_endproc
 1320              	.LFE48:
 1321              		.size	CapSense_CSD_SetFingerThreshold, .-CapSense_CSD_SetFingerThreshold
 1322              		.section	.text.CapSense_CSD_SetNoiseThreshold,"ax",%progbits
 1323              		.align	2
 1324              		.global	CapSense_CSD_SetNoiseThreshold
 1325              		.code	16
 1326              		.thumb_func
 1327              		.type	CapSense_CSD_SetNoiseThreshold, %function
 1328              	CapSense_CSD_SetNoiseThreshold:
 1329              	.LFB49:
 945:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 946:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 947:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
 948:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_SetNoiseThreshold
 949:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
 950:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 951:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
 952:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This API sets the Noise Threshold value for each widget.
 953:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 954:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
 955:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  widget:  Sensor index number.
 956:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  value:   Noise Threshold value for widget.
 957:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 958:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return Value:
 959:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
 960:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 961:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
 962:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_noiseThreshold[] - This array contains the level of signal
 963:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *   for each widget that determines the level of noise in the capacitive scan.
 964:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 965:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
 966:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
 967:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 968:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
 969:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     void CapSense_CSD_SetNoiseThreshold(uint32 widget, uint16 value)
 970:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 1330              		.loc 1 970 0
 1331              		.cfi_startproc
 1332              		@ args = 0, pretend = 0, frame = 8
 1333              		@ frame_needed = 1, uses_anonymous_args = 0
 1334 0000 80B5     		push	{r7, lr}
 1335              		.cfi_def_cfa_offset 8
 1336              		.cfi_offset 7, -8
 1337              		.cfi_offset 14, -4
 1338 0002 82B0     		sub	sp, sp, #8
 1339              		.cfi_def_cfa_offset 16
 1340 0004 00AF     		add	r7, sp, #0
 1341              		.cfi_def_cfa_register 7
 1342 0006 7860     		str	r0, [r7, #4]
 1343 0008 0A00     		movs	r2, r1
 1344 000a BB1C     		adds	r3, r7, #2
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 42


 1345 000c 1A80     		strh	r2, [r3]
 971:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_noiseThreshold[widget] = value;
 1346              		.loc 1 971 0
 1347 000e 054B     		ldr	r3, .L75
 1348 0010 7A68     		ldr	r2, [r7, #4]
 1349 0012 5200     		lsls	r2, r2, #1
 1350 0014 B91C     		adds	r1, r7, #2
 1351 0016 0988     		ldrh	r1, [r1]
 1352 0018 D152     		strh	r1, [r2, r3]
 972:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 1353              		.loc 1 972 0
 1354 001a C046     		nop
 1355 001c BD46     		mov	sp, r7
 1356 001e 02B0     		add	sp, sp, #8
 1357              		@ sp needed
 1358 0020 80BD     		pop	{r7, pc}
 1359              	.L76:
 1360 0022 C046     		.align	2
 1361              	.L75:
 1362 0024 00000000 		.word	CapSense_CSD_noiseThreshold
 1363              		.cfi_endproc
 1364              	.LFE49:
 1365              		.size	CapSense_CSD_SetNoiseThreshold, .-CapSense_CSD_SetNoiseThreshold
 1366              		.section	.text.CapSense_CSD_SetFingerHysteresis,"ax",%progbits
 1367              		.align	2
 1368              		.global	CapSense_CSD_SetFingerHysteresis
 1369              		.code	16
 1370              		.thumb_func
 1371              		.type	CapSense_CSD_SetFingerHysteresis, %function
 1372              	CapSense_CSD_SetFingerHysteresis:
 1373              	.LFB50:
 973:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 974:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 975:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
 976:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_SetFingerHysteresis
 977:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
 978:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 979:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
 980:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This API sets the Hysteresis value of a widget
 981:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 982:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
 983:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  value:  Hysteresis value for widgets.
 984:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  widget:  widget number
 985:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 986:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return Value:
 987:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
 988:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 989:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
 990:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_hysteresis[] - This array contains the hysteresis value for each widget.
 991:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_widgetNumberSld - structure with dynamic sliders' parameters.
 992:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 993:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
 994:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
 995:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 996:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
 997:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     void CapSense_CSD_SetFingerHysteresis(uint32 widget, uint16 value)
 998:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 43


 1374              		.loc 1 998 0
 1375              		.cfi_startproc
 1376              		@ args = 0, pretend = 0, frame = 8
 1377              		@ frame_needed = 1, uses_anonymous_args = 0
 1378 0000 80B5     		push	{r7, lr}
 1379              		.cfi_def_cfa_offset 8
 1380              		.cfi_offset 7, -8
 1381              		.cfi_offset 14, -4
 1382 0002 82B0     		sub	sp, sp, #8
 1383              		.cfi_def_cfa_offset 16
 1384 0004 00AF     		add	r7, sp, #0
 1385              		.cfi_def_cfa_register 7
 1386 0006 7860     		str	r0, [r7, #4]
 1387 0008 0A00     		movs	r2, r1
 1388 000a BB1C     		adds	r3, r7, #2
 1389 000c 1A80     		strh	r2, [r3]
 999:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_hysteresis[widget] = value;
 1390              		.loc 1 999 0
 1391 000e 054B     		ldr	r3, .L78
 1392 0010 7A68     		ldr	r2, [r7, #4]
 1393 0012 5200     		lsls	r2, r2, #1
 1394 0014 B91C     		adds	r1, r7, #2
 1395 0016 0988     		ldrh	r1, [r1]
 1396 0018 D152     		strh	r1, [r2, r3]
1000:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 1397              		.loc 1 1000 0
 1398 001a C046     		nop
 1399 001c BD46     		mov	sp, r7
 1400 001e 02B0     		add	sp, sp, #8
 1401              		@ sp needed
 1402 0020 80BD     		pop	{r7, pc}
 1403              	.L79:
 1404 0022 C046     		.align	2
 1405              	.L78:
 1406 0024 00000000 		.word	CapSense_CSD_hysteresis
 1407              		.cfi_endproc
 1408              	.LFE50:
 1409              		.size	CapSense_CSD_SetFingerHysteresis, .-CapSense_CSD_SetFingerHysteresis
 1410              		.section	.text.CapSense_CSD_SetNegativeNoiseThreshold,"ax",%progbits
 1411              		.align	2
 1412              		.global	CapSense_CSD_SetNegativeNoiseThreshold
 1413              		.code	16
 1414              		.thumb_func
 1415              		.type	CapSense_CSD_SetNegativeNoiseThreshold, %function
 1416              	CapSense_CSD_SetNegativeNoiseThreshold:
 1417              	.LFB51:
1001:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1002:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1003:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1004:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_SetNegativeNoiseThreshold
1005:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
1006:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1007:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
1008:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This API sets the Negative Noise Threshold value of a widget
1009:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1010:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
1011:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  value:  Negative Noise Threshold value for widgets.
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 44


1012:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  widget: widget number
1013:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1014:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return Value:
1015:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
1016:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1017:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
1018:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_negativeNoiseThreshold  - This parameter specifies the negative
1019:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *   difference between the raw count and baseline levels for Baseline resetting to
1020:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *   the raw count level.
1021:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1022:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
1023:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
1024:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1025:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1026:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     void CapSense_CSD_SetNegativeNoiseThreshold(uint32 widget, uint16 value)
1027:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 1418              		.loc 1 1027 0
 1419              		.cfi_startproc
 1420              		@ args = 0, pretend = 0, frame = 8
 1421              		@ frame_needed = 1, uses_anonymous_args = 0
 1422 0000 80B5     		push	{r7, lr}
 1423              		.cfi_def_cfa_offset 8
 1424              		.cfi_offset 7, -8
 1425              		.cfi_offset 14, -4
 1426 0002 82B0     		sub	sp, sp, #8
 1427              		.cfi_def_cfa_offset 16
 1428 0004 00AF     		add	r7, sp, #0
 1429              		.cfi_def_cfa_register 7
 1430 0006 7860     		str	r0, [r7, #4]
 1431 0008 0A00     		movs	r2, r1
 1432 000a BB1C     		adds	r3, r7, #2
 1433 000c 1A80     		strh	r2, [r3]
1028:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_negativeNoiseThreshold[widget] = value;
 1434              		.loc 1 1028 0
 1435 000e 054B     		ldr	r3, .L81
 1436 0010 7A68     		ldr	r2, [r7, #4]
 1437 0012 5200     		lsls	r2, r2, #1
 1438 0014 B91C     		adds	r1, r7, #2
 1439 0016 0988     		ldrh	r1, [r1]
 1440 0018 D152     		strh	r1, [r2, r3]
1029:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 1441              		.loc 1 1029 0
 1442 001a C046     		nop
 1443 001c BD46     		mov	sp, r7
 1444 001e 02B0     		add	sp, sp, #8
 1445              		@ sp needed
 1446 0020 80BD     		pop	{r7, pc}
 1447              	.L82:
 1448 0022 C046     		.align	2
 1449              	.L81:
 1450 0024 00000000 		.word	CapSense_CSD_negativeNoiseThreshold
 1451              		.cfi_endproc
 1452              	.LFE51:
 1453              		.size	CapSense_CSD_SetNegativeNoiseThreshold, .-CapSense_CSD_SetNegativeNoiseThreshold
 1454              		.section	.text.CapSense_CSD_SetDebounce,"ax",%progbits
 1455              		.align	2
 1456              		.global	CapSense_CSD_SetDebounce
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 45


 1457              		.code	16
 1458              		.thumb_func
 1459              		.type	CapSense_CSD_SetDebounce, %function
 1460              	CapSense_CSD_SetDebounce:
 1461              	.LFB52:
1030:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1031:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1032:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1033:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_SetDebounce
1034:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
1035:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1036:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
1037:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This API sets the debounce value for a widget.
1038:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1039:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
1040:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  value:  Debounce value for widget.
1041:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  widget: widget index.
1042:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1043:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return Value:
1044:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
1045:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1046:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
1047:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_debounce[] - This array contains the debounce value for each widget.
1048:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_widgetNumberSld - structure with dynamic sliders' parameters.
1049:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1050:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
1051:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
1052:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1053:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1054:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     void CapSense_CSD_SetDebounce(uint32 widget, uint8 value)
1055:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 1462              		.loc 1 1055 0
 1463              		.cfi_startproc
 1464              		@ args = 0, pretend = 0, frame = 8
 1465              		@ frame_needed = 1, uses_anonymous_args = 0
 1466 0000 80B5     		push	{r7, lr}
 1467              		.cfi_def_cfa_offset 8
 1468              		.cfi_offset 7, -8
 1469              		.cfi_offset 14, -4
 1470 0002 82B0     		sub	sp, sp, #8
 1471              		.cfi_def_cfa_offset 16
 1472 0004 00AF     		add	r7, sp, #0
 1473              		.cfi_def_cfa_register 7
 1474 0006 7860     		str	r0, [r7, #4]
 1475 0008 0A00     		movs	r2, r1
 1476 000a FB1C     		adds	r3, r7, #3
 1477 000c 1A70     		strb	r2, [r3]
1056:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_debounce[widget] = value;
 1478              		.loc 1 1056 0
 1479 000e 054A     		ldr	r2, .L84
 1480 0010 7B68     		ldr	r3, [r7, #4]
 1481 0012 D318     		adds	r3, r2, r3
 1482 0014 FA1C     		adds	r2, r7, #3
 1483 0016 1278     		ldrb	r2, [r2]
 1484 0018 1A70     		strb	r2, [r3]
1057:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 1485              		.loc 1 1057 0
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 46


 1486 001a C046     		nop
 1487 001c BD46     		mov	sp, r7
 1488 001e 02B0     		add	sp, sp, #8
 1489              		@ sp needed
 1490 0020 80BD     		pop	{r7, pc}
 1491              	.L85:
 1492 0022 C046     		.align	2
 1493              	.L84:
 1494 0024 00000000 		.word	CapSense_CSD_debounce
 1495              		.cfi_endproc
 1496              	.LFE52:
 1497              		.size	CapSense_CSD_SetDebounce, .-CapSense_CSD_SetDebounce
 1498              		.section	.text.CapSense_CSD_SetLowBaselineReset,"ax",%progbits
 1499              		.align	2
 1500              		.global	CapSense_CSD_SetLowBaselineReset
 1501              		.code	16
 1502              		.thumb_func
 1503              		.type	CapSense_CSD_SetLowBaselineReset, %function
 1504              	CapSense_CSD_SetLowBaselineReset:
 1505              	.LFB53:
1058:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1059:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1060:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1061:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_SetLowBaselineReset
1062:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
1063:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1064:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
1065:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This API sets the low baseline reset threshold value for the sensor.
1066:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1067:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
1068:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  value: low baseline reset threshold value.
1069:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  sensor: Sensor index.
1070:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1071:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return Value:
1072:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
1073:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1074:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
1075:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_lowBaselineReset[] - This array contains the Baseline update
1076:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  threshold value for each sensor.
1077:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1078:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
1079:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
1080:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1081:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1082:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     void CapSense_CSD_SetLowBaselineReset(uint32 sensor, uint8 value)
1083:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 1506              		.loc 1 1083 0
 1507              		.cfi_startproc
 1508              		@ args = 0, pretend = 0, frame = 8
 1509              		@ frame_needed = 1, uses_anonymous_args = 0
 1510 0000 80B5     		push	{r7, lr}
 1511              		.cfi_def_cfa_offset 8
 1512              		.cfi_offset 7, -8
 1513              		.cfi_offset 14, -4
 1514 0002 82B0     		sub	sp, sp, #8
 1515              		.cfi_def_cfa_offset 16
 1516 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 47


 1517              		.cfi_def_cfa_register 7
 1518 0006 7860     		str	r0, [r7, #4]
 1519 0008 0A00     		movs	r2, r1
 1520 000a FB1C     		adds	r3, r7, #3
 1521 000c 1A70     		strb	r2, [r3]
1084:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_lowBaselineReset[sensor] = value;
 1522              		.loc 1 1084 0
 1523 000e 054A     		ldr	r2, .L87
 1524 0010 7B68     		ldr	r3, [r7, #4]
 1525 0012 D318     		adds	r3, r2, r3
 1526 0014 FA1C     		adds	r2, r7, #3
 1527 0016 1278     		ldrb	r2, [r2]
 1528 0018 1A70     		strb	r2, [r3]
1085:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 1529              		.loc 1 1085 0
 1530 001a C046     		nop
 1531 001c BD46     		mov	sp, r7
 1532 001e 02B0     		add	sp, sp, #8
 1533              		@ sp needed
 1534 0020 80BD     		pop	{r7, pc}
 1535              	.L88:
 1536 0022 C046     		.align	2
 1537              	.L87:
 1538 0024 00000000 		.word	CapSense_CSD_lowBaselineReset
 1539              		.cfi_endproc
 1540              	.LFE53:
 1541              		.size	CapSense_CSD_SetLowBaselineReset, .-CapSense_CSD_SetLowBaselineReset
 1542              		.section	.text.CapSense_CSD_CheckIsSensorActive,"ax",%progbits
 1543              		.align	2
 1544              		.global	CapSense_CSD_CheckIsSensorActive
 1545              		.code	16
 1546              		.thumb_func
 1547              		.type	CapSense_CSD_CheckIsSensorActive, %function
 1548              	CapSense_CSD_CheckIsSensorActive:
 1549              	.LFB54:
1086:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE) */
1087:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1088:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1089:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
1090:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_CheckIsSensorActive
1091:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
1092:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1093:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
1094:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Compares the CapSense_CSD_sensorSignal[sensor] array element to the finger
1095:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  threshold of the widget it belongs to. The hysteresis and debounce are taken into
1096:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold
1097:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  based on whether the sensor is currently active.
1098:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
1099:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
1100:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  The debounce counter is added to the sensor active transition.
1101:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This function updates the CapSense_CSD_sensorOnMask[] array element.
1102:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1103:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
1104:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
1105:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1106:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
1107:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 48


1108:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1109:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
1110:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[] - used to store the difference between
1111:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  the current value of raw data and a previous value of the baseline.
1112:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_debounceCounter[]   - used to store the current debounce
1113:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  counter of the sensor. the widget which have this parameter are buttons, matrix
1114:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  buttons, proximity, and guard. All other widgets don't have the  debounce parameter
1115:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
1116:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorOnMask[] - used to store the sensors on/off state.
1117:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorOnMask[0] contains the masked bits for sensors
1118:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1119:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for
1120:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1121:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  0 - sensor is inactive.
1122:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  1 - sensor is active.
1123:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1124:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
1125:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
1126:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1127:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
1128:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint32 CapSense_CSD_CheckIsSensorActive(uint32 sensor)
1129:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1550              		.loc 1 1129 0
 1551              		.cfi_startproc
 1552              		@ args = 0, pretend = 0, frame = 16
 1553              		@ frame_needed = 1, uses_anonymous_args = 0
 1554 0000 80B5     		push	{r7, lr}
 1555              		.cfi_def_cfa_offset 8
 1556              		.cfi_offset 7, -8
 1557              		.cfi_offset 14, -4
 1558 0002 84B0     		sub	sp, sp, #16
 1559              		.cfi_def_cfa_offset 24
 1560 0004 00AF     		add	r7, sp, #0
 1561              		.cfi_def_cfa_register 7
 1562 0006 7860     		str	r0, [r7, #4]
1130:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 widget;
1131:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 debounce;
1132:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 debounceIndex;
1133:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1134:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 fingerThreshold;
1135:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 hysteresis;
1136:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
1137:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1138:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Prepare to find debounce counter index */
1139:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     widget = CapSense_CSD_widgetNumber[sensor];
 1563              		.loc 1 1139 0
 1564 0008 0F23     		movs	r3, #15
 1565 000a FB18     		adds	r3, r7, r3
 1566 000c 4249     		ldr	r1, .L98
 1567 000e 7A68     		ldr	r2, [r7, #4]
 1568 0010 8A18     		adds	r2, r1, r2
 1569 0012 1278     		ldrb	r2, [r2]
 1570 0014 1A70     		strb	r2, [r3]
1140:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1141:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     fingerThreshold = CapSense_CSD_fingerThreshold[widget];
 1571              		.loc 1 1141 0
 1572 0016 0F23     		movs	r3, #15
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 49


 1573 0018 FB18     		adds	r3, r7, r3
 1574 001a 1978     		ldrb	r1, [r3]
 1575 001c 0C23     		movs	r3, #12
 1576 001e FB18     		adds	r3, r7, r3
 1577 0020 3E4A     		ldr	r2, .L98+4
 1578 0022 4900     		lsls	r1, r1, #1
 1579 0024 8A5A     		ldrh	r2, [r1, r2]
 1580 0026 1A80     		strh	r2, [r3]
1142:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     hysteresis = CapSense_CSD_hysteresis[widget];
 1581              		.loc 1 1142 0
 1582 0028 0F23     		movs	r3, #15
 1583 002a FB18     		adds	r3, r7, r3
 1584 002c 1978     		ldrb	r1, [r3]
 1585 002e 0A23     		movs	r3, #10
 1586 0030 FB18     		adds	r3, r7, r3
 1587 0032 3B4A     		ldr	r2, .L98+8
 1588 0034 4900     		lsls	r1, r1, #1
 1589 0036 8A5A     		ldrh	r2, [r1, r2]
 1590 0038 1A80     		strh	r2, [r3]
1143:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     debounce = CapSense_CSD_debounce[widget];
 1591              		.loc 1 1143 0
 1592 003a 0F23     		movs	r3, #15
 1593 003c FB18     		adds	r3, r7, r3
 1594 003e 1A78     		ldrb	r2, [r3]
 1595 0040 0923     		movs	r3, #9
 1596 0042 FB18     		adds	r3, r7, r3
 1597 0044 3749     		ldr	r1, .L98+12
 1598 0046 8A5C     		ldrb	r2, [r1, r2]
 1599 0048 1A70     		strb	r2, [r3]
1144:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1145:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         debounceIndex = widget;
 1600              		.loc 1 1145 0
 1601 004a 0823     		movs	r3, #8
 1602 004c FB18     		adds	r3, r7, r3
 1603 004e 0F22     		movs	r2, #15
 1604 0050 BA18     		adds	r2, r7, r2
 1605 0052 1278     		ldrb	r2, [r2]
 1606 0054 1A70     		strb	r2, [r3]
1146:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1147:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1148:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Was on */
1149:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     if (0u != CapSense_CSD_GetBitValue(CapSense_CSD_sensorOnMask, sensor))
 1607              		.loc 1 1149 0
 1608 0056 7A68     		ldr	r2, [r7, #4]
 1609 0058 334B     		ldr	r3, .L98+16
 1610 005a 1100     		movs	r1, r2
 1611 005c 1800     		movs	r0, r3
 1612 005e FFF7FEFF 		bl	CapSense_CSD_GetBitValue
 1613 0062 031E     		subs	r3, r0, #0
 1614 0064 1CD0     		beq	.L90
1150:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1151:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Hysteresis minus */
1152:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (CapSense_CSD_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 1615              		.loc 1 1152 0
 1616 0066 314B     		ldr	r3, .L98+20
 1617 0068 7A68     		ldr	r2, [r7, #4]
 1618 006a 5200     		lsls	r2, r2, #1
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 50


 1619 006c D35A     		ldrh	r3, [r2, r3]
 1620 006e 1900     		movs	r1, r3
 1621 0070 0C23     		movs	r3, #12
 1622 0072 FB18     		adds	r3, r7, r3
 1623 0074 1A88     		ldrh	r2, [r3]
 1624 0076 0A23     		movs	r3, #10
 1625 0078 FB18     		adds	r3, r7, r3
 1626 007a 1B88     		ldrh	r3, [r3]
 1627 007c D31A     		subs	r3, r2, r3
 1628 007e 9942     		cmp	r1, r3
 1629 0080 3BDA     		bge	.L92
1153:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1154:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_SetBitValue(CapSense_CSD_sensorOnMask, sensor, 0u);
 1630              		.loc 1 1154 0
 1631 0082 7968     		ldr	r1, [r7, #4]
 1632 0084 284B     		ldr	r3, .L98+16
 1633 0086 0022     		movs	r2, #0
 1634 0088 1800     		movs	r0, r3
 1635 008a FFF7FEFF 		bl	CapSense_CSD_SetBitValue
1155:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1156:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_debounceCounter[debounceIndex] = debounce;
 1636              		.loc 1 1156 0
 1637 008e 0823     		movs	r3, #8
 1638 0090 FB18     		adds	r3, r7, r3
 1639 0092 1B78     		ldrb	r3, [r3]
 1640 0094 264A     		ldr	r2, .L98+24
 1641 0096 0921     		movs	r1, #9
 1642 0098 7918     		adds	r1, r7, r1
 1643 009a 0978     		ldrb	r1, [r1]
 1644 009c D154     		strb	r1, [r2, r3]
 1645 009e 2CE0     		b	.L92
 1646              	.L90:
1157:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1158:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
1159:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     else    /* Was off */
1160:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1161:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Hysteresis plus */
1162:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (CapSense_CSD_sensorSignal[sensor] >= (fingerThreshold + hysteresis))
 1647              		.loc 1 1162 0
 1648 00a0 224B     		ldr	r3, .L98+20
 1649 00a2 7A68     		ldr	r2, [r7, #4]
 1650 00a4 5200     		lsls	r2, r2, #1
 1651 00a6 D35A     		ldrh	r3, [r2, r3]
 1652 00a8 1900     		movs	r1, r3
 1653 00aa 0C23     		movs	r3, #12
 1654 00ac FB18     		adds	r3, r7, r3
 1655 00ae 1A88     		ldrh	r2, [r3]
 1656 00b0 0A23     		movs	r3, #10
 1657 00b2 FB18     		adds	r3, r7, r3
 1658 00b4 1B88     		ldrh	r3, [r3]
 1659 00b6 D318     		adds	r3, r2, r3
 1660 00b8 9942     		cmp	r1, r3
 1661 00ba 16DB     		blt	.L93
1163:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1164:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_debounceCounter[debounceIndex]--;
 1662              		.loc 1 1164 0
 1663 00bc 0823     		movs	r3, #8
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 51


 1664 00be FB18     		adds	r3, r7, r3
 1665 00c0 1B78     		ldrb	r3, [r3]
 1666 00c2 1B4A     		ldr	r2, .L98+24
 1667 00c4 D25C     		ldrb	r2, [r2, r3]
 1668 00c6 013A     		subs	r2, r2, #1
 1669 00c8 D1B2     		uxtb	r1, r2
 1670 00ca 194A     		ldr	r2, .L98+24
 1671 00cc D154     		strb	r1, [r2, r3]
1165:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Sensor active, decrement debounce counter */
1166:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if(CapSense_CSD_debounceCounter[debounceIndex] == 0u)
 1672              		.loc 1 1166 0
 1673 00ce 0823     		movs	r3, #8
 1674 00d0 FB18     		adds	r3, r7, r3
 1675 00d2 1B78     		ldrb	r3, [r3]
 1676 00d4 164A     		ldr	r2, .L98+24
 1677 00d6 D35C     		ldrb	r3, [r2, r3]
 1678 00d8 002B     		cmp	r3, #0
 1679 00da 0ED1     		bne	.L92
1167:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1168:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 CapSense_CSD_SetBitValue(CapSense_CSD_sensorOnMask, sensor, 1u);
 1680              		.loc 1 1168 0
 1681 00dc 7968     		ldr	r1, [r7, #4]
 1682 00de 124B     		ldr	r3, .L98+16
 1683 00e0 0122     		movs	r2, #1
 1684 00e2 1800     		movs	r0, r3
 1685 00e4 FFF7FEFF 		bl	CapSense_CSD_SetBitValue
 1686 00e8 07E0     		b	.L92
 1687              	.L93:
1169:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1170:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1171:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         else
1172:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1173:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1174:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_debounceCounter[debounceIndex] = debounce;
 1688              		.loc 1 1174 0
 1689 00ea 0823     		movs	r3, #8
 1690 00ec FB18     		adds	r3, r7, r3
 1691 00ee 1B78     		ldrb	r3, [r3]
 1692 00f0 0F4A     		ldr	r2, .L98+24
 1693 00f2 0921     		movs	r1, #9
 1694 00f4 7918     		adds	r1, r7, r1
 1695 00f6 0978     		ldrb	r1, [r1]
 1696 00f8 D154     		strb	r1, [r2, r3]
 1697              	.L92:
1175:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1176:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
1177:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1178:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return ((uint32)((0u != CapSense_CSD_GetBitValue(CapSense_CSD_sensorOnMask, sensor)) ? 1u : 0u)
 1698              		.loc 1 1178 0
 1699 00fa 7A68     		ldr	r2, [r7, #4]
 1700 00fc 0A4B     		ldr	r3, .L98+16
 1701 00fe 1100     		movs	r1, r2
 1702 0100 1800     		movs	r0, r3
 1703 0102 FFF7FEFF 		bl	CapSense_CSD_GetBitValue
 1704 0106 031E     		subs	r3, r0, #0
 1705 0108 01D0     		beq	.L95
 1706              		.loc 1 1178 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 52


 1707 010a 0123     		movs	r3, #1
 1708 010c 00E0     		b	.L97
 1709              	.L95:
 1710              		.loc 1 1178 0 discriminator 2
 1711 010e 0023     		movs	r3, #0
 1712              	.L97:
1179:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1713              		.loc 1 1179 0 is_stmt 1 discriminator 5
 1714 0110 1800     		movs	r0, r3
 1715 0112 BD46     		mov	sp, r7
 1716 0114 04B0     		add	sp, sp, #16
 1717              		@ sp needed
 1718 0116 80BD     		pop	{r7, pc}
 1719              	.L99:
 1720              		.align	2
 1721              	.L98:
 1722 0118 00000000 		.word	CapSense_CSD_widgetNumber
 1723 011c 00000000 		.word	CapSense_CSD_fingerThreshold
 1724 0120 00000000 		.word	CapSense_CSD_hysteresis
 1725 0124 00000000 		.word	CapSense_CSD_debounce
 1726 0128 00000000 		.word	CapSense_CSD_sensorOnMask
 1727 012c 00000000 		.word	CapSense_CSD_sensorSignal
 1728 0130 40000000 		.word	CapSense_CSD_debounceCounter
 1729              		.cfi_endproc
 1730              	.LFE54:
 1731              		.size	CapSense_CSD_CheckIsSensorActive, .-CapSense_CSD_CheckIsSensorActive
 1732              		.section	.text.CapSense_CSD_CheckIsWidgetActive,"ax",%progbits
 1733              		.align	2
 1734              		.global	CapSense_CSD_CheckIsWidgetActive
 1735              		.code	16
 1736              		.thumb_func
 1737              		.type	CapSense_CSD_CheckIsWidgetActive, %function
 1738              	CapSense_CSD_CheckIsWidgetActive:
 1739              	.LFB55:
1180:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1181:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1182:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
1183:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_CheckIsWidgetActive
1184:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
1185:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1186:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
1187:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Compares the CapSense_sensorSignal[] array element to the finger threshold of
1188:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * the widget it belongs to. The hysteresis and debounce are taken into account.
1189:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * The hysteresis is added or subtracted from the finger threshold based on whether
1190:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  the sensor is currently active. If the sensor is active, the threshold is
1191:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  lowered by the hysteresis amount. If the sensor is inactive, the threshold
1192:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  is raised by the hysteresis amount.
1193:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * The debounce counter added to the sensor active transition.
1194:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * This function updates CapSense_sensorOnMask[] array element
1195:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1196:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
1197:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  widget:  widget number.
1198:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1199:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
1200:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are
1201:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
1202:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 53


1203:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
1204:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  rawDataIndex[]: Contains the  1st sensor position in the widget
1205:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1206:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
1207:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
1208:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1209:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
1210:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint32 CapSense_CSD_CheckIsWidgetActive(uint32 widget)
1211:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1740              		.loc 1 1211 0
 1741              		.cfi_startproc
 1742              		@ args = 0, pretend = 0, frame = 24
 1743              		@ frame_needed = 1, uses_anonymous_args = 0
 1744 0000 80B5     		push	{r7, lr}
 1745              		.cfi_def_cfa_offset 8
 1746              		.cfi_offset 7, -8
 1747              		.cfi_offset 14, -4
 1748 0002 86B0     		sub	sp, sp, #24
 1749              		.cfi_def_cfa_offset 32
 1750 0004 00AF     		add	r7, sp, #0
 1751              		.cfi_def_cfa_register 7
 1752 0006 7860     		str	r0, [r7, #4]
1212:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 rawIndex = (uint32)CapSense_CSD_rawDataIndex[widget];
 1753              		.loc 1 1212 0
 1754 0008 114A     		ldr	r2, .L104
 1755 000a 7B68     		ldr	r3, [r7, #4]
 1756 000c D318     		adds	r3, r2, r3
 1757 000e 1B78     		ldrb	r3, [r3]
 1758 0010 7B61     		str	r3, [r7, #20]
1213:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 numOfSensors = (uint32)CapSense_CSD_numberOfSensors[widget] + rawIndex;
 1759              		.loc 1 1213 0
 1760 0012 104A     		ldr	r2, .L104+4
 1761 0014 7B68     		ldr	r3, [r7, #4]
 1762 0016 D318     		adds	r3, r2, r3
 1763 0018 1B78     		ldrb	r3, [r3]
 1764 001a 1A00     		movs	r2, r3
 1765 001c 7B69     		ldr	r3, [r7, #20]
 1766 001e D318     		adds	r3, r2, r3
 1767 0020 FB60     		str	r3, [r7, #12]
1214:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 state = 0u;
 1768              		.loc 1 1214 0
 1769 0022 0023     		movs	r3, #0
 1770 0024 3B61     		str	r3, [r7, #16]
 1771              	.L102:
1215:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1216:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Check all sensors of widget */
1217:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     do
1218:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1219:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(CapSense_CSD_CheckIsSensorActive((uint32)rawIndex) != 0u)
 1772              		.loc 1 1219 0
 1773 0026 7B69     		ldr	r3, [r7, #20]
 1774 0028 1800     		movs	r0, r3
 1775 002a FFF7FEFF 		bl	CapSense_CSD_CheckIsSensorActive
 1776 002e 031E     		subs	r3, r0, #0
 1777 0030 01D0     		beq	.L101
1220:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1221:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             state = CapSense_CSD_SENSOR_IS_ACTIVE;
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 54


 1778              		.loc 1 1221 0
 1779 0032 0123     		movs	r3, #1
 1780 0034 3B61     		str	r3, [r7, #16]
 1781              	.L101:
1222:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1223:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         rawIndex++;
 1782              		.loc 1 1223 0
 1783 0036 7B69     		ldr	r3, [r7, #20]
 1784 0038 0133     		adds	r3, r3, #1
 1785 003a 7B61     		str	r3, [r7, #20]
1224:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
1225:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     while(rawIndex < numOfSensors);
 1786              		.loc 1 1225 0
 1787 003c 7A69     		ldr	r2, [r7, #20]
 1788 003e FB68     		ldr	r3, [r7, #12]
 1789 0040 9A42     		cmp	r2, r3
 1790 0042 F0D3     		bcc	.L102
1226:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1227:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1228:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1229:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return state;
 1791              		.loc 1 1229 0
 1792 0044 3B69     		ldr	r3, [r7, #16]
1230:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1793              		.loc 1 1230 0
 1794 0046 1800     		movs	r0, r3
 1795 0048 BD46     		mov	sp, r7
 1796 004a 06B0     		add	sp, sp, #24
 1797              		@ sp needed
 1798 004c 80BD     		pop	{r7, pc}
 1799              	.L105:
 1800 004e C046     		.align	2
 1801              	.L104:
 1802 0050 00000000 		.word	CapSense_CSD_rawDataIndex
 1803 0054 00000000 		.word	CapSense_CSD_numberOfSensors
 1804              		.cfi_endproc
 1805              	.LFE55:
 1806              		.size	CapSense_CSD_CheckIsWidgetActive, .-CapSense_CSD_CheckIsWidgetActive
 1807              		.section	.text.CapSense_CSD_CheckIsAnyWidgetActive,"ax",%progbits
 1808              		.align	2
 1809              		.global	CapSense_CSD_CheckIsAnyWidgetActive
 1810              		.code	16
 1811              		.thumb_func
 1812              		.type	CapSense_CSD_CheckIsAnyWidgetActive, %function
 1813              	CapSense_CSD_CheckIsAnyWidgetActive:
 1814              	.LFB56:
1231:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1232:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1233:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
1234:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_CheckIsAnyWidgetActive
1235:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
1236:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1237:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
1238:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Compares all the sensors of the CapSense_CSD_Signal[] array to their finger
1239:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  threshold. Calls CapSense_CSD_CheckIsWidgetActive() for each widget so
1240:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  the CapSense_CSD_sensorOnMask[] array is up to date after calling this
1241:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  function.
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 55


1242:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1243:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
1244:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  widget:  widget number.
1245:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1246:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
1247:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
1248:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1249:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
1250:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
1251:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1252:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
1253:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
1254:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1255:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
1256:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint32 CapSense_CSD_CheckIsAnyWidgetActive(void)
1257:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1815              		.loc 1 1257 0
 1816              		.cfi_startproc
 1817              		@ args = 0, pretend = 0, frame = 8
 1818              		@ frame_needed = 1, uses_anonymous_args = 0
 1819 0000 80B5     		push	{r7, lr}
 1820              		.cfi_def_cfa_offset 8
 1821              		.cfi_offset 7, -8
 1822              		.cfi_offset 14, -4
 1823 0002 82B0     		sub	sp, sp, #8
 1824              		.cfi_def_cfa_offset 16
 1825 0004 00AF     		add	r7, sp, #0
 1826              		.cfi_def_cfa_register 7
1258:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1259:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 i;
1260:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 state = 0u;
 1827              		.loc 1 1260 0
 1828 0006 0023     		movs	r3, #0
 1829 0008 3B60     		str	r3, [r7]
1261:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
1262:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_WIDGET_COUNT; i++)
 1830              		.loc 1 1262 0
 1831 000a 0023     		movs	r3, #0
 1832 000c 7B60     		str	r3, [r7, #4]
 1833 000e 0AE0     		b	.L107
 1834              	.L109:
1263:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1264:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (CapSense_CSD_CheckIsWidgetActive(i) != 0u)
 1835              		.loc 1 1264 0
 1836 0010 7B68     		ldr	r3, [r7, #4]
 1837 0012 1800     		movs	r0, r3
 1838 0014 FFF7FEFF 		bl	CapSense_CSD_CheckIsWidgetActive
 1839 0018 031E     		subs	r3, r0, #0
 1840 001a 01D0     		beq	.L108
1265:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1266:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             state = CapSense_CSD_WIDGET_IS_ACTIVE;
 1841              		.loc 1 1266 0
 1842 001c 0123     		movs	r3, #1
 1843 001e 3B60     		str	r3, [r7]
 1844              	.L108:
1262:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 1845              		.loc 1 1262 0 discriminator 2
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 56


 1846 0020 7B68     		ldr	r3, [r7, #4]
 1847 0022 0133     		adds	r3, r3, #1
 1848 0024 7B60     		str	r3, [r7, #4]
 1849              	.L107:
1262:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 1850              		.loc 1 1262 0 is_stmt 0 discriminator 1
 1851 0026 7B68     		ldr	r3, [r7, #4]
 1852 0028 0B2B     		cmp	r3, #11
 1853 002a F1D9     		bls	.L109
1267:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1268:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
1269:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
1270:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1271:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1272:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return state;
 1854              		.loc 1 1272 0 is_stmt 1
 1855 002c 3B68     		ldr	r3, [r7]
1273:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1856              		.loc 1 1273 0
 1857 002e 1800     		movs	r0, r3
 1858 0030 BD46     		mov	sp, r7
 1859 0032 02B0     		add	sp, sp, #8
 1860              		@ sp needed
 1861 0034 80BD     		pop	{r7, pc}
 1862              		.cfi_endproc
 1863              	.LFE56:
 1864              		.size	CapSense_CSD_CheckIsAnyWidgetActive, .-CapSense_CSD_CheckIsAnyWidgetActive
 1865 0036 C046     		.section	.text.CapSense_CSD_EnableWidget,"ax",%progbits
 1866              		.align	2
 1867              		.global	CapSense_CSD_EnableWidget
 1868              		.code	16
 1869              		.thumb_func
 1870              		.type	CapSense_CSD_EnableWidget, %function
 1871              	CapSense_CSD_EnableWidget:
 1872              	.LFB57:
1274:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1275:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1276:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
1277:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_EnableWidget
1278:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
1279:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1280:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
1281:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Enables all the widget elements (sensors) to the scanning process.
1282:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1283:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
1284:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  widget:  widget number.
1285:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1286:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
1287:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
1288:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1289:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
1290:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[] - used to store the sensor scanning
1291:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  state.
1292:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors
1293:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1294:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for
1295:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 57


1296:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  0 - sensor doesn't scan by CapSense_CSD_ScanEnabledWidgets().
1297:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  1 - sensor scans by CapSense_CSD_ScanEnabledWidgets().
1298:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1299:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
1300:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
1301:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1302:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
1303:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_EnableWidget(uint32 widget)
1304:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1873              		.loc 1 1304 0
 1874              		.cfi_startproc
 1875              		@ args = 0, pretend = 0, frame = 16
 1876              		@ frame_needed = 1, uses_anonymous_args = 0
 1877 0000 80B5     		push	{r7, lr}
 1878              		.cfi_def_cfa_offset 8
 1879              		.cfi_offset 7, -8
 1880              		.cfi_offset 14, -4
 1881 0002 84B0     		sub	sp, sp, #16
 1882              		.cfi_def_cfa_offset 24
 1883 0004 00AF     		add	r7, sp, #0
 1884              		.cfi_def_cfa_register 7
 1885 0006 7860     		str	r0, [r7, #4]
1305:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1306:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 rawIndex = CapSense_CSD_rawDataIndex[widget];
 1886              		.loc 1 1306 0
 1887 0008 0F23     		movs	r3, #15
 1888 000a FB18     		adds	r3, r7, r3
 1889 000c 1549     		ldr	r1, .L113
 1890 000e 7A68     		ldr	r2, [r7, #4]
 1891 0010 8A18     		adds	r2, r1, r2
 1892 0012 1278     		ldrb	r2, [r2]
 1893 0014 1A70     		strb	r2, [r3]
1307:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 numOfSensors = CapSense_CSD_numberOfSensors[widget] + rawIndex;
 1894              		.loc 1 1307 0
 1895 0016 144A     		ldr	r2, .L113+4
 1896 0018 7B68     		ldr	r3, [r7, #4]
 1897 001a D318     		adds	r3, r2, r3
 1898 001c 1978     		ldrb	r1, [r3]
 1899 001e 0E23     		movs	r3, #14
 1900 0020 FB18     		adds	r3, r7, r3
 1901 0022 0F22     		movs	r2, #15
 1902 0024 BA18     		adds	r2, r7, r2
 1903 0026 1278     		ldrb	r2, [r2]
 1904 0028 8A18     		adds	r2, r1, r2
 1905 002a 1A70     		strb	r2, [r3]
 1906              	.L112:
1308:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1309:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Enable all sensors of widget */
1310:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     do
1311:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1312:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_SetBitValue(CapSense_CSD_sensorEnableMask, (uint32)rawIndex, 1u);
 1907              		.loc 1 1312 0 discriminator 1
 1908 002c 0F23     		movs	r3, #15
 1909 002e FB18     		adds	r3, r7, r3
 1910 0030 1978     		ldrb	r1, [r3]
 1911 0032 0E4B     		ldr	r3, .L113+8
 1912 0034 0122     		movs	r2, #1
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 58


 1913 0036 1800     		movs	r0, r3
 1914 0038 FFF7FEFF 		bl	CapSense_CSD_SetBitValue
1313:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         rawIndex++;
 1915              		.loc 1 1313 0 discriminator 1
 1916 003c 0F23     		movs	r3, #15
 1917 003e FB18     		adds	r3, r7, r3
 1918 0040 1A78     		ldrb	r2, [r3]
 1919 0042 0F23     		movs	r3, #15
 1920 0044 FB18     		adds	r3, r7, r3
 1921 0046 0132     		adds	r2, r2, #1
 1922 0048 1A70     		strb	r2, [r3]
1314:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
1315:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     while(rawIndex < numOfSensors);
 1923              		.loc 1 1315 0 discriminator 1
 1924 004a 0F23     		movs	r3, #15
 1925 004c FA18     		adds	r2, r7, r3
 1926 004e 0E23     		movs	r3, #14
 1927 0050 FB18     		adds	r3, r7, r3
 1928 0052 1278     		ldrb	r2, [r2]
 1929 0054 1B78     		ldrb	r3, [r3]
 1930 0056 9A42     		cmp	r2, r3
 1931 0058 E8D3     		bcc	.L112
1316:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1932              		.loc 1 1316 0
 1933 005a C046     		nop
 1934 005c BD46     		mov	sp, r7
 1935 005e 04B0     		add	sp, sp, #16
 1936              		@ sp needed
 1937 0060 80BD     		pop	{r7, pc}
 1938              	.L114:
 1939 0062 C046     		.align	2
 1940              	.L113:
 1941 0064 00000000 		.word	CapSense_CSD_rawDataIndex
 1942 0068 00000000 		.word	CapSense_CSD_numberOfSensors
 1943 006c 00000000 		.word	CapSense_CSD_sensorEnableMask
 1944              		.cfi_endproc
 1945              	.LFE57:
 1946              		.size	CapSense_CSD_EnableWidget, .-CapSense_CSD_EnableWidget
 1947              		.section	.text.CapSense_CSD_DisableWidget,"ax",%progbits
 1948              		.align	2
 1949              		.global	CapSense_CSD_DisableWidget
 1950              		.code	16
 1951              		.thumb_func
 1952              		.type	CapSense_CSD_DisableWidget, %function
 1953              	CapSense_CSD_DisableWidget:
 1954              	.LFB58:
1317:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1318:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1319:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
1320:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_DisableWidget
1321:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
1322:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1323:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
1324:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Disables all the widget elements (sensors) from the scanning process.
1325:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1326:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
1327:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  widget:  widget number.
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 59


1328:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1329:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
1330:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
1331:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1332:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
1333:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[] - used to store the sensor scanning
1334:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  state.
1335:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors
1336:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1337:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for
1338:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1339:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  0 - sensor isn't scanned by CapSense_CSD_ScanEnabledWidgets().
1340:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  1 - sensor is scanned by CapSense_CSD_ScanEnabledWidgets().
1341:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1342:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
1343:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
1344:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1345:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
1346:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_DisableWidget(uint32 widget)
1347:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1955              		.loc 1 1347 0
 1956              		.cfi_startproc
 1957              		@ args = 0, pretend = 0, frame = 16
 1958              		@ frame_needed = 1, uses_anonymous_args = 0
 1959 0000 80B5     		push	{r7, lr}
 1960              		.cfi_def_cfa_offset 8
 1961              		.cfi_offset 7, -8
 1962              		.cfi_offset 14, -4
 1963 0002 84B0     		sub	sp, sp, #16
 1964              		.cfi_def_cfa_offset 24
 1965 0004 00AF     		add	r7, sp, #0
 1966              		.cfi_def_cfa_register 7
 1967 0006 7860     		str	r0, [r7, #4]
1348:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 rawIndex = CapSense_CSD_rawDataIndex[widget];
 1968              		.loc 1 1348 0
 1969 0008 0F23     		movs	r3, #15
 1970 000a FB18     		adds	r3, r7, r3
 1971 000c 1549     		ldr	r1, .L117
 1972 000e 7A68     		ldr	r2, [r7, #4]
 1973 0010 8A18     		adds	r2, r1, r2
 1974 0012 1278     		ldrb	r2, [r2]
 1975 0014 1A70     		strb	r2, [r3]
1349:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 numOfSensors = CapSense_CSD_numberOfSensors[widget] + rawIndex;
 1976              		.loc 1 1349 0
 1977 0016 144A     		ldr	r2, .L117+4
 1978 0018 7B68     		ldr	r3, [r7, #4]
 1979 001a D318     		adds	r3, r2, r3
 1980 001c 1978     		ldrb	r1, [r3]
 1981 001e 0E23     		movs	r3, #14
 1982 0020 FB18     		adds	r3, r7, r3
 1983 0022 0F22     		movs	r2, #15
 1984 0024 BA18     		adds	r2, r7, r2
 1985 0026 1278     		ldrb	r2, [r2]
 1986 0028 8A18     		adds	r2, r1, r2
 1987 002a 1A70     		strb	r2, [r3]
 1988              	.L116:
1350:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 60


1351:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Disable all sensors of widget */
1352:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     do
1353:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1354:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1355:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_SetBitValue(CapSense_CSD_sensorEnableMask, (uint32)rawIndex, 0u);
 1989              		.loc 1 1355 0 discriminator 1
 1990 002c 0F23     		movs	r3, #15
 1991 002e FB18     		adds	r3, r7, r3
 1992 0030 1978     		ldrb	r1, [r3]
 1993 0032 0E4B     		ldr	r3, .L117+8
 1994 0034 0022     		movs	r2, #0
 1995 0036 1800     		movs	r0, r3
 1996 0038 FFF7FEFF 		bl	CapSense_CSD_SetBitValue
1356:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         rawIndex++;
 1997              		.loc 1 1356 0 discriminator 1
 1998 003c 0F23     		movs	r3, #15
 1999 003e FB18     		adds	r3, r7, r3
 2000 0040 1A78     		ldrb	r2, [r3]
 2001 0042 0F23     		movs	r3, #15
 2002 0044 FB18     		adds	r3, r7, r3
 2003 0046 0132     		adds	r2, r2, #1
 2004 0048 1A70     		strb	r2, [r3]
1357:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
1358:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     while(rawIndex < numOfSensors);
 2005              		.loc 1 1358 0 discriminator 1
 2006 004a 0F23     		movs	r3, #15
 2007 004c FA18     		adds	r2, r7, r3
 2008 004e 0E23     		movs	r3, #14
 2009 0050 FB18     		adds	r3, r7, r3
 2010 0052 1278     		ldrb	r2, [r2]
 2011 0054 1B78     		ldrb	r3, [r3]
 2012 0056 9A42     		cmp	r2, r3
 2013 0058 E8D3     		bcc	.L116
1359:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 2014              		.loc 1 1359 0
 2015 005a C046     		nop
 2016 005c BD46     		mov	sp, r7
 2017 005e 04B0     		add	sp, sp, #16
 2018              		@ sp needed
 2019 0060 80BD     		pop	{r7, pc}
 2020              	.L118:
 2021 0062 C046     		.align	2
 2022              	.L117:
 2023 0064 00000000 		.word	CapSense_CSD_rawDataIndex
 2024 0068 00000000 		.word	CapSense_CSD_numberOfSensors
 2025 006c 00000000 		.word	CapSense_CSD_sensorEnableMask
 2026              		.cfi_endproc
 2027              	.LFE58:
 2028              		.size	CapSense_CSD_DisableWidget, .-CapSense_CSD_DisableWidget
 2029              		.section	.text.CapSense_CSD_MedianFilter,"ax",%progbits
 2030              		.align	2
 2031              		.global	CapSense_CSD_MedianFilter
 2032              		.code	16
 2033              		.thumb_func
 2034              		.type	CapSense_CSD_MedianFilter, %function
 2035              	CapSense_CSD_MedianFilter:
 2036              	.LFB59:
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 61


1360:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1361:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1362:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if(CapSense_CSD_TOTAL_CENTROIDS_BASIC_COUNT)
1363:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1364:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_FindMaximum
1365:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
1366:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1367:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
1368:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Finds the index of the maximum element within a defined centroid. Checks
1369:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_sensorSignal[] within a defined centroid and
1370:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  returns the index of the maximum element. The values below the finger threshold are
1371:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  ignored.
1372:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  The centroid is defined by offset of the first element and a number of elements - count.
1373:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  The diplexed centroid requires at least two consecutive elements above
1374:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  FingerThreshold to find the index of the maximum element.
1375:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1376:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
1377:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  offset:  Start index of centroid in CapSense_CSD_sensorSignal[] array.
1378:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  count:   number of elements within centroid.
1379:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  fingerThreshold:  Finger threshold.
1380:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  diplex:   pointer to diplex table.
1381:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1382:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
1383:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns the index of the maximum element within a defined centroid.
1384:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  If the index of the maximum element isn't found it returns 0xFF.
1385:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1386:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
1387:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_startOfSlider[] - contains the index of the first slider element
1388:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1389:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
1390:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
1391:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1392:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1393:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1394:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 CapSense_CSD_FindMaximum(uint8 offset, uint8 count, uint16 fingerThreshold, const uin
1395:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #else
1396:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 CapSense_CSD_FindMaximum(uint8 offset, uint8 count, uint16 fingerThreshold)
1397:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1398:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1399:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 i;
1400:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1401:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 curPos = 0u;
1402:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* No centroid at Start */
1403:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 curCntrdSize = 0u;
1404:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 curCtrdStartPos = CapSense_CSD_MAXIMUM_CENTROID;
1405:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Biggest centroid is zero */
1406:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 biggestCtrdSize = 0u;
1407:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 biggestCtrdStartPos = 0u;
1408:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1409:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 maximum = CapSense_CSD_MAXIMUM_CENTROID;
1410:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1411:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint16 temp = 0u;
1412:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint16 *startOfSlider = &CapSense_CSD_sensorSignal[offset];
1413:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1414:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1415:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if(diplex != 0u)
1416:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 62


1417:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Initialize */
1418:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 i = 0u;
1419:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1420:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Make slider x2 as Diplexed */
1421:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 count <<= 1u;
1422:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 while(1u)
1423:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1424:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     if (startOfSlider[curPos] > 0u)    /* Looking for centroids */
1425:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1426:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         if (curCtrdStartPos == CapSense_CSD_MAXIMUM_CENTROID)
1427:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         {
1428:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             /* Start of centroid */
1429:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             curCtrdStartPos = i;
1430:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             curCntrdSize++;
1431:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         }
1432:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         else
1433:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         {
1434:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             curCntrdSize++;
1435:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         }
1436:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1437:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     else   /* Select biggest and indicate zero start */
1438:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1439:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         if(curCntrdSize > 0u)
1440:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         {
1441:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             /* We are at the end of current */
1442:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if(curCntrdSize > biggestCtrdSize)
1443:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1444:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 biggestCtrdSize = curCntrdSize;
1445:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 biggestCtrdStartPos = curCtrdStartPos;
1446:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1447:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1448:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             curCntrdSize = 0u;
1449:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             curCtrdStartPos = CapSense_CSD_MAXIMUM_CENTROID;
1450:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         }
1451:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1452:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1453:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     i++;
1454:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     curPos = diplex[i];
1455:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     if(i == count)
1456:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1457:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         break;
1458:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1459:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1460:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1461:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     /* Find biggest centroid if two are same size, last one wins
1462:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                        We are at the end of current */
1463:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if (curCntrdSize >= biggestCtrdSize)
1464:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1465:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     biggestCtrdSize = curCntrdSize;
1466:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     biggestCtrdStartPos = curCtrdStartPos;
1467:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1468:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1469:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             else
1470:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1471:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Without diplexing */
1472:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 biggestCtrdSize = count;
1473:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 63


1474:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1475:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1476:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Check centroid size */
1477:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #if (CapSense_CSD_IS_NON_DIPLEX_SLIDER)
1478:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if((biggestCtrdSize >= 2u) || ((biggestCtrdSize == 1u) && (diplex == 0u)))
1479:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #else
1480:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if(biggestCtrdSize >= 2u)
1481:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #endif /* (CapSense_CSD_IS_NON_DIPLEX_SLIDER) */
1482:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1483:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     for (i = biggestCtrdStartPos; i < (biggestCtrdStartPos + biggestCtrdSize); i++)
1484:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1485:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (CapSense_CSD_IS_DIPLEX_SLIDER && CapSense_CSD_IS_NON_DIPLEX_SLIDER)
1486:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (diplex == 0u)
1487:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1488:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 curPos = i;
1489:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1490:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             else
1491:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1492:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 curPos = diplex[i];
1493:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1494:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #elif (CapSense_CSD_IS_DIPLEX_SLIDER)
1495:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             curPos = diplex[i];
1496:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER && CapSense_CSD_IS_NON_DIPLEX_SLID
1497:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         /* Looking for greater element within centroid */
1498:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         if(startOfSlider[curPos] > fingerThreshold)
1499:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         {
1500:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if(startOfSlider[curPos] > temp)
1501:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1502:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 maximum = i;
1503:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 temp = startOfSlider[curPos];
1504:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1505:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         }
1506:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1507:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1508:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #else
1509:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             for (i = 0u; i < count; i++)
1510:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1511:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Looking for greater element within centroid */
1512:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if(startOfSlider[i] > fingerThreshold)
1513:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1514:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     if(startOfSlider[i] > temp)
1515:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1516:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         maximum = i;
1517:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         temp = startOfSlider[i];
1518:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1519:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1520:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1521:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1522:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return (maximum);
1523:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
1524:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1525:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1526:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1527:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_CalcCentroid
1528:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
1529:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1530:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 64


1531:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns a position value calculated according to the index of the maximum element and API
1532:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  resolution.
1533:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1534:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
1535:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  type:  widget type.
1536:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  diplex:  pointer to diplex table.
1537:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  maximum:  Index of maximum element within centroid.
1538:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  offset:   Start index of centroid in CapSense_CSD_sensorSignal[] array.
1539:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  count:    Number of elements within centroid.
1540:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  resolution:  multiplicator calculated according to centroid type and
1541:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  API resolution.
1542:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  noiseThreshold:  Noise threshold.
1543:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1544:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
1545:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns a position value of the slider.
1546:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1547:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
1548:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
1549:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1550:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1551:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (CapSense_CSD_TOTAL_TRACKPAD_GESTURES_COUNT > 0u)
1552:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 CapSense_CSD_CalcCentroid(uint8 maximum, uint8 offset,
1553:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         uint8 count, uint32 resolution, uint16 noiseThreshold)
1554:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #else
1555:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 CapSense_CSD_CalcCentroid(uint8 maximum, uint8 offset,
1556:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         uint8 count, uint16 resolution, uint16 noiseThreshold)
1557:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TOTAL_TRACKPAD_GESTURES_COUNT > 0u) */
1558:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1559:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_TOUCH_PADS_BASIC
1560:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posPrev;
1561:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posNext;
1562:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_CSD_TOTAL_TOUCH_PADS_B
1563:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1564:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Helps during centroid calculation */
1565:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_TOTAL_CENTROIDS_BASIC_COUNT)
1566:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             static uint16 CapSense_CSD_centroid[3u];
1567:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif  /* (CapSense_CSD_TOTAL_CENTROIDS_BASIC_COUNT) */
1568:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1569:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1570:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 pos;
1571:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1572:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1573:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 position;
1574:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 numerator;
1575:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         int32 denominator;
1576:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1577:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint16  *startOfSlider = &CapSense_CSD_sensorSignal[offset];
1578:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1579:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_TOUCH_PADS_BASIC
1580:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             posPrev = 0u;
1581:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_CSD_TOTAL_TOUCH_PADS_B
1582:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1583:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_ADD_SLIDER_TYPE)
1584:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if(type == CapSense_CSD_TYPE_RADIAL_SLIDER)
1585:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1586:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_ADD_SLIDER_TYPE) */
1587:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 65


1588:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #if (CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1589:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Copy Signal to the centroid array */
1590:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 CapSense_CSD_centroid[CapSense_CSD_POS] = startOfSlider[maximum];
1591:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1592:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Check borders for ROTARY Slider */
1593:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1594:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1595:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[count - 1u];
1596:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[1u];
1597:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1598:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 else if (maximum == (count - 1u))    /* End of centroid */
1599:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1600:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[maximum - 1u];
1601:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[0u];
1602:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1603:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 else                                /* Not first Not last */
1604:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1605:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[maximum - 1u];
1606:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[maximum + 1u];
1607:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1608:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #endif /* (CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1609:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1610:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_ADD_SLIDER_TYPE)
1611:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1612:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             else
1613:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1614:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_ADD_SLIDER_TYPE) */
1615:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1616:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #if ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_TOUCH_PADS_B
1617:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #if (CapSense_CSD_IS_DIPLEX_SLIDER && CapSense_CSD_IS_NON_DIPLEX_SLIDER)
1618:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     /* Calculate next and previous near to maximum */
1619:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     if(diplex == 0u)
1620:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1621:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         pos     = maximum;
1622:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         posPrev = maximum - 1u;
1623:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         posNext = maximum + 1u;
1624:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1625:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     else
1626:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1627:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         pos     = diplex[maximum];
1628:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         posPrev = diplex[maximum - 1u];
1629:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         posNext = diplex[maximum + 1u];
1630:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         count <<= 1u;
1631:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1632:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #elif (CapSense_CSD_IS_DIPLEX_SLIDER)
1633:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     /* Calculate next and previous near to maximum */
1634:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     pos     = diplex[maximum];
1635:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     posPrev = diplex[maximum - 1u];
1636:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     posNext = diplex[maximum + 1u];
1637:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     count <<= 1u;
1638:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #else
1639:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     /* Calculate next and previous near to maximum */
1640:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     if (maximum >= 1u)
1641:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1642:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         posPrev = maximum - 1u;
1643:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1644:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     posNext = maximum + 1u;
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 66


1645:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER && CapSense_CSD_IS_NON_DIPLEX_SLIDER) */
1646:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1647:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Copy Signal to the centroid array */
1648:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1649:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS] = startOfSlider[pos];
1650:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #else
1651:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS] = startOfSlider[maximum];
1652:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1653:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1654:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Check borders for LINEAR Slider */
1655:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1656:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1657:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = 0u;
1658:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[posNext];
1659:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1660:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 else if (maximum == ((count) - 1u)) /* End of centroid */
1661:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1662:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[posPrev];
1663:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = 0u;
1664:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1665:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 else                                /* Not first Not last */
1666:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1667:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[posPrev];
1668:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[posNext];
1669:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1670:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #endif /* ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT>0u)||(CapSense_CSD_TOTAL_TOUCH_PADS
1671:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1672:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_ADD_SLIDER_TYPE)
1673:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1674:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_ADD_SLIDER_TYPE) */
1675:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1676:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Subtract noiseThreshold */
1677:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(CapSense_CSD_centroid[CapSense_CSD_POS_PREV] > noiseThreshold)
1678:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1679:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_centroid[CapSense_CSD_POS_PREV] -= noiseThreshold;
1680:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1681:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         else
1682:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1683:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = 0u;
1684:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1685:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1686:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Maximum always greater than fingerThreshold, so greater than noiseThreshold */
1687:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_centroid[CapSense_CSD_POS] -= noiseThreshold;
1688:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1689:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Subtract noiseThreshold */
1690:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] > noiseThreshold)
1691:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1692:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] -= noiseThreshold;
1693:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1694:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         else
1695:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1696:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = 0u;
1697:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1698:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1699:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1700:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Si+1 - Si-1 */
1701:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         numerator = (uint32) CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] -
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 67


1702:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     (uint32) CapSense_CSD_centroid[CapSense_CSD_POS_PREV];
1703:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1704:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Si+1 + Si + Si-1 */
1705:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         denominator = (int32) CapSense_CSD_centroid[CapSense_CSD_POS_PREV] +
1706:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                       (int32) CapSense_CSD_centroid[CapSense_CSD_POS] +
1707:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                       (int32) CapSense_CSD_centroid[CapSense_CSD_POS_NEXT];
1708:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1709:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* (numerator/denominator) + maximum */
1710:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         denominator = (((int32)(uint32)((uint32)numerator << 8u)/denominator) + (int32)(uint32)((ui
1711:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1712:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if(CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1713:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Only required for RADIAL Slider */
1714:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if(denominator < 0)
1715:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1716:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 denominator += (int32)((uint16)((uint16) count << 8u));
1717:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1718:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1719:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1720:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         denominator *= (int16)resolution;
1721:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1722:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Round result and put it to uint8 */
1723:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         position = ((uint8) HI16((uint32)denominator + CapSense_CSD_CENTROID_ROUND_VALUE));
1724:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1725:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return (position);
1726:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
1727:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TOTAL_CENTROIDS_BASIC_COUNT) */
1728:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1729:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1730:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if((CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT > 0u
1731:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1732:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_GetCentroidPos
1733:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
1734:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1735:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
1736:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Checks the CapSense_CSD_Signal[ ] array for a centroid within
1737:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1738:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1739:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  result if enabled.
1740:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1741:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
1742:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  widget:  Widget number.
1743:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  For every linear slider widget there are defines in this format:
1744:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  #define CapSense_CSD_"widget_name"__LS           5
1745:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1746:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
1747:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns a position value of the linear slider.
1748:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1749:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
1750:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
1751:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1752:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
1753:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1754:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1755:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  sensors are active, the function returns 0xFFFF. If an error occurs during
1756:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  execution of the centroid/diplexing algorithm, the function returns 0xFFFF.
1757:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1758:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 68


1759:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1760:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Note:
1761:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1762:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1763:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1764:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  that noise will not generate a false centroid.
1765:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1766:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_GetCentroidPos(uint32 widget)
1767:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1768:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1769:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             const uint8 *diplex;
1770:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1771:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1772:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)
1773:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posIndex;
1774:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 firstTimeIndex = CapSense_CSD_posFiltersData[widget];
1775:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posFiltersMask = CapSense_CSD_posFiltersMask[widget];
1776:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1777:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1778:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)) ||
1779:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****              (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1780:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 tempPos;
1781:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MAS
1782:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                *   (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_
1783:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                */
1784:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1785:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 maximum;
1786:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint16 position;
1787:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 offset = CapSense_CSD_rawDataIndex[widget];
1788:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 count = CapSense_CSD_numberOfSensors[widget];
1789:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1790:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1791:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if(widget < CapSense_CSD_TOTAL_DIPLEXED_SLIDERS_COUNT)
1792:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1793:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 maximum = CapSense_CSD_diplexTable[widget];
1794:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 diplex = &CapSense_CSD_diplexTable[maximum];
1795:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1796:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             else
1797:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1798:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 diplex = 0u;
1799:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1800:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1801:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1802:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Find Maximum within centroid */
1803:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1804:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             maximum = CapSense_CSD_FindMaximum(offset, count, (uint16)CapSense_CSD_fingerThreshold[
1805:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #else
1806:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             maximum = CapSense_CSD_FindMaximum(offset, count, (uint16)CapSense_CSD_fingerThreshold[
1807:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1808:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1809:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (maximum != 0xFFu)
1810:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1811:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Calculate centroid */
1812:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             position = (uint16) CapSense_CSD_CalcCentroid(maximum,
1813:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                          offset, count, CapSense_CSD_centroidMult[widget], CapSense_CSD_noiseThresh
1814:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1815:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #if (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 69


1816:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Check if this linear slider has enabled filters */
1817:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_CSD_ANY_POS_FILTER))
1818:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1819:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     /* Calculate position to store filters data */
1820:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1821:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1822:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     if (0u == CapSense_CSD_posFiltersData[firstTimeIndex])
1823:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1824:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         /* Init filters */
1825:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
1826:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if ((0u != (CapSense_CSD_MEDIAN_FILTER & \
1827:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                      CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1828:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                              (0u != (CapSense_CSD_AVERAGING_FILTER & \
1829:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                      CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1830:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1831:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER)) ||
1832:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER)) )
1833:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1834:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex + 1u] = (uint8) position;
1835:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1836:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & \
1837:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1838:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *   (0u != (CapSense_CSD_AVERAGING_FILTER & \
1839:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1840:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
1841:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1842:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         CapSense_CSD_posFiltersData[firstTimeIndex] = 1u;
1843:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1844:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     else
1845:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1846:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         /* Do filtering */
1847:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FI
1848:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER))
1849:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1850:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 tempPos = (uint8) position;
1851:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_MedianFilter(position,
1852:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                 (uint16)CapSense_CSD_posFiltersData
1853:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                 (uint16)CapSense_CSD_posFiltersData
1854:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex + 1u] =
1855:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                              CapSense_CSD_posFilter
1856:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = tempPos;
1857:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1858:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /*(0u != (CapSense_CSD_MEDIAN_FILTER &
1859:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *         CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1860:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
1861:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1862:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if(0u!=(CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FI
1863:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER))
1864:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1865:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 tempPos = (uint8) position;
1866:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_AveragingFilter(position,
1867:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                 (uint16)CapSense_CSD_posFiltersData
1868:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                 (uint16)CapSense_CSD_posFiltersData
1869:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex+1u]=CapSense_CSD_posFiltersDat
1870:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = tempPos;
1871:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1872:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_AVERAGING_FILTER & \
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 70


1873:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1874:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
1875:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1876:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_IIR2_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILT
1877:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_IIR2_FILTER))
1878:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1879:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_IIR2Filter(position,
1880:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
1881:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
1882:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1883:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_IIR2_FILTER & \
1884:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1885:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
1886:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1887:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_IIR4_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILT
1888:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_IIR4_FILTER))
1889:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1890:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_IIR4Filter(position,
1891:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
1892:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
1893:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1894:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_IIR4_FILTER & \
1895:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1896:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
1897:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1898:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_JITTER_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FI
1899:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_JITTER_FILTER))
1900:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1901:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_JitterFilter(position,
1902:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
1903:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
1904:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1905:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_JITTER_FILTER & \
1906:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1907:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
1908:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1909:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1910:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #endif /* (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1911:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1912:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1913:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         else
1914:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1915:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Maximum wasn't found */
1916:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             position = 0xFFFFu;
1917:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1918:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #if(0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)
1919:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Reset filters */
1920:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if(0u != (posFiltersMask & CapSense_CSD_ANY_POS_FILTER))
1921:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1922:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_posFiltersData[firstTimeIndex] = 0u;
1923:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1924:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #endif /* (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1925:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1926:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1927:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1928:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return (position);
1929:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 71


1930:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* ((CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_LINEAR_SLIDERS_COU
1931:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1932:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1933:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if((CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT > 0u
1934:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1935:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_GetRadialCentroidPos
1936:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
1937:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1938:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
1939:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Checks the CapSense_CSD_Signal[ ] array for a centroid within
1940:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1941:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1942:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  result if enabled.
1943:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1944:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
1945:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  widget:  Widget number.
1946:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  For every radial slider widget there are defines in this format:
1947:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  #define CapSense_CSD_"widget_name"__RS           5
1948:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1949:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
1950:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns a position value of the radial slider.
1951:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1952:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
1953:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None.
1954:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1955:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
1956:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1957:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1958:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  sensors are active, the function returns 0xFFFF.
1959:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1960:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1961:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1962:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Note:
1963:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1964:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1965:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1966:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  that noise will not generate a false centroid.
1967:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1968:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1969:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****      uint16 CapSense_CSD_GetRadialCentroidPos(uint32 widget)
1970:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1971:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (0u != CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)
1972:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posIndex;
1973:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 firstTimeIndex = CapSense_CSD_posFiltersData[widget];
1974:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posFiltersMask = CapSense_CSD_posFiltersMask[widget];
1975:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (0u != CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1976:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1977:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)) ||
1978:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****              (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
1979:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 tempPos;
1980:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MAS
1981:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                *   (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_
1982:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                */
1983:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1984:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 maximum;
1985:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint16 position;
1986:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 offset = CapSense_CSD_rawDataIndex[widget];
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 72


1987:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 count = CapSense_CSD_numberOfSensors[widget];
1988:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1989:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Find Maximum within centroid */
1990:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1991:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             maximum = CapSense_CSD_FindMaximum(offset, count, (uint16)CapSense_CSD_fingerThreshold[
1992:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #else
1993:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             maximum = CapSense_CSD_FindMaximum(offset, count, (uint16)CapSense_CSD_fingerThreshold[
1994:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1995:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1996:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (maximum != CapSense_CSD_MAXIMUM_CENTROID)
1997:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1998:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Calculate centroid */
1999:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             position = (uint16) CapSense_CSD_CalcCentroid(maximum,
2000:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                          offset, count, CapSense_CSD_centroidMult[widget], CapSense_CSD_noiseThresh
2001:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2002:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #if (0u != CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)
2003:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Check if this Radial slider has enabled filters */
2004:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_CSD_ANY_POS_FILTER))
2005:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
2006:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     /* Calculate position to store filters data */
2007:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
2008:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2009:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     if (0u == CapSense_CSD_posFiltersData[firstTimeIndex])
2010:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
2011:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         /* Init filters */
2012:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
2013:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if ((0u != (CapSense_CSD_MEDIAN_FILTER & \
2014:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                      CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
2015:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                              (0u != (CapSense_CSD_AVERAGING_FILTER & \
2016:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                      CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)))
2017:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2018:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER))  ||
2019:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER)) )
2020:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
2021:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex + 1u] = (uint8) position;
2022:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
2023:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & \
2024:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
2025:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *   (0u != (CapSense_CSD_AVERAGING_FILTER & \
2026:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)))
2027:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
2028:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2029:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         CapSense_CSD_posFiltersData[firstTimeIndex] = 1u;
2030:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
2031:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     else
2032:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
2033:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         /* Do filtering */
2034:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FI
2035:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER))
2036:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
2037:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 tempPos = (uint8) position;
2038:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_MedianFilter(position,
2039:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                         CapSense_CSD_posFiltersData
2040:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                         CapSense_CSD_posFiltersData
2041:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex + 1u] =
2042:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                               CapSense_CSD_posFilte
2043:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = tempPos;
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 73


2044:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
2045:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_MEDIAN_FILTER &
2046:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
2047:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
2048:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2049:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_AVERAGING_FILTER & \
2050:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
2051:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER))
2052:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
2053:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 tempPos = (uint8) position;
2054:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_AveragingFilter(position,
2055:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                        CapSense_CSD_posFiltersData[
2056:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                        CapSense_CSD_posFiltersData[
2057:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex+1u]= CapSense_CSD_posFiltersDa
2058:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = tempPos;
2059:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
2060:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_AVERAGING_FILTER & \
2061:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
2062:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
2063:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2064:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_IIR2_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FILT
2065:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_IIR2_FILTER))
2066:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
2067:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_IIR2Filter(position,
2068:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
2069:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
2070:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
2071:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_IIR2_FILTER &
2072:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
2073:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
2074:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2075:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_IIR4_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FILT
2076:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_IIR4_FILTER))
2077:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
2078:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_IIR4Filter(position,
2079:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
2080:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
2081:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
2082:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_IIR4_FILTER &
2083:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
2084:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
2085:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2086:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_JITTER_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FI
2087:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_JITTER_FILTER))
2088:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
2089:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_JitterFilter(position,
2090:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                          CapSense_CSD_posFiltersDat
2091:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
2092:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
2093:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_JITTER_FILTER &
2094:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
2095:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
2096:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
2097:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
2098:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #endif /* (0u != CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2099:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2100:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 74


2101:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         else
2102:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
2103:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Maximum was not found */
2104:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             position = 0xFFFFu;
2105:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2106:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #if (0u != CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)
2107:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Reset filters */
2108:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if((posFiltersMask & CapSense_CSD_ANY_POS_FILTER) != 0u)
2109:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
2110:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_posFiltersData[firstTimeIndex] = 0u;
2111:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
2112:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #endif /* (0u != CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2113:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
2114:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2115:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return (position);
2116:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
2117:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* ((CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_LINEAR_SLIDERS_COU
2118:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2119:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2120:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if(CapSense_CSD_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u)
2121:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2122:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_GetTouchCentroidPos
2123:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2124:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2125:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2126:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  If a finger is present on a touchpad, this function calculates the X and Y
2127:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  position of the finger by calculating the centroids within touchpad specified
2128:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  range. The X and Y positions are calculated according to the API resolutions set in the
2129:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense customizer. Returns 1 if a finger is on the touchpad.
2130:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  The position filter is applied to the result if enabled.
2131:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This function is available only if a touch pad is defined by the CapSense
2132:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  customizer.
2133:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2134:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2135:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  widget:  Widget number.
2136:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  For every touchpad widget there are defines in this format:
2137:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  #define CapSense_CSD_"widget_name"__TP            5
2138:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2139:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  pos:     Pointer to the array of two uint16 elements, where result
2140:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  result of calculation of X and Y position are stored.
2141:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  pos[0u]  - position of X
2142:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  pos[1u]  - position of Y
2143:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2144:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2145:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns a 1 if a finger is on the touch pad, 0 - if not.
2146:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2147:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2148:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None.
2149:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2150:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2151:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *   There are no checks of the widget type argument provided to this function.
2152:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *   The unproper widget type provided will cause unexpected position
2153:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *   calculations.
2154:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2155:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2156:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 CapSense_CSD_GetTouchCentroidPos(uint32 widget, uint16* pos)
2157:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 75


2158:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (0u != CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)
2159:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posXIndex;
2160:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posYIndex;
2161:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 firstTimeIndex = CapSense_CSD_posFiltersData[widget];
2162:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posFiltersMask = CapSense_CSD_posFiltersMask[widget];
2163:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (0u != CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK) */
2164:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2165:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)) || \
2166:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****              (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)))
2167:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint16 tempPos;
2168:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)) 
2169:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                *   (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK
2170:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                */
2171:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2172:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 MaxX;
2173:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 MaxY;
2174:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 posX;
2175:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 posY;
2176:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 touch = 0u;
2177:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 offset = CapSense_CSD_rawDataIndex[widget];
2178:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 count = CapSense_CSD_numberOfSensors[widget];
2179:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2180:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Find Maximum within X centroid */
2181:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
2182:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             MaxX = CapSense_CSD_FindMaximum(offset, count, CapSense_CSD_fingerThreshold[widget], 0u
2183:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #else
2184:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             MaxX = CapSense_CSD_FindMaximum(offset, count, CapSense_CSD_fingerThreshold[widget]);
2185:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
2186:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2187:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (MaxX != CapSense_CSD_MAXIMUM_CENTROID)
2188:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
2189:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             offset = CapSense_CSD_rawDataIndex[widget + 1u];
2190:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             count = CapSense_CSD_numberOfSensors[widget + 1u];
2191:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2192:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Find Maximum within Y centroid */
2193:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #if (CapSense_CSD_IS_DIPLEX_SLIDER)
2194:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 MaxY = CapSense_CSD_FindMaximum(offset, count, CapSense_CSD_fingerThreshold[widget 
2195:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #else
2196:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 MaxY = CapSense_CSD_FindMaximum(offset, count, CapSense_CSD_fingerThreshold[widget 
2197:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
2198:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2199:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if (MaxY != CapSense_CSD_MAXIMUM_CENTROID)
2200:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
2201:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* X and Y maximums are found = true touch */
2202:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 touch = 1u;
2203:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2204:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Calculate Y centroid */
2205:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 posY = CapSense_CSD_CalcCentroid(MaxY, offset, count,
2206:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             CapSense_CSD_centroidMult[widget + 1u], CapSense_CSD_noiseThreshold[wid
2207:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2208:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Calculate X centroid */
2209:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 offset = CapSense_CSD_rawDataIndex[widget];
2210:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 count = CapSense_CSD_numberOfSensors[widget];
2211:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2212:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 posX = CapSense_CSD_CalcCentroid(MaxX, offset, count,
2213:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             CapSense_CSD_centroidMult[widget],CapSense_CSD_noiseThreshold[widget]);
2214:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 76


2215:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #if (0u != CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)
2216:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     /* Check if this TP has enabled filters */
2217:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     if (0u != (posFiltersMask & CapSense_CSD_ANY_POS_FILTER))
2218:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
2219:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         /* Calculate position to store filters data */
2220:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         posXIndex  = firstTimeIndex + 1u;
2221:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         posYIndex  = CapSense_CSD_posFiltersData[widget + 1u];
2222:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2223:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         if (0u == CapSense_CSD_posFiltersData[firstTimeIndex])
2224:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         {
2225:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             /* Init filters */
2226:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             CapSense_CSD_posFiltersData[posXIndex] = posX;
2227:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             CapSense_CSD_posFiltersData[posYIndex] = posY;
2228:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2229:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #if((0u != (CapSense_CSD_MEDIAN_FILTER & \
2230:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK))|| \
2231:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 (0u != (CapSense_CSD_AVERAGING_FILTER & \
2232:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)))
2233:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2234:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 if ( (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER)) ||
2235:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                      (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER)) )
2236:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 {
2237:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex + 1u] = posX;
2238:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex + 1u] = posY;
2239:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 }
2240:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & \
2241:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    *           CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)) || \
2242:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    *    (0u != (CapSense_CSD_AVERAGING_FILTER & \
2243:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    *            CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)))
2244:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    */
2245:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2246:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             CapSense_CSD_posFiltersData[firstTimeIndex] = 1u;
2247:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         }
2248:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         else
2249:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         {
2250:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             /* Do filtering */
2251:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #if (0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_TOUCH_PADS_POS_FI
2252:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER))
2253:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 {
2254:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     tempPos = posX;
2255:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     posX = (uint8) CapSense_CSD_MedianFilter(posX,
2256:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                       CapSense_CSD_posFiltersData[p
2257:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                       CapSense_CSD_posFiltersData[p
2258:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex + 1u] =
2259:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                              CapSense_CSD_posFilter
2260:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex] = tempPos;
2261:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2262:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     tempPos = posY;
2263:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     posY = (uint8) CapSense_CSD_MedianFilter(posY,
2264:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                        CapSense_CSD_posFiltersData[
2265:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                        CapSense_CSD_posFiltersData[
2266:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex + 1u] =
2267:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                              CapSense_CSD_posFilter
2268:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex] = tempPos;
2269:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 }
2270:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2271:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #endif /* (0u != (CapSense_CSD_MEDIAN_FILTER & \
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 77


2272:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    *          CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK))
2273:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    */
2274:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2275:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #if(0u !=(CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_TOUCH_PADS_POS_F
2276:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER))
2277:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 {
2278:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     tempPos = posX;
2279:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     posX = (uint8) CapSense_CSD_AveragingFilter(posX,
2280:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                        CapSense_CSD_posFiltersData[
2281:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                        CapSense_CSD_posFiltersData[
2282:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex + 1u] =
2283:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                              CapSense_CSD_posFilter
2284:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex] = tempPos;
2285:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2286:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     tempPos = posY;
2287:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     posY = (uint8) CapSense_CSD_AveragingFilter(posY,
2288:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                       CapSense_CSD_posFiltersData[p
2289:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                       CapSense_CSD_posFiltersData[p
2290:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex + 1u] =
2291:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                             CapSense_CSD_posFilters
2292:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex] = tempPos;
2293:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 }
2294:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2295:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #endif /* (0u != (CapSense_CSD_AVERAGING_FILTER & \
2296:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    *           CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK))
2297:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    */
2298:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2299:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #if (0u != (CapSense_CSD_IIR2_FILTER & CapSense_CSD_TOUCH_PADS_POS_FILT
2300:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_CSD_IIR2_FILTER))
2301:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 {
2302:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     posX = (uint8) CapSense_CSD_IIR2Filter(posX,
2303:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                            CapSense_CSD_posFiltersD
2304:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex] = posX;
2305:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2306:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     posY = (uint8) CapSense_CSD_IIR2Filter(posY,
2307:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                             CapSense_CSD_posFilters
2308:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex] = posY;
2309:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 }
2310:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2311:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #endif /* (0u != (CapSense_CSD_IIR2_FILTER & \
2312:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    *          CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK))
2313:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    */
2314:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2315:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #if (0u != (CapSense_CSD_IIR4_FILTER & CapSense_CSD_TOUCH_PADS_POS_FILT
2316:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_CSD_IIR4_FILTER))
2317:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 {
2318:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     posX = (uint8) CapSense_CSD_IIR4Filter((uint16)posX,
2319:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
2320:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex] = posX;
2321:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2322:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     posY = (uint8) CapSense_CSD_IIR4Filter((uint16)posY,
2323:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
2324:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex] = posY;
2325:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 }
2326:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2327:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #endif /* (0u != (CapSense_CSD_IIR4_FILTER & \
2328:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    *           CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK))
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 78


2329:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    */
2330:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2331:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #if (0u != (CapSense_CSD_JITTER_FILTER & CapSense_CSD_TOUCH_PADS_POS_FI
2332:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_CSD_JITTER_FILTER))
2333:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     {
2334:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         posX = (uint8) CapSense_CSD_JitterFilter(posX,
2335:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                             CapSense_CSD_posFilters
2336:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         CapSense_CSD_posFiltersData[posXIndex] = posX;
2337:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2338:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         posY = (uint8) CapSense_CSD_JitterFilter(posY,
2339:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                             CapSense_CSD_posFilters
2340:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         CapSense_CSD_posFiltersData[posYIndex] = posY;
2341:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     }
2342:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #endif /* (0u != (CapSense_CSD_JITTER_FILTER & \
2343:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    *           CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK))
2344:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    */
2345:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         }
2346:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
2347:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #endif /* (0u != CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK) */
2348:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2349:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Save positions */
2350:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 pos[0u] = posX;
2351:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 pos[1u] = posY;
2352:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
2353:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
2354:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2355:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (0u != CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)
2356:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if(touch == 0u)
2357:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
2358:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Reset filters */
2359:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if ((posFiltersMask & CapSense_CSD_ANY_POS_FILTER) != 0u)
2360:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
2361:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_posFiltersData[firstTimeIndex] = 0u;
2362:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
2363:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
2364:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (0u != CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK) */
2365:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2366:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return (touch);
2367:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
2368:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u) */
2369:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2370:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2371:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER)) || \
2372:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_MEDIAN_FILTER)) || \
2373:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       ((CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO)) )
2374:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2375:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_MedianFilter
2376:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2377:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2378:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2379:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This is the Median filter function.
2380:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  The median filter looks at the three most recent samples and reports the
2381:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  median value.
2382:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2383:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2384:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
2385:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 79


2386:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x3:  Before previous value.
2387:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2388:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2389:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns filtered value.
2390:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2391:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2392:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None.
2393:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2394:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2395:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2396:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2397:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2398:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_MedianFilter(uint16 x1, uint16 x2, uint16 x3)
2399:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 2037              		.loc 1 2399 0
 2038              		.cfi_startproc
 2039              		@ args = 0, pretend = 0, frame = 16
 2040              		@ frame_needed = 1, uses_anonymous_args = 0
 2041 0000 90B5     		push	{r4, r7, lr}
 2042              		.cfi_def_cfa_offset 12
 2043              		.cfi_offset 4, -12
 2044              		.cfi_offset 7, -8
 2045              		.cfi_offset 14, -4
 2046 0002 85B0     		sub	sp, sp, #20
 2047              		.cfi_def_cfa_offset 32
 2048 0004 00AF     		add	r7, sp, #0
 2049              		.cfi_def_cfa_register 7
 2050 0006 0400     		movs	r4, r0
 2051 0008 0800     		movs	r0, r1
 2052 000a 1100     		movs	r1, r2
 2053 000c BB1D     		adds	r3, r7, #6
 2054 000e 221C     		adds	r2, r4, #0
 2055 0010 1A80     		strh	r2, [r3]
 2056 0012 3B1D     		adds	r3, r7, #4
 2057 0014 021C     		adds	r2, r0, #0
 2058 0016 1A80     		strh	r2, [r3]
 2059 0018 BB1C     		adds	r3, r7, #2
 2060 001a 0A1C     		adds	r2, r1, #0
 2061 001c 1A80     		strh	r2, [r3]
2400:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint16 tmp;
2401:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2402:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (x1 > x2)
 2062              		.loc 1 2402 0
 2063 001e BA1D     		adds	r2, r7, #6
 2064 0020 3B1D     		adds	r3, r7, #4
 2065 0022 1288     		ldrh	r2, [r2]
 2066 0024 1B88     		ldrh	r3, [r3]
 2067 0026 9A42     		cmp	r2, r3
 2068 0028 0DD9     		bls	.L120
2403:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
2404:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             tmp = x2;
 2069              		.loc 1 2404 0
 2070 002a 0E23     		movs	r3, #14
 2071 002c FB18     		adds	r3, r7, r3
 2072 002e 3A1D     		adds	r2, r7, #4
 2073 0030 1288     		ldrh	r2, [r2]
 2074 0032 1A80     		strh	r2, [r3]
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 80


2405:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             x2 = x1;
 2075              		.loc 1 2405 0
 2076 0034 3B1D     		adds	r3, r7, #4
 2077 0036 BA1D     		adds	r2, r7, #6
 2078 0038 1288     		ldrh	r2, [r2]
 2079 003a 1A80     		strh	r2, [r3]
2406:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             x1 = tmp;
 2080              		.loc 1 2406 0
 2081 003c BB1D     		adds	r3, r7, #6
 2082 003e 0E22     		movs	r2, #14
 2083 0040 BA18     		adds	r2, r7, r2
 2084 0042 1288     		ldrh	r2, [r2]
 2085 0044 1A80     		strh	r2, [r3]
 2086              	.L120:
2407:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
2408:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2409:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (x2 > x3)
 2087              		.loc 1 2409 0
 2088 0046 3A1D     		adds	r2, r7, #4
 2089 0048 BB1C     		adds	r3, r7, #2
 2090 004a 1288     		ldrh	r2, [r2]
 2091 004c 1B88     		ldrh	r3, [r3]
 2092 004e 9A42     		cmp	r2, r3
 2093 0050 03D9     		bls	.L121
2410:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
2411:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             x2 = x3;
 2094              		.loc 1 2411 0
 2095 0052 3B1D     		adds	r3, r7, #4
 2096 0054 BA1C     		adds	r2, r7, #2
 2097 0056 1288     		ldrh	r2, [r2]
 2098 0058 1A80     		strh	r2, [r3]
 2099              	.L121:
2412:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
2413:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2414:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return ((x1 > x2) ? x1 : x2);
 2100              		.loc 1 2414 0
 2101 005a 3B1D     		adds	r3, r7, #4
 2102 005c BA1D     		adds	r2, r7, #6
 2103 005e 1088     		ldrh	r0, [r2]
 2104 0060 1B88     		ldrh	r3, [r3]
 2105 0062 99B2     		uxth	r1, r3
 2106 0064 82B2     		uxth	r2, r0
 2107 0066 9142     		cmp	r1, r2
 2108 0068 00D2     		bcs	.L122
 2109 006a 031C     		adds	r3, r0, #0
 2110              	.L122:
 2111 006c 9BB2     		uxth	r3, r3
2415:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 2112              		.loc 1 2415 0
 2113 006e 1800     		movs	r0, r3
 2114 0070 BD46     		mov	sp, r7
 2115 0072 05B0     		add	sp, sp, #20
 2116              		@ sp needed
 2117 0074 90BD     		pop	{r4, r7, pc}
 2118              		.cfi_endproc
 2119              	.LFE59:
 2120              		.size	CapSense_CSD_MedianFilter, .-CapSense_CSD_MedianFilter
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 81


 2121 0076 C046     		.section	.text.CapSense_CSD_GetWidgetNumber,"ax",%progbits
 2122              		.align	2
 2123              		.global	CapSense_CSD_GetWidgetNumber
 2124              		.code	16
 2125              		.thumb_func
 2126              		.type	CapSense_CSD_GetWidgetNumber, %function
 2127              	CapSense_CSD_GetWidgetNumber:
 2128              	.LFB60:
2416:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER)) || \
2417:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_MEDIAN_FILTER)) || \
2418:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       ((CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO)) ) */
2419:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2420:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2421:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER)) || \
2422:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_AVERAGING_FILTER)) )
2423:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2424:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_AveragingFilter
2425:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2426:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2427:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2428:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This is the Averaging filter function.
2429:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  The averaging filter looks at the three most recent samples of a position and
2430:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  reports the averaging value.
2431:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2432:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2433:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
2434:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
2435:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x3:  Before previous value.
2436:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2437:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2438:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns filtered value.
2439:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2440:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2441:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None.
2442:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2443:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2444:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2445:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2446:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2447:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_AveragingFilter(uint16 x1, uint16 x2, uint16 x3)
2448:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
2449:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 tmp = ((uint32)x1 + (uint32)x2 + (uint32)x3) / 3u;
2450:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2451:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return ((uint16) tmp);
2452:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
2453:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER) || \
2454:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_AVERAGING_FILTER) ) */
2455:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2456:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2457:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER)) || \
2458:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_IIR2_FILTER)) )
2459:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2460:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_IIR2Filter
2461:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2462:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2463:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2464:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This is the IIR1/2 filter function. IIR1/2 = 1/2current + 1/2previous.
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 82


2465:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2466:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2467:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
2468:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
2469:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2470:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2471:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns filtered value.
2472:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2473:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2474:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None.
2475:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2476:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2477:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2478:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2479:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2480:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_IIR2Filter(uint16 x1, uint16 x2)
2481:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
2482:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 tmp;
2483:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2484:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* IIR = 1/2 Current Value+ 1/2 Previous Value */
2485:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
2486:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp >>= 1u;
2487:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2488:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return ((uint16) tmp);
2489:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
2490:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER)) || \
2491:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****        *    (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_IIR2_FILTER)) )
2492:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****        */
2493:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2494:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2495:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER)) || \
2496:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_IIR4_FILTER)) )
2497:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2498:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_IIR4Filter
2499:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2500:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2501:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2502:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This is the IIR1/4 filter function. IIR1/4 = 1/4current + 3/4previous.
2503:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2504:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2505:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
2506:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
2507:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2508:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2509:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns a filtered value.
2510:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2511:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2512:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None.
2513:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2514:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2515:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2516:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2517:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2518:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_IIR4Filter(uint16 x1, uint16 x2)
2519:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
2520:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 tmp;
2521:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 83


2522:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* IIR = 1/4 Current Value + 3/4 Previous Value */
2523:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
2524:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp += ((uint32)x2 << 1u);
2525:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp >>= 2u;
2526:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2527:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return ((uint16) tmp);
2528:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
2529:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER)) || \
2530:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****        *    (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_IIR4_FILTER)) )
2531:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****        */
2532:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2533:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2534:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_JITTER_FILTER)) || \
2535:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_JITTER_FILTER)) || \
2536:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_CSD_JITTER_FILTER)))
2537:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2538:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: uint16 CapSense_CSD_JitterFilter
2539:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2540:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2541:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2542:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This is the Jitter filter function.
2543:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2544:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2545:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
2546:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
2547:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2548:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2549:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns filtered value.
2550:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2551:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2552:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None.
2553:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2554:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2555:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2556:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2557:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2558:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_JitterFilter(uint16 x1, uint16 x2)
2559:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
2560:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (x1 > x2)
2561:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
2562:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             x1--;
2563:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
2564:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         else
2565:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
2566:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if (x1 < x2)
2567:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
2568:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 x1++;
2569:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
2570:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
2571:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2572:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return x1;
2573:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
2574:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_JITTER_FILTER)) || \
2575:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****        *    (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_JITTER_FILTER)) )
2576:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****        *    (0u != (CapSense_CSD_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_CSD_JITTER_FILTER)) )
2577:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****        */
2578:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 84


2579:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2580:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR8_FILTER))
2581:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2582:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_IIR8Filter
2583:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2584:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2585:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2586:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This is the IIR1/8 filter function. IIR1/8 = 1/8current + 7/8previous.
2587:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Only applies for raw data.
2588:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2589:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2590:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
2591:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
2592:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2593:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2594:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns filtered value.
2595:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2596:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2597:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None.
2598:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2599:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2600:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2601:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2602:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2603:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_IIR8Filter(uint16 x1, uint16 x2)
2604:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
2605:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 tmp;
2606:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2607:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* IIR = 1/8 Current Value + 7/8 Previous Value */
2608:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp = (uint32)x1;
2609:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp += (((uint32)x2 << 3u) - ((uint32)x2));
2610:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp >>= 3u;
2611:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2612:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return ((uint16) tmp);
2613:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
2614:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR8_FILTER)) */
2615:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2616:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2617:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR16_FILTER))
2618:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2619:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_IIR16Filter
2620:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2621:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2622:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2623:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This is the IIR1/16 filter function. IIR1/16 = 1/16current + 15/16previous.
2624:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Only applies for raw data.
2625:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2626:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2627:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
2628:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
2629:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2630:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2631:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns filtered value.
2632:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2633:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2634:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None.
2635:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 85


2636:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2637:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2638:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2639:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2640:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_IIR16Filter(uint16 x1, uint16 x2)
2641:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
2642:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 tmp;
2643:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2644:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* IIR = 1/16 Current Value + 15/16 Previous Value */
2645:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp = (uint32)x1;
2646:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp += (((uint32)x2 << 4u) - ((uint32)x2));
2647:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp >>= 4u;
2648:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2649:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return ((uint16) tmp);
2650:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
2651:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR16_FILTER) */
2652:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2653:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2654:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (0u != (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT))
2655:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2656:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2657:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_GetMatrixButtonPos
2658:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2659:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2660:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2661:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Function calculates and returns a touch position (column and row) for the matrix
2662:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  button widget.
2663:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2664:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2665:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  widget:  widget number;
2666:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  pos:     pointer to an array of two uint8, where touch position will be
2667:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *           stored:
2668:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *           pos[0] - column position;
2669:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *           pos[1] - raw position.
2670:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2671:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2672:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns 1 if row and column sensors of matrix button are active, 0 - in other
2673:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  cases.
2674:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2675:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2676:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_fingerThreshold[ ] - used to store the finger threshold for all widgets.
2677:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_sensorSignal[ ] - used to store a difference between the current value of
2678:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  raw data and a previous value of the baseline.
2679:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2680:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2681:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2682:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2683:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2684:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 CapSense_CSD_GetMatrixButtonPos(uint32 widget, uint8* pos)
2685:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
2686:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 i;
2687:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 retVal = 0u;
2688:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint16 row_sig_max = 0u;
2689:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint16 col_sig_max = 0u;
2690:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 row_ind = 0u;
2691:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 col_ind = 0u;
2692:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 86


2693:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (CapSense_CSD_CheckIsWidgetActive(widget) == 1u)
2694:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
2695:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Find row number with maximal signal value */
2696:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             for(i = CapSense_CSD_rawDataIndex[widget]; i < (CapSense_CSD_rawDataIndex[widget] + \
2697:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                  CapSense_CSD_numberOfSensors[widget]); i++)
2698:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
2699:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if (CapSense_CSD_sensorSignal[i] > col_sig_max)
2700:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
2701:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     col_ind = i;
2702:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     col_sig_max = CapSense_CSD_sensorSignal[i];
2703:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
2704:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
2705:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2706:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Find row number with maximal signal value */
2707:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             for(i = CapSense_CSD_rawDataIndex[widget+1u]; i < (CapSense_CSD_rawDataIndex[widget+1u]
2708:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                  CapSense_CSD_numberOfSensors[widget+1u]); i++)
2709:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
2710:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if (CapSense_CSD_sensorSignal[i] > row_sig_max)
2711:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
2712:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     row_ind = i;
2713:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     row_sig_max = CapSense_CSD_sensorSignal[i];
2714:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
2715:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
2716:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2717:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if((col_sig_max >= CapSense_CSD_fingerThreshold[widget]) && \
2718:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                (row_sig_max >= CapSense_CSD_fingerThreshold[widget+1u]))
2719:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
2720:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 pos[0u] = col_ind - CapSense_CSD_rawDataIndex[widget];
2721:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 pos[1u] = row_ind - CapSense_CSD_rawDataIndex[widget+1u];
2722:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 retVal = 1u;
2723:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
2724:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
2725:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return (retVal);
2726:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
2727:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2728:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (0u != (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT)) */
2729:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2730:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
2731:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetWidgetNumber
2732:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
2733:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2734:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
2735:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the widget number for the sensor.
2736:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2737:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
2738:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor: sensor index. The value of index can be
2739:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  from 0 to (CapSense_CSD_TOTAL_SENSOR_COUNT-1).
2740:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2741:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
2742:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the widget number for the sensor.
2743:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2744:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
2745:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_widgetNumber[]  - stores widget numbers.
2746:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2747:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
2748:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
2749:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 87


2750:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
2751:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint32 CapSense_CSD_GetWidgetNumber(uint32 sensor)
2752:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 2129              		.loc 1 2752 0
 2130              		.cfi_startproc
 2131              		@ args = 0, pretend = 0, frame = 8
 2132              		@ frame_needed = 1, uses_anonymous_args = 0
 2133 0000 80B5     		push	{r7, lr}
 2134              		.cfi_def_cfa_offset 8
 2135              		.cfi_offset 7, -8
 2136              		.cfi_offset 14, -4
 2137 0002 82B0     		sub	sp, sp, #8
 2138              		.cfi_def_cfa_offset 16
 2139 0004 00AF     		add	r7, sp, #0
 2140              		.cfi_def_cfa_register 7
 2141 0006 7860     		str	r0, [r7, #4]
2753:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return((uint32)CapSense_CSD_widgetNumber[sensor]);
 2142              		.loc 1 2753 0
 2143 0008 034A     		ldr	r2, .L126
 2144 000a 7B68     		ldr	r3, [r7, #4]
 2145 000c D318     		adds	r3, r2, r3
 2146 000e 1B78     		ldrb	r3, [r3]
2754:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 2147              		.loc 1 2754 0
 2148 0010 1800     		movs	r0, r3
 2149 0012 BD46     		mov	sp, r7
 2150 0014 02B0     		add	sp, sp, #8
 2151              		@ sp needed
 2152 0016 80BD     		pop	{r7, pc}
 2153              	.L127:
 2154              		.align	2
 2155              	.L126:
 2156 0018 00000000 		.word	CapSense_CSD_widgetNumber
 2157              		.cfi_endproc
 2158              	.LFE60:
 2159              		.size	CapSense_CSD_GetWidgetNumber, .-CapSense_CSD_GetWidgetNumber
 2160              		.section	.text.CapSense_CSD_GetLowBaselineReset,"ax",%progbits
 2161              		.align	2
 2162              		.global	CapSense_CSD_GetLowBaselineReset
 2163              		.code	16
 2164              		.thumb_func
 2165              		.type	CapSense_CSD_GetLowBaselineReset, %function
 2166              	CapSense_CSD_GetLowBaselineReset:
 2167              	.LFB61:
2755:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2756:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
2757:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetLowBaselineReset
2758:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
2759:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2760:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
2761:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the low baseline reset threshold value for the  sensor.
2762:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2763:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
2764:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor: sensor index. The value of index can be
2765:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  from 0 to (CapSense_CSD_TOTAL_SENSOR_COUNT-1).
2766:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2767:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 88


2768:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  low baseline reset threshold value a sensor.
2769:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2770:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
2771:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_lowBaselineReset[]  - stores low baseline reset values.
2772:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2773:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
2774:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
2775:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2776:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
2777:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_GetLowBaselineReset(uint32 sensor)
2778:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 2168              		.loc 1 2778 0
 2169              		.cfi_startproc
 2170              		@ args = 0, pretend = 0, frame = 8
 2171              		@ frame_needed = 1, uses_anonymous_args = 0
 2172 0000 80B5     		push	{r7, lr}
 2173              		.cfi_def_cfa_offset 8
 2174              		.cfi_offset 7, -8
 2175              		.cfi_offset 14, -4
 2176 0002 82B0     		sub	sp, sp, #8
 2177              		.cfi_def_cfa_offset 16
 2178 0004 00AF     		add	r7, sp, #0
 2179              		.cfi_def_cfa_register 7
 2180 0006 7860     		str	r0, [r7, #4]
2779:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return(CapSense_CSD_lowBaselineReset[sensor]);
 2181              		.loc 1 2779 0
 2182 0008 034A     		ldr	r2, .L130
 2183 000a 7B68     		ldr	r3, [r7, #4]
 2184 000c D318     		adds	r3, r2, r3
 2185 000e 1B78     		ldrb	r3, [r3]
2780:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 2186              		.loc 1 2780 0
 2187 0010 1800     		movs	r0, r3
 2188 0012 BD46     		mov	sp, r7
 2189 0014 02B0     		add	sp, sp, #8
 2190              		@ sp needed
 2191 0016 80BD     		pop	{r7, pc}
 2192              	.L131:
 2193              		.align	2
 2194              	.L130:
 2195 0018 00000000 		.word	CapSense_CSD_lowBaselineReset
 2196              		.cfi_endproc
 2197              	.LFE61:
 2198              		.size	CapSense_CSD_GetLowBaselineReset, .-CapSense_CSD_GetLowBaselineReset
 2199              		.section	.text.CapSense_CSD_GetDebounce,"ax",%progbits
 2200              		.align	2
 2201              		.global	CapSense_CSD_GetDebounce
 2202              		.code	16
 2203              		.thumb_func
 2204              		.type	CapSense_CSD_GetDebounce, %function
 2205              	CapSense_CSD_GetDebounce:
 2206              	.LFB62:
2781:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2782:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
2783:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetDebounce
2784:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
2785:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 89


2786:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
2787:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns a debounce value.
2788:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2789:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
2790:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor: sensor index. The value of index can be
2791:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  from 0 to (CapSense_CSD_TOTAL_SENSOR_COUNT-1).
2792:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2793:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
2794:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Debounce value
2795:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2796:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
2797:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_debounce[]  - stores the debounce value.
2798:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2799:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
2800:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
2801:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2802:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
2803:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_GetDebounce(uint32 widget)
2804:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 2207              		.loc 1 2804 0
 2208              		.cfi_startproc
 2209              		@ args = 0, pretend = 0, frame = 8
 2210              		@ frame_needed = 1, uses_anonymous_args = 0
 2211 0000 80B5     		push	{r7, lr}
 2212              		.cfi_def_cfa_offset 8
 2213              		.cfi_offset 7, -8
 2214              		.cfi_offset 14, -4
 2215 0002 82B0     		sub	sp, sp, #8
 2216              		.cfi_def_cfa_offset 16
 2217 0004 00AF     		add	r7, sp, #0
 2218              		.cfi_def_cfa_register 7
 2219 0006 7860     		str	r0, [r7, #4]
2805:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return(CapSense_CSD_debounce[widget]);
 2220              		.loc 1 2805 0
 2221 0008 034A     		ldr	r2, .L134
 2222 000a 7B68     		ldr	r3, [r7, #4]
 2223 000c D318     		adds	r3, r2, r3
 2224 000e 1B78     		ldrb	r3, [r3]
2806:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 2225              		.loc 1 2806 0
 2226 0010 1800     		movs	r0, r3
 2227 0012 BD46     		mov	sp, r7
 2228 0014 02B0     		add	sp, sp, #8
 2229              		@ sp needed
 2230 0016 80BD     		pop	{r7, pc}
 2231              	.L135:
 2232              		.align	2
 2233              	.L134:
 2234 0018 00000000 		.word	CapSense_CSD_debounce
 2235              		.cfi_endproc
 2236              	.LFE62:
 2237              		.size	CapSense_CSD_GetDebounce, .-CapSense_CSD_GetDebounce
 2238              		.section	.text.CapSense_CSD_EnableRawDataFilters,"ax",%progbits
 2239              		.align	2
 2240              		.global	CapSense_CSD_EnableRawDataFilters
 2241              		.code	16
 2242              		.thumb_func
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 90


 2243              		.type	CapSense_CSD_EnableRawDataFilters, %function
 2244              	CapSense_CSD_EnableRawDataFilters:
 2245              	.LFB63:
2807:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2808:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (CapSense_CSD_RAW_FILTER_MASK != 0u)
2809:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2810:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_EnableRawDataFilters
2811:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2812:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2813:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2814:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Enables the rawdata filters for the sensor signals.
2815:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2816:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2817:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2818:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2819:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2820:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2821:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2822:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2823:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_enableRawFilters defines if the filters are enabled or not.
2824:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2825:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2826:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2827:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2828:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2829:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     void CapSense_CSD_EnableRawDataFilters(void)
2830:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 2246              		.loc 1 2830 0
 2247              		.cfi_startproc
 2248              		@ args = 0, pretend = 0, frame = 0
 2249              		@ frame_needed = 1, uses_anonymous_args = 0
 2250 0000 80B5     		push	{r7, lr}
 2251              		.cfi_def_cfa_offset 8
 2252              		.cfi_offset 7, -8
 2253              		.cfi_offset 14, -4
 2254 0002 00AF     		add	r7, sp, #0
 2255              		.cfi_def_cfa_register 7
2831:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_enableRawFilters = CapSense_CSD_RAW_FILTERS_ENABLED;
 2256              		.loc 1 2831 0
 2257 0004 024B     		ldr	r3, .L137
 2258 0006 0122     		movs	r2, #1
 2259 0008 1A70     		strb	r2, [r3]
2832:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 2260              		.loc 1 2832 0
 2261 000a C046     		nop
 2262 000c BD46     		mov	sp, r7
 2263              		@ sp needed
 2264 000e 80BD     		pop	{r7, pc}
 2265              	.L138:
 2266              		.align	2
 2267              	.L137:
 2268 0010 00000000 		.word	CapSense_CSD_enableRawFilters
 2269              		.cfi_endproc
 2270              	.LFE63:
 2271              		.size	CapSense_CSD_EnableRawDataFilters, .-CapSense_CSD_EnableRawDataFilters
 2272              		.section	.text.CapSense_CSD_DisableRawDataFilters,"ax",%progbits
 2273              		.align	2
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 91


 2274              		.global	CapSense_CSD_DisableRawDataFilters
 2275              		.code	16
 2276              		.thumb_func
 2277              		.type	CapSense_CSD_DisableRawDataFilters, %function
 2278              	CapSense_CSD_DisableRawDataFilters:
 2279              	.LFB64:
2833:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2834:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2835:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_DisableRawDataFilters
2836:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2837:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2838:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2839:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Disables the rawdata filters for the sensor signals.
2840:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2841:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2842:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2843:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2844:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2845:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2846:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2847:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2848:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_enableRawFilters defines if the filters are enabled or not.
2849:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2850:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2851:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2852:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2853:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2854:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     void CapSense_CSD_DisableRawDataFilters(void)
2855:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 2280              		.loc 1 2855 0
 2281              		.cfi_startproc
 2282              		@ args = 0, pretend = 0, frame = 0
 2283              		@ frame_needed = 1, uses_anonymous_args = 0
 2284 0000 80B5     		push	{r7, lr}
 2285              		.cfi_def_cfa_offset 8
 2286              		.cfi_offset 7, -8
 2287              		.cfi_offset 14, -4
 2288 0002 00AF     		add	r7, sp, #0
 2289              		.cfi_def_cfa_register 7
2856:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_enableRawFilters = CapSense_CSD_RAW_FILTERS_DISABLED;
 2290              		.loc 1 2856 0
 2291 0004 024B     		ldr	r3, .L140
 2292 0006 0022     		movs	r2, #0
 2293 0008 1A70     		strb	r2, [r3]
2857:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 2294              		.loc 1 2857 0
 2295 000a C046     		nop
 2296 000c BD46     		mov	sp, r7
 2297              		@ sp needed
 2298 000e 80BD     		pop	{r7, pc}
 2299              	.L141:
 2300              		.align	2
 2301              	.L140:
 2302 0010 00000000 		.word	CapSense_CSD_enableRawFilters
 2303              		.cfi_endproc
 2304              	.LFE64:
 2305              		.size	CapSense_CSD_DisableRawDataFilters, .-CapSense_CSD_DisableRawDataFilters
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 92


 2306              		.text
 2307              	.Letext0:
 2308              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2309              		.section	.debug_info,"",%progbits
 2310              	.Ldebug_info0:
 2311 0000 6F090000 		.4byte	0x96f
 2312 0004 0400     		.2byte	0x4
 2313 0006 00000000 		.4byte	.Ldebug_abbrev0
 2314 000a 04       		.byte	0x4
 2315 000b 01       		.uleb128 0x1
 2316 000c 44030000 		.4byte	.LASF90
 2317 0010 0C       		.byte	0xc
 2318 0011 BE070000 		.4byte	.LASF91
 2319 0015 1D050000 		.4byte	.LASF92
 2320 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2321 001d 00000000 		.4byte	0
 2322 0021 00000000 		.4byte	.Ldebug_line0
 2323 0025 02       		.uleb128 0x2
 2324 0026 01       		.byte	0x1
 2325 0027 06       		.byte	0x6
 2326 0028 D9040000 		.4byte	.LASF0
 2327 002c 02       		.uleb128 0x2
 2328 002d 01       		.byte	0x1
 2329 002e 08       		.byte	0x8
 2330 002f D2030000 		.4byte	.LASF1
 2331 0033 02       		.uleb128 0x2
 2332 0034 02       		.byte	0x2
 2333 0035 05       		.byte	0x5
 2334 0036 76000000 		.4byte	.LASF2
 2335 003a 02       		.uleb128 0x2
 2336 003b 02       		.byte	0x2
 2337 003c 07       		.byte	0x7
 2338 003d 0B060000 		.4byte	.LASF3
 2339 0041 02       		.uleb128 0x2
 2340 0042 04       		.byte	0x4
 2341 0043 05       		.byte	0x5
 2342 0044 CA020000 		.4byte	.LASF4
 2343 0048 02       		.uleb128 0x2
 2344 0049 04       		.byte	0x4
 2345 004a 07       		.byte	0x7
 2346 004b C6060000 		.4byte	.LASF5
 2347 004f 02       		.uleb128 0x2
 2348 0050 08       		.byte	0x8
 2349 0051 05       		.byte	0x5
 2350 0052 60020000 		.4byte	.LASF6
 2351 0056 02       		.uleb128 0x2
 2352 0057 08       		.byte	0x8
 2353 0058 07       		.byte	0x7
 2354 0059 E5040000 		.4byte	.LASF7
 2355 005d 03       		.uleb128 0x3
 2356 005e 04       		.byte	0x4
 2357 005f 05       		.byte	0x5
 2358 0060 696E7400 		.ascii	"int\000"
 2359 0064 02       		.uleb128 0x2
 2360 0065 04       		.byte	0x4
 2361 0066 07       		.byte	0x7
 2362 0067 69050000 		.4byte	.LASF8
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 93


 2363 006b 04       		.uleb128 0x4
 2364 006c BD010000 		.4byte	.LASF9
 2365 0070 02       		.byte	0x2
 2366 0071 D201     		.2byte	0x1d2
 2367 0073 2C000000 		.4byte	0x2c
 2368 0077 04       		.uleb128 0x4
 2369 0078 A8010000 		.4byte	.LASF10
 2370 007c 02       		.byte	0x2
 2371 007d D301     		.2byte	0x1d3
 2372 007f 3A000000 		.4byte	0x3a
 2373 0083 04       		.uleb128 0x4
 2374 0084 9E060000 		.4byte	.LASF11
 2375 0088 02       		.byte	0x2
 2376 0089 D401     		.2byte	0x1d4
 2377 008b 48000000 		.4byte	0x48
 2378 008f 02       		.uleb128 0x2
 2379 0090 04       		.byte	0x4
 2380 0091 04       		.byte	0x4
 2381 0092 3B020000 		.4byte	.LASF12
 2382 0096 02       		.uleb128 0x2
 2383 0097 08       		.byte	0x8
 2384 0098 04       		.byte	0x4
 2385 0099 2D080000 		.4byte	.LASF13
 2386 009d 02       		.uleb128 0x2
 2387 009e 01       		.byte	0x1
 2388 009f 08       		.byte	0x8
 2389 00a0 B8050000 		.4byte	.LASF14
 2390 00a4 02       		.uleb128 0x2
 2391 00a5 04       		.byte	0x4
 2392 00a6 07       		.byte	0x7
 2393 00a7 B5070000 		.4byte	.LASF15
 2394 00ab 02       		.uleb128 0x2
 2395 00ac 08       		.byte	0x8
 2396 00ad 04       		.byte	0x4
 2397 00ae EB030000 		.4byte	.LASF16
 2398 00b2 05       		.uleb128 0x5
 2399 00b3 6B000000 		.4byte	0x6b
 2400 00b7 06       		.uleb128 0x6
 2401 00b8 1E060000 		.4byte	.LASF17
 2402 00bc 01       		.byte	0x1
 2403 00bd A4       		.byte	0xa4
 2404 00be 00000000 		.4byte	.LFB32
 2405 00c2 9C000000 		.4byte	.LFE32-.LFB32
 2406 00c6 01       		.uleb128 0x1
 2407 00c7 9C       		.byte	0x9c
 2408 00c8 E9000000 		.4byte	0xe9
 2409 00cc 07       		.uleb128 0x7
 2410 00cd AF010000 		.4byte	.LASF19
 2411 00d1 01       		.byte	0x1
 2412 00d2 A4       		.byte	0xa4
 2413 00d3 83000000 		.4byte	0x83
 2414 00d7 02       		.uleb128 0x2
 2415 00d8 91       		.byte	0x91
 2416 00d9 6C       		.sleb128 -20
 2417 00da 08       		.uleb128 0x8
 2418 00db B6010000 		.4byte	.LASF21
 2419 00df 01       		.byte	0x1
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 94


 2420 00e0 A8       		.byte	0xa8
 2421 00e1 6B000000 		.4byte	0x6b
 2422 00e5 02       		.uleb128 0x2
 2423 00e6 91       		.byte	0x91
 2424 00e7 77       		.sleb128 -9
 2425 00e8 00       		.byte	0
 2426 00e9 09       		.uleb128 0x9
 2427 00ea 52010000 		.4byte	.LASF18
 2428 00ee 01       		.byte	0x1
 2429 00ef F0       		.byte	0xf0
 2430 00f0 00000000 		.4byte	.LFB33
 2431 00f4 2A000000 		.4byte	.LFE33-.LFB33
 2432 00f8 01       		.uleb128 0x1
 2433 00f9 9C       		.byte	0x9c
 2434 00fa 0D010000 		.4byte	0x10d
 2435 00fe 07       		.uleb128 0x7
 2436 00ff AF010000 		.4byte	.LASF19
 2437 0103 01       		.byte	0x1
 2438 0104 F0       		.byte	0xf0
 2439 0105 83000000 		.4byte	0x83
 2440 0109 02       		.uleb128 0x2
 2441 010a 91       		.byte	0x91
 2442 010b 74       		.sleb128 -12
 2443 010c 00       		.byte	0
 2444 010d 0A       		.uleb128 0xa
 2445 010e 34080000 		.4byte	.LASF20
 2446 0112 01       		.byte	0x1
 2447 0113 1501     		.2byte	0x115
 2448 0115 00000000 		.4byte	.LFB34
 2449 0119 28000000 		.4byte	.LFE34-.LFB34
 2450 011d 01       		.uleb128 0x1
 2451 011e 9C       		.byte	0x9c
 2452 011f 31010000 		.4byte	0x131
 2453 0123 0B       		.uleb128 0xb
 2454 0124 6900     		.ascii	"i\000"
 2455 0126 01       		.byte	0x1
 2456 0127 1701     		.2byte	0x117
 2457 0129 83000000 		.4byte	0x83
 2458 012d 02       		.uleb128 0x2
 2459 012e 91       		.byte	0x91
 2460 012f 74       		.sleb128 -12
 2461 0130 00       		.byte	0
 2462 0131 0A       		.uleb128 0xa
 2463 0132 C6050000 		.4byte	.LASF22
 2464 0136 01       		.byte	0x1
 2465 0137 3801     		.2byte	0x138
 2466 0139 00000000 		.4byte	.LFB35
 2467 013d 50000000 		.4byte	.LFE35-.LFB35
 2468 0141 01       		.uleb128 0x1
 2469 0142 9C       		.byte	0x9c
 2470 0143 64010000 		.4byte	0x164
 2471 0147 0B       		.uleb128 0xb
 2472 0148 6900     		.ascii	"i\000"
 2473 014a 01       		.byte	0x1
 2474 014b 3A01     		.2byte	0x13a
 2475 014d 83000000 		.4byte	0x83
 2476 0151 02       		.uleb128 0x2
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 95


 2477 0152 91       		.byte	0x91
 2478 0153 74       		.sleb128 -12
 2479 0154 0C       		.uleb128 0xc
 2480 0155 A8050000 		.4byte	.LASF23
 2481 0159 01       		.byte	0x1
 2482 015a 3B01     		.2byte	0x13b
 2483 015c 83000000 		.4byte	0x83
 2484 0160 02       		.uleb128 0x2
 2485 0161 91       		.byte	0x91
 2486 0162 70       		.sleb128 -16
 2487 0163 00       		.byte	0
 2488 0164 0A       		.uleb128 0xa
 2489 0165 8E070000 		.4byte	.LASF24
 2490 0169 01       		.byte	0x1
 2491 016a 7901     		.2byte	0x179
 2492 016c 00000000 		.4byte	.LFB36
 2493 0170 00020000 		.4byte	.LFE36-.LFB36
 2494 0174 01       		.uleb128 0x1
 2495 0175 9C       		.byte	0x9c
 2496 0176 E4010000 		.4byte	0x1e4
 2497 017a 0D       		.uleb128 0xd
 2498 017b AF010000 		.4byte	.LASF19
 2499 017f 01       		.byte	0x1
 2500 0180 7901     		.2byte	0x179
 2501 0182 83000000 		.4byte	0x83
 2502 0186 02       		.uleb128 0x2
 2503 0187 91       		.byte	0x91
 2504 0188 5C       		.sleb128 -36
 2505 0189 0C       		.uleb128 0xc
 2506 018a 5B020000 		.4byte	.LASF25
 2507 018e 01       		.byte	0x1
 2508 018f 7B01     		.2byte	0x17b
 2509 0191 83000000 		.4byte	0x83
 2510 0195 02       		.uleb128 0x2
 2511 0196 91       		.byte	0x91
 2512 0197 60       		.sleb128 -32
 2513 0198 0C       		.uleb128 0xc
 2514 0199 D8060000 		.4byte	.LASF26
 2515 019d 01       		.byte	0x1
 2516 019e 7C01     		.2byte	0x17c
 2517 01a0 83000000 		.4byte	0x83
 2518 01a4 02       		.uleb128 0x2
 2519 01a5 91       		.byte	0x91
 2520 01a6 6C       		.sleb128 -20
 2521 01a7 0C       		.uleb128 0xc
 2522 01a8 76050000 		.4byte	.LASF27
 2523 01ac 01       		.byte	0x1
 2524 01ad 7D01     		.2byte	0x17d
 2525 01af 77000000 		.4byte	0x77
 2526 01b3 02       		.uleb128 0x2
 2527 01b4 91       		.byte	0x91
 2528 01b5 6A       		.sleb128 -22
 2529 01b6 0C       		.uleb128 0xc
 2530 01b7 9C000000 		.4byte	.LASF28
 2531 01bb 01       		.byte	0x1
 2532 01bc 7E01     		.2byte	0x17e
 2533 01be 77000000 		.4byte	0x77
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 96


 2534 01c2 02       		.uleb128 0x2
 2535 01c3 91       		.byte	0x91
 2536 01c4 68       		.sleb128 -24
 2537 01c5 0C       		.uleb128 0xc
 2538 01c6 B6010000 		.4byte	.LASF21
 2539 01ca 01       		.byte	0x1
 2540 01cb 7F01     		.2byte	0x17f
 2541 01cd 6B000000 		.4byte	0x6b
 2542 01d1 02       		.uleb128 0x2
 2543 01d2 91       		.byte	0x91
 2544 01d3 67       		.sleb128 -25
 2545 01d4 0C       		.uleb128 0xc
 2546 01d5 1B030000 		.4byte	.LASF29
 2547 01d9 01       		.byte	0x1
 2548 01da 8001     		.2byte	0x180
 2549 01dc 77000000 		.4byte	0x77
 2550 01e0 02       		.uleb128 0x2
 2551 01e1 91       		.byte	0x91
 2552 01e2 64       		.sleb128 -28
 2553 01e3 00       		.byte	0
 2554 01e4 0A       		.uleb128 0xa
 2555 01e5 94040000 		.4byte	.LASF30
 2556 01e9 01       		.byte	0x1
 2557 01ea 3902     		.2byte	0x239
 2558 01ec 00000000 		.4byte	.LFB37
 2559 01f0 18000000 		.4byte	.LFE37-.LFB37
 2560 01f4 01       		.uleb128 0x1
 2561 01f5 9C       		.byte	0x9c
 2562 01f6 0A020000 		.4byte	0x20a
 2563 01fa 0D       		.uleb128 0xd
 2564 01fb AF010000 		.4byte	.LASF19
 2565 01ff 01       		.byte	0x1
 2566 0200 3902     		.2byte	0x239
 2567 0202 83000000 		.4byte	0x83
 2568 0206 02       		.uleb128 0x2
 2569 0207 91       		.byte	0x91
 2570 0208 74       		.sleb128 -12
 2571 0209 00       		.byte	0
 2572 020a 0A       		.uleb128 0xa
 2573 020b ED000000 		.4byte	.LASF31
 2574 020f 01       		.byte	0x1
 2575 0210 6F02     		.2byte	0x26f
 2576 0212 00000000 		.4byte	.LFB38
 2577 0216 44000000 		.4byte	.LFE38-.LFB38
 2578 021a 01       		.uleb128 0x1
 2579 021b 9C       		.byte	0x9c
 2580 021c 3D020000 		.4byte	0x23d
 2581 0220 0B       		.uleb128 0xb
 2582 0221 6900     		.ascii	"i\000"
 2583 0223 01       		.byte	0x1
 2584 0224 7102     		.2byte	0x271
 2585 0226 83000000 		.4byte	0x83
 2586 022a 02       		.uleb128 0x2
 2587 022b 91       		.byte	0x91
 2588 022c 74       		.sleb128 -12
 2589 022d 0C       		.uleb128 0xc
 2590 022e A8050000 		.4byte	.LASF23
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 97


 2591 0232 01       		.byte	0x1
 2592 0233 7202     		.2byte	0x272
 2593 0235 83000000 		.4byte	0x83
 2594 0239 02       		.uleb128 0x2
 2595 023a 91       		.byte	0x91
 2596 023b 70       		.sleb128 -16
 2597 023c 00       		.byte	0
 2598 023d 0A       		.uleb128 0xa
 2599 023e F7030000 		.4byte	.LASF32
 2600 0242 01       		.byte	0x1
 2601 0243 9C02     		.2byte	0x29c
 2602 0245 00000000 		.4byte	.LFB39
 2603 0249 74000000 		.4byte	.LFE39-.LFB39
 2604 024d 01       		.uleb128 0x1
 2605 024e 9C       		.byte	0x9c
 2606 024f AC020000 		.4byte	0x2ac
 2607 0253 0D       		.uleb128 0xd
 2608 0254 B6010000 		.4byte	.LASF21
 2609 0258 01       		.byte	0x1
 2610 0259 9C02     		.2byte	0x29c
 2611 025b 83000000 		.4byte	0x83
 2612 025f 02       		.uleb128 0x2
 2613 0260 91       		.byte	0x91
 2614 0261 5C       		.sleb128 -36
 2615 0262 0C       		.uleb128 0xc
 2616 0263 79080000 		.4byte	.LASF33
 2617 0267 01       		.byte	0x1
 2618 0268 9E02     		.2byte	0x29e
 2619 026a 83000000 		.4byte	0x83
 2620 026e 02       		.uleb128 0x2
 2621 026f 91       		.byte	0x91
 2622 0270 70       		.sleb128 -16
 2623 0271 0C       		.uleb128 0xc
 2624 0272 9C050000 		.4byte	.LASF34
 2625 0276 01       		.byte	0x1
 2626 0277 9F02     		.2byte	0x29f
 2627 0279 83000000 		.4byte	0x83
 2628 027d 02       		.uleb128 0x2
 2629 027e 91       		.byte	0x91
 2630 027f 6C       		.sleb128 -20
 2631 0280 0C       		.uleb128 0xc
 2632 0281 4E060000 		.4byte	.LASF35
 2633 0285 01       		.byte	0x1
 2634 0286 A002     		.2byte	0x2a0
 2635 0288 83000000 		.4byte	0x83
 2636 028c 02       		.uleb128 0x2
 2637 028d 91       		.byte	0x91
 2638 028e 68       		.sleb128 -24
 2639 028f 0B       		.uleb128 0xb
 2640 0290 6900     		.ascii	"i\000"
 2641 0292 01       		.byte	0x1
 2642 0293 A102     		.2byte	0x2a1
 2643 0295 83000000 		.4byte	0x83
 2644 0299 02       		.uleb128 0x2
 2645 029a 91       		.byte	0x91
 2646 029b 74       		.sleb128 -12
 2647 029c 0C       		.uleb128 0xc
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 98


 2648 029d A8050000 		.4byte	.LASF23
 2649 02a1 01       		.byte	0x1
 2650 02a2 A202     		.2byte	0x2a2
 2651 02a4 83000000 		.4byte	0x83
 2652 02a8 02       		.uleb128 0x2
 2653 02a9 91       		.byte	0x91
 2654 02aa 64       		.sleb128 -28
 2655 02ab 00       		.byte	0
 2656 02ac 0E       		.uleb128 0xe
 2657 02ad 1C000000 		.4byte	.LASF38
 2658 02b1 01       		.byte	0x1
 2659 02b2 CD02     		.2byte	0x2cd
 2660 02b4 77000000 		.4byte	0x77
 2661 02b8 00000000 		.4byte	.LFB40
 2662 02bc 1C000000 		.4byte	.LFE40-.LFB40
 2663 02c0 01       		.uleb128 0x1
 2664 02c1 9C       		.byte	0x9c
 2665 02c2 D6020000 		.4byte	0x2d6
 2666 02c6 0D       		.uleb128 0xd
 2667 02c7 AF010000 		.4byte	.LASF19
 2668 02cb 01       		.byte	0x1
 2669 02cc CD02     		.2byte	0x2cd
 2670 02ce 83000000 		.4byte	0x83
 2671 02d2 02       		.uleb128 0x2
 2672 02d3 91       		.byte	0x91
 2673 02d4 74       		.sleb128 -12
 2674 02d5 00       		.byte	0
 2675 02d6 0F       		.uleb128 0xf
 2676 02d7 35010000 		.4byte	.LASF36
 2677 02db 01       		.byte	0x1
 2678 02dc E802     		.2byte	0x2e8
 2679 02de 00000000 		.4byte	.LFB41
 2680 02e2 28000000 		.4byte	.LFE41-.LFB41
 2681 02e6 01       		.uleb128 0x1
 2682 02e7 9C       		.byte	0x9c
 2683 02e8 0B030000 		.4byte	0x30b
 2684 02ec 0D       		.uleb128 0xd
 2685 02ed AF010000 		.4byte	.LASF19
 2686 02f1 01       		.byte	0x1
 2687 02f2 E802     		.2byte	0x2e8
 2688 02f4 83000000 		.4byte	0x83
 2689 02f8 02       		.uleb128 0x2
 2690 02f9 91       		.byte	0x91
 2691 02fa 74       		.sleb128 -12
 2692 02fb 0D       		.uleb128 0xd
 2693 02fc 30010000 		.4byte	.LASF37
 2694 0300 01       		.byte	0x1
 2695 0301 E802     		.2byte	0x2e8
 2696 0303 77000000 		.4byte	0x77
 2697 0307 02       		.uleb128 0x2
 2698 0308 91       		.byte	0x91
 2699 0309 72       		.sleb128 -14
 2700 030a 00       		.byte	0
 2701 030b 0E       		.uleb128 0xe
 2702 030c 22070000 		.4byte	.LASF39
 2703 0310 01       		.byte	0x1
 2704 0311 0303     		.2byte	0x303
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 99


 2705 0313 77000000 		.4byte	0x77
 2706 0317 00000000 		.4byte	.LFB42
 2707 031b 1C000000 		.4byte	.LFE42-.LFB42
 2708 031f 01       		.uleb128 0x1
 2709 0320 9C       		.byte	0x9c
 2710 0321 35030000 		.4byte	0x335
 2711 0325 0D       		.uleb128 0xd
 2712 0326 AF010000 		.4byte	.LASF19
 2713 032a 01       		.byte	0x1
 2714 032b 0303     		.2byte	0x303
 2715 032d 83000000 		.4byte	0x83
 2716 0331 02       		.uleb128 0x2
 2717 0332 91       		.byte	0x91
 2718 0333 74       		.sleb128 -12
 2719 0334 00       		.byte	0
 2720 0335 0F       		.uleb128 0xf
 2721 0336 FD020000 		.4byte	.LASF40
 2722 033a 01       		.byte	0x1
 2723 033b 1E03     		.2byte	0x31e
 2724 033d 00000000 		.4byte	.LFB43
 2725 0341 28000000 		.4byte	.LFE43-.LFB43
 2726 0345 01       		.uleb128 0x1
 2727 0346 9C       		.byte	0x9c
 2728 0347 6A030000 		.4byte	0x36a
 2729 034b 0D       		.uleb128 0xd
 2730 034c AF010000 		.4byte	.LASF19
 2731 0350 01       		.byte	0x1
 2732 0351 1E03     		.2byte	0x31e
 2733 0353 83000000 		.4byte	0x83
 2734 0357 02       		.uleb128 0x2
 2735 0358 91       		.byte	0x91
 2736 0359 74       		.sleb128 -12
 2737 035a 0D       		.uleb128 0xd
 2738 035b 85010000 		.4byte	.LASF41
 2739 035f 01       		.byte	0x1
 2740 0360 1E03     		.2byte	0x31e
 2741 0362 77000000 		.4byte	0x77
 2742 0366 02       		.uleb128 0x2
 2743 0367 91       		.byte	0x91
 2744 0368 72       		.sleb128 -14
 2745 0369 00       		.byte	0
 2746 036a 0E       		.uleb128 0xe
 2747 036b 0D080000 		.4byte	.LASF42
 2748 036f 01       		.byte	0x1
 2749 0370 3903     		.2byte	0x339
 2750 0372 77000000 		.4byte	0x77
 2751 0376 00000000 		.4byte	.LFB44
 2752 037a 1C000000 		.4byte	.LFE44-.LFB44
 2753 037e 01       		.uleb128 0x1
 2754 037f 9C       		.byte	0x9c
 2755 0380 94030000 		.4byte	0x394
 2756 0384 0D       		.uleb128 0xd
 2757 0385 B6010000 		.4byte	.LASF21
 2758 0389 01       		.byte	0x1
 2759 038a 3903     		.2byte	0x339
 2760 038c 83000000 		.4byte	0x83
 2761 0390 02       		.uleb128 0x2
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 100


 2762 0391 91       		.byte	0x91
 2763 0392 74       		.sleb128 -12
 2764 0393 00       		.byte	0
 2765 0394 0E       		.uleb128 0xe
 2766 0395 AC000000 		.4byte	.LASF43
 2767 0399 01       		.byte	0x1
 2768 039a 5403     		.2byte	0x354
 2769 039c 77000000 		.4byte	0x77
 2770 03a0 00000000 		.4byte	.LFB45
 2771 03a4 1C000000 		.4byte	.LFE45-.LFB45
 2772 03a8 01       		.uleb128 0x1
 2773 03a9 9C       		.byte	0x9c
 2774 03aa BE030000 		.4byte	0x3be
 2775 03ae 0D       		.uleb128 0xd
 2776 03af B6010000 		.4byte	.LASF21
 2777 03b3 01       		.byte	0x1
 2778 03b4 5403     		.2byte	0x354
 2779 03b6 83000000 		.4byte	0x83
 2780 03ba 02       		.uleb128 0x2
 2781 03bb 91       		.byte	0x91
 2782 03bc 74       		.sleb128 -12
 2783 03bd 00       		.byte	0
 2784 03be 0E       		.uleb128 0xe
 2785 03bf 58080000 		.4byte	.LASF44
 2786 03c3 01       		.byte	0x1
 2787 03c4 7003     		.2byte	0x370
 2788 03c6 77000000 		.4byte	0x77
 2789 03ca 00000000 		.4byte	.LFB46
 2790 03ce 1C000000 		.4byte	.LFE46-.LFB46
 2791 03d2 01       		.uleb128 0x1
 2792 03d3 9C       		.byte	0x9c
 2793 03d4 E8030000 		.4byte	0x3e8
 2794 03d8 0D       		.uleb128 0xd
 2795 03d9 B6010000 		.4byte	.LASF21
 2796 03dd 01       		.byte	0x1
 2797 03de 7003     		.2byte	0x370
 2798 03e0 83000000 		.4byte	0x83
 2799 03e4 02       		.uleb128 0x2
 2800 03e5 91       		.byte	0x91
 2801 03e6 74       		.sleb128 -12
 2802 03e7 00       		.byte	0
 2803 03e8 0E       		.uleb128 0xe
 2804 03e9 3A040000 		.4byte	.LASF45
 2805 03ed 01       		.byte	0x1
 2806 03ee 8C03     		.2byte	0x38c
 2807 03f0 77000000 		.4byte	0x77
 2808 03f4 00000000 		.4byte	.LFB47
 2809 03f8 1C000000 		.4byte	.LFE47-.LFB47
 2810 03fc 01       		.uleb128 0x1
 2811 03fd 9C       		.byte	0x9c
 2812 03fe 12040000 		.4byte	0x412
 2813 0402 0D       		.uleb128 0xd
 2814 0403 B6010000 		.4byte	.LASF21
 2815 0407 01       		.byte	0x1
 2816 0408 8C03     		.2byte	0x38c
 2817 040a 83000000 		.4byte	0x83
 2818 040e 02       		.uleb128 0x2
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 101


 2819 040f 91       		.byte	0x91
 2820 0410 74       		.sleb128 -12
 2821 0411 00       		.byte	0
 2822 0412 0F       		.uleb128 0xf
 2823 0413 03020000 		.4byte	.LASF46
 2824 0417 01       		.byte	0x1
 2825 0418 AD03     		.2byte	0x3ad
 2826 041a 00000000 		.4byte	.LFB48
 2827 041e 28000000 		.4byte	.LFE48-.LFB48
 2828 0422 01       		.uleb128 0x1
 2829 0423 9C       		.byte	0x9c
 2830 0424 47040000 		.4byte	0x447
 2831 0428 0D       		.uleb128 0xd
 2832 0429 B6010000 		.4byte	.LASF21
 2833 042d 01       		.byte	0x1
 2834 042e AD03     		.2byte	0x3ad
 2835 0430 83000000 		.4byte	0x83
 2836 0434 02       		.uleb128 0x2
 2837 0435 91       		.byte	0x91
 2838 0436 74       		.sleb128 -12
 2839 0437 0D       		.uleb128 0xd
 2840 0438 85010000 		.4byte	.LASF41
 2841 043c 01       		.byte	0x1
 2842 043d AD03     		.2byte	0x3ad
 2843 043f 77000000 		.4byte	0x77
 2844 0443 02       		.uleb128 0x2
 2845 0444 91       		.byte	0x91
 2846 0445 72       		.sleb128 -14
 2847 0446 00       		.byte	0
 2848 0447 0F       		.uleb128 0xf
 2849 0448 11010000 		.4byte	.LASF47
 2850 044c 01       		.byte	0x1
 2851 044d C903     		.2byte	0x3c9
 2852 044f 00000000 		.4byte	.LFB49
 2853 0453 28000000 		.4byte	.LFE49-.LFB49
 2854 0457 01       		.uleb128 0x1
 2855 0458 9C       		.byte	0x9c
 2856 0459 7C040000 		.4byte	0x47c
 2857 045d 0D       		.uleb128 0xd
 2858 045e B6010000 		.4byte	.LASF21
 2859 0462 01       		.byte	0x1
 2860 0463 C903     		.2byte	0x3c9
 2861 0465 83000000 		.4byte	0x83
 2862 0469 02       		.uleb128 0x2
 2863 046a 91       		.byte	0x91
 2864 046b 74       		.sleb128 -12
 2865 046c 0D       		.uleb128 0xd
 2866 046d 85010000 		.4byte	.LASF41
 2867 0471 01       		.byte	0x1
 2868 0472 C903     		.2byte	0x3c9
 2869 0474 77000000 		.4byte	0x77
 2870 0478 02       		.uleb128 0x2
 2871 0479 91       		.byte	0x91
 2872 047a 72       		.sleb128 -14
 2873 047b 00       		.byte	0
 2874 047c 0F       		.uleb128 0xf
 2875 047d A5060000 		.4byte	.LASF48
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 102


 2876 0481 01       		.byte	0x1
 2877 0482 E503     		.2byte	0x3e5
 2878 0484 00000000 		.4byte	.LFB50
 2879 0488 28000000 		.4byte	.LFE50-.LFB50
 2880 048c 01       		.uleb128 0x1
 2881 048d 9C       		.byte	0x9c
 2882 048e B1040000 		.4byte	0x4b1
 2883 0492 0D       		.uleb128 0xd
 2884 0493 B6010000 		.4byte	.LASF21
 2885 0497 01       		.byte	0x1
 2886 0498 E503     		.2byte	0x3e5
 2887 049a 83000000 		.4byte	0x83
 2888 049e 02       		.uleb128 0x2
 2889 049f 91       		.byte	0x91
 2890 04a0 74       		.sleb128 -12
 2891 04a1 0D       		.uleb128 0xd
 2892 04a2 85010000 		.4byte	.LASF41
 2893 04a6 01       		.byte	0x1
 2894 04a7 E503     		.2byte	0x3e5
 2895 04a9 77000000 		.4byte	0x77
 2896 04ad 02       		.uleb128 0x2
 2897 04ae 91       		.byte	0x91
 2898 04af 72       		.sleb128 -14
 2899 04b0 00       		.byte	0
 2900 04b1 0F       		.uleb128 0xf
 2901 04b2 59060000 		.4byte	.LASF49
 2902 04b6 01       		.byte	0x1
 2903 04b7 0204     		.2byte	0x402
 2904 04b9 00000000 		.4byte	.LFB51
 2905 04bd 28000000 		.4byte	.LFE51-.LFB51
 2906 04c1 01       		.uleb128 0x1
 2907 04c2 9C       		.byte	0x9c
 2908 04c3 E6040000 		.4byte	0x4e6
 2909 04c7 0D       		.uleb128 0xd
 2910 04c8 B6010000 		.4byte	.LASF21
 2911 04cc 01       		.byte	0x1
 2912 04cd 0204     		.2byte	0x402
 2913 04cf 83000000 		.4byte	0x83
 2914 04d3 02       		.uleb128 0x2
 2915 04d4 91       		.byte	0x91
 2916 04d5 74       		.sleb128 -12
 2917 04d6 0D       		.uleb128 0xd
 2918 04d7 85010000 		.4byte	.LASF41
 2919 04db 01       		.byte	0x1
 2920 04dc 0204     		.2byte	0x402
 2921 04de 77000000 		.4byte	0x77
 2922 04e2 02       		.uleb128 0x2
 2923 04e3 91       		.byte	0x91
 2924 04e4 72       		.sleb128 -14
 2925 04e5 00       		.byte	0
 2926 04e6 0F       		.uleb128 0xf
 2927 04e7 75070000 		.4byte	.LASF50
 2928 04eb 01       		.byte	0x1
 2929 04ec 1E04     		.2byte	0x41e
 2930 04ee 00000000 		.4byte	.LFB52
 2931 04f2 28000000 		.4byte	.LFE52-.LFB52
 2932 04f6 01       		.uleb128 0x1
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 103


 2933 04f7 9C       		.byte	0x9c
 2934 04f8 1B050000 		.4byte	0x51b
 2935 04fc 0D       		.uleb128 0xd
 2936 04fd B6010000 		.4byte	.LASF21
 2937 0501 01       		.byte	0x1
 2938 0502 1E04     		.2byte	0x41e
 2939 0504 83000000 		.4byte	0x83
 2940 0508 02       		.uleb128 0x2
 2941 0509 91       		.byte	0x91
 2942 050a 74       		.sleb128 -12
 2943 050b 0D       		.uleb128 0xd
 2944 050c 85010000 		.4byte	.LASF41
 2945 0510 01       		.byte	0x1
 2946 0511 1E04     		.2byte	0x41e
 2947 0513 6B000000 		.4byte	0x6b
 2948 0517 02       		.uleb128 0x2
 2949 0518 91       		.byte	0x91
 2950 0519 73       		.sleb128 -13
 2951 051a 00       		.byte	0
 2952 051b 0F       		.uleb128 0xf
 2953 051c DC020000 		.4byte	.LASF51
 2954 0520 01       		.byte	0x1
 2955 0521 3A04     		.2byte	0x43a
 2956 0523 00000000 		.4byte	.LFB53
 2957 0527 28000000 		.4byte	.LFE53-.LFB53
 2958 052b 01       		.uleb128 0x1
 2959 052c 9C       		.byte	0x9c
 2960 052d 50050000 		.4byte	0x550
 2961 0531 0D       		.uleb128 0xd
 2962 0532 AF010000 		.4byte	.LASF19
 2963 0536 01       		.byte	0x1
 2964 0537 3A04     		.2byte	0x43a
 2965 0539 83000000 		.4byte	0x83
 2966 053d 02       		.uleb128 0x2
 2967 053e 91       		.byte	0x91
 2968 053f 74       		.sleb128 -12
 2969 0540 0D       		.uleb128 0xd
 2970 0541 85010000 		.4byte	.LASF41
 2971 0545 01       		.byte	0x1
 2972 0546 3A04     		.2byte	0x43a
 2973 0548 6B000000 		.4byte	0x6b
 2974 054c 02       		.uleb128 0x2
 2975 054d 91       		.byte	0x91
 2976 054e 73       		.sleb128 -13
 2977 054f 00       		.byte	0
 2978 0550 10       		.uleb128 0x10
 2979 0551 FC040000 		.4byte	.LASF52
 2980 0555 01       		.byte	0x1
 2981 0556 6804     		.2byte	0x468
 2982 0558 83000000 		.4byte	0x83
 2983 055c 00000000 		.4byte	.LFB54
 2984 0560 34010000 		.4byte	.LFE54-.LFB54
 2985 0564 01       		.uleb128 0x1
 2986 0565 9C       		.byte	0x9c
 2987 0566 C5050000 		.4byte	0x5c5
 2988 056a 0D       		.uleb128 0xd
 2989 056b AF010000 		.4byte	.LASF19
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 104


 2990 056f 01       		.byte	0x1
 2991 0570 6804     		.2byte	0x468
 2992 0572 83000000 		.4byte	0x83
 2993 0576 02       		.uleb128 0x2
 2994 0577 91       		.byte	0x91
 2995 0578 6C       		.sleb128 -20
 2996 0579 0C       		.uleb128 0xc
 2997 057a B6010000 		.4byte	.LASF21
 2998 057e 01       		.byte	0x1
 2999 057f 6A04     		.2byte	0x46a
 3000 0581 6B000000 		.4byte	0x6b
 3001 0585 02       		.uleb128 0x2
 3002 0586 91       		.byte	0x91
 3003 0587 77       		.sleb128 -9
 3004 0588 0C       		.uleb128 0xc
 3005 0589 D3020000 		.4byte	.LASF53
 3006 058d 01       		.byte	0x1
 3007 058e 6B04     		.2byte	0x46b
 3008 0590 6B000000 		.4byte	0x6b
 3009 0594 02       		.uleb128 0x2
 3010 0595 91       		.byte	0x91
 3011 0596 71       		.sleb128 -15
 3012 0597 0C       		.uleb128 0xc
 3013 0598 FF070000 		.4byte	.LASF54
 3014 059c 01       		.byte	0x1
 3015 059d 6C04     		.2byte	0x46c
 3016 059f 6B000000 		.4byte	0x6b
 3017 05a3 02       		.uleb128 0x2
 3018 05a4 91       		.byte	0x91
 3019 05a5 70       		.sleb128 -16
 3020 05a6 0C       		.uleb128 0xc
 3021 05a7 C1080000 		.4byte	.LASF55
 3022 05ab 01       		.byte	0x1
 3023 05ac 6E04     		.2byte	0x46e
 3024 05ae 77000000 		.4byte	0x77
 3025 05b2 02       		.uleb128 0x2
 3026 05b3 91       		.byte	0x91
 3027 05b4 74       		.sleb128 -12
 3028 05b5 0C       		.uleb128 0xc
 3029 05b6 E0030000 		.4byte	.LASF56
 3030 05ba 01       		.byte	0x1
 3031 05bb 6F04     		.2byte	0x46f
 3032 05bd 77000000 		.4byte	0x77
 3033 05c1 02       		.uleb128 0x2
 3034 05c2 91       		.byte	0x91
 3035 05c3 72       		.sleb128 -14
 3036 05c4 00       		.byte	0
 3037 05c5 10       		.uleb128 0x10
 3038 05c6 19040000 		.4byte	.LASF57
 3039 05ca 01       		.byte	0x1
 3040 05cb BA04     		.2byte	0x4ba
 3041 05cd 83000000 		.4byte	0x83
 3042 05d1 00000000 		.4byte	.LFB55
 3043 05d5 58000000 		.4byte	.LFE55-.LFB55
 3044 05d9 01       		.uleb128 0x1
 3045 05da 9C       		.byte	0x9c
 3046 05db 1C060000 		.4byte	0x61c
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 105


 3047 05df 0D       		.uleb128 0xd
 3048 05e0 B6010000 		.4byte	.LASF21
 3049 05e4 01       		.byte	0x1
 3050 05e5 BA04     		.2byte	0x4ba
 3051 05e7 83000000 		.4byte	0x83
 3052 05eb 02       		.uleb128 0x2
 3053 05ec 91       		.byte	0x91
 3054 05ed 64       		.sleb128 -28
 3055 05ee 0C       		.uleb128 0xc
 3056 05ef BD050000 		.4byte	.LASF58
 3057 05f3 01       		.byte	0x1
 3058 05f4 BC04     		.2byte	0x4bc
 3059 05f6 83000000 		.4byte	0x83
 3060 05fa 02       		.uleb128 0x2
 3061 05fb 91       		.byte	0x91
 3062 05fc 74       		.sleb128 -12
 3063 05fd 0C       		.uleb128 0xc
 3064 05fe 78010000 		.4byte	.LASF59
 3065 0602 01       		.byte	0x1
 3066 0603 BD04     		.2byte	0x4bd
 3067 0605 83000000 		.4byte	0x83
 3068 0609 02       		.uleb128 0x2
 3069 060a 91       		.byte	0x91
 3070 060b 6C       		.sleb128 -20
 3071 060c 0C       		.uleb128 0xc
 3072 060d 53000000 		.4byte	.LASF60
 3073 0611 01       		.byte	0x1
 3074 0612 BE04     		.2byte	0x4be
 3075 0614 83000000 		.4byte	0x83
 3076 0618 02       		.uleb128 0x2
 3077 0619 91       		.byte	0x91
 3078 061a 70       		.sleb128 -16
 3079 061b 00       		.byte	0
 3080 061c 10       		.uleb128 0x10
 3081 061d 8A020000 		.4byte	.LASF61
 3082 0621 01       		.byte	0x1
 3083 0622 E804     		.2byte	0x4e8
 3084 0624 83000000 		.4byte	0x83
 3085 0628 00000000 		.4byte	.LFB56
 3086 062c 36000000 		.4byte	.LFE56-.LFB56
 3087 0630 01       		.uleb128 0x1
 3088 0631 9C       		.byte	0x9c
 3089 0632 53060000 		.4byte	0x653
 3090 0636 0B       		.uleb128 0xb
 3091 0637 6900     		.ascii	"i\000"
 3092 0639 01       		.byte	0x1
 3093 063a EB04     		.2byte	0x4eb
 3094 063c 83000000 		.4byte	0x83
 3095 0640 02       		.uleb128 0x2
 3096 0641 91       		.byte	0x91
 3097 0642 74       		.sleb128 -12
 3098 0643 0C       		.uleb128 0xc
 3099 0644 53000000 		.4byte	.LASF60
 3100 0648 01       		.byte	0x1
 3101 0649 EC04     		.2byte	0x4ec
 3102 064b 83000000 		.4byte	0x83
 3103 064f 02       		.uleb128 0x2
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 106


 3104 0650 91       		.byte	0x91
 3105 0651 70       		.sleb128 -16
 3106 0652 00       		.byte	0
 3107 0653 0A       		.uleb128 0xa
 3108 0654 8A080000 		.4byte	.LASF62
 3109 0658 01       		.byte	0x1
 3110 0659 1705     		.2byte	0x517
 3111 065b 00000000 		.4byte	.LFB57
 3112 065f 70000000 		.4byte	.LFE57-.LFB57
 3113 0663 01       		.uleb128 0x1
 3114 0664 9C       		.byte	0x9c
 3115 0665 97060000 		.4byte	0x697
 3116 0669 0D       		.uleb128 0xd
 3117 066a B6010000 		.4byte	.LASF21
 3118 066e 01       		.byte	0x1
 3119 066f 1705     		.2byte	0x517
 3120 0671 83000000 		.4byte	0x83
 3121 0675 02       		.uleb128 0x2
 3122 0676 91       		.byte	0x91
 3123 0677 6C       		.sleb128 -20
 3124 0678 0C       		.uleb128 0xc
 3125 0679 BD050000 		.4byte	.LASF58
 3126 067d 01       		.byte	0x1
 3127 067e 1A05     		.2byte	0x51a
 3128 0680 6B000000 		.4byte	0x6b
 3129 0684 02       		.uleb128 0x2
 3130 0685 91       		.byte	0x91
 3131 0686 77       		.sleb128 -9
 3132 0687 0C       		.uleb128 0xc
 3133 0688 78010000 		.4byte	.LASF59
 3134 068c 01       		.byte	0x1
 3135 068d 1B05     		.2byte	0x51b
 3136 068f 6B000000 		.4byte	0x6b
 3137 0693 02       		.uleb128 0x2
 3138 0694 91       		.byte	0x91
 3139 0695 76       		.sleb128 -10
 3140 0696 00       		.byte	0
 3141 0697 0A       		.uleb128 0xa
 3142 0698 D1080000 		.4byte	.LASF63
 3143 069c 01       		.byte	0x1
 3144 069d 4205     		.2byte	0x542
 3145 069f 00000000 		.4byte	.LFB58
 3146 06a3 70000000 		.4byte	.LFE58-.LFB58
 3147 06a7 01       		.uleb128 0x1
 3148 06a8 9C       		.byte	0x9c
 3149 06a9 DB060000 		.4byte	0x6db
 3150 06ad 0D       		.uleb128 0xd
 3151 06ae B6010000 		.4byte	.LASF21
 3152 06b2 01       		.byte	0x1
 3153 06b3 4205     		.2byte	0x542
 3154 06b5 83000000 		.4byte	0x83
 3155 06b9 02       		.uleb128 0x2
 3156 06ba 91       		.byte	0x91
 3157 06bb 6C       		.sleb128 -20
 3158 06bc 0C       		.uleb128 0xc
 3159 06bd BD050000 		.4byte	.LASF58
 3160 06c1 01       		.byte	0x1
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 107


 3161 06c2 4405     		.2byte	0x544
 3162 06c4 6B000000 		.4byte	0x6b
 3163 06c8 02       		.uleb128 0x2
 3164 06c9 91       		.byte	0x91
 3165 06ca 77       		.sleb128 -9
 3166 06cb 0C       		.uleb128 0xc
 3167 06cc 78010000 		.4byte	.LASF59
 3168 06d0 01       		.byte	0x1
 3169 06d1 4505     		.2byte	0x545
 3170 06d3 6B000000 		.4byte	0x6b
 3171 06d7 02       		.uleb128 0x2
 3172 06d8 91       		.byte	0x91
 3173 06d9 76       		.sleb128 -10
 3174 06da 00       		.byte	0
 3175 06db 0E       		.uleb128 0xe
 3176 06dc 41020000 		.4byte	.LASF64
 3177 06e0 01       		.byte	0x1
 3178 06e1 5E09     		.2byte	0x95e
 3179 06e3 77000000 		.4byte	0x77
 3180 06e7 00000000 		.4byte	.LFB59
 3181 06eb 76000000 		.4byte	.LFE59-.LFB59
 3182 06ef 01       		.uleb128 0x1
 3183 06f0 9C       		.byte	0x9c
 3184 06f1 2F070000 		.4byte	0x72f
 3185 06f5 11       		.uleb128 0x11
 3186 06f6 783100   		.ascii	"x1\000"
 3187 06f9 01       		.byte	0x1
 3188 06fa 5E09     		.2byte	0x95e
 3189 06fc 77000000 		.4byte	0x77
 3190 0700 02       		.uleb128 0x2
 3191 0701 91       		.byte	0x91
 3192 0702 66       		.sleb128 -26
 3193 0703 11       		.uleb128 0x11
 3194 0704 783200   		.ascii	"x2\000"
 3195 0707 01       		.byte	0x1
 3196 0708 5E09     		.2byte	0x95e
 3197 070a 77000000 		.4byte	0x77
 3198 070e 02       		.uleb128 0x2
 3199 070f 91       		.byte	0x91
 3200 0710 64       		.sleb128 -28
 3201 0711 11       		.uleb128 0x11
 3202 0712 783300   		.ascii	"x3\000"
 3203 0715 01       		.byte	0x1
 3204 0716 5E09     		.2byte	0x95e
 3205 0718 77000000 		.4byte	0x77
 3206 071c 02       		.uleb128 0x2
 3207 071d 91       		.byte	0x91
 3208 071e 62       		.sleb128 -30
 3209 071f 0B       		.uleb128 0xb
 3210 0720 746D7000 		.ascii	"tmp\000"
 3211 0724 01       		.byte	0x1
 3212 0725 6009     		.2byte	0x960
 3213 0727 77000000 		.4byte	0x77
 3214 072b 02       		.uleb128 0x2
 3215 072c 91       		.byte	0x91
 3216 072d 6E       		.sleb128 -18
 3217 072e 00       		.byte	0
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 108


 3218 072f 0E       		.uleb128 0xe
 3219 0730 8B010000 		.4byte	.LASF65
 3220 0734 01       		.byte	0x1
 3221 0735 BF0A     		.2byte	0xabf
 3222 0737 83000000 		.4byte	0x83
 3223 073b 00000000 		.4byte	.LFB60
 3224 073f 1C000000 		.4byte	.LFE60-.LFB60
 3225 0743 01       		.uleb128 0x1
 3226 0744 9C       		.byte	0x9c
 3227 0745 59070000 		.4byte	0x759
 3228 0749 0D       		.uleb128 0xd
 3229 074a AF010000 		.4byte	.LASF19
 3230 074e 01       		.byte	0x1
 3231 074f BF0A     		.2byte	0xabf
 3232 0751 83000000 		.4byte	0x83
 3233 0755 02       		.uleb128 0x2
 3234 0756 91       		.byte	0x91
 3235 0757 74       		.sleb128 -12
 3236 0758 00       		.byte	0
 3237 0759 0E       		.uleb128 0xe
 3238 075a E2010000 		.4byte	.LASF66
 3239 075e 01       		.byte	0x1
 3240 075f D90A     		.2byte	0xad9
 3241 0761 6B000000 		.4byte	0x6b
 3242 0765 00000000 		.4byte	.LFB61
 3243 0769 1C000000 		.4byte	.LFE61-.LFB61
 3244 076d 01       		.uleb128 0x1
 3245 076e 9C       		.byte	0x9c
 3246 076f 83070000 		.4byte	0x783
 3247 0773 0D       		.uleb128 0xd
 3248 0774 AF010000 		.4byte	.LASF19
 3249 0778 01       		.byte	0x1
 3250 0779 D90A     		.2byte	0xad9
 3251 077b 83000000 		.4byte	0x83
 3252 077f 02       		.uleb128 0x2
 3253 0780 91       		.byte	0x91
 3254 0781 74       		.sleb128 -12
 3255 0782 00       		.byte	0
 3256 0783 0E       		.uleb128 0xe
 3257 0784 61040000 		.4byte	.LASF67
 3258 0788 01       		.byte	0x1
 3259 0789 F30A     		.2byte	0xaf3
 3260 078b 6B000000 		.4byte	0x6b
 3261 078f 00000000 		.4byte	.LFB62
 3262 0793 1C000000 		.4byte	.LFE62-.LFB62
 3263 0797 01       		.uleb128 0x1
 3264 0798 9C       		.byte	0x9c
 3265 0799 AD070000 		.4byte	0x7ad
 3266 079d 0D       		.uleb128 0xd
 3267 079e B6010000 		.4byte	.LASF21
 3268 07a2 01       		.byte	0x1
 3269 07a3 F30A     		.2byte	0xaf3
 3270 07a5 83000000 		.4byte	0x83
 3271 07a9 02       		.uleb128 0x2
 3272 07aa 91       		.byte	0x91
 3273 07ab 74       		.sleb128 -12
 3274 07ac 00       		.byte	0
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 109


 3275 07ad 12       		.uleb128 0x12
 3276 07ae CB000000 		.4byte	.LASF68
 3277 07b2 01       		.byte	0x1
 3278 07b3 0D0B     		.2byte	0xb0d
 3279 07b5 00000000 		.4byte	.LFB63
 3280 07b9 14000000 		.4byte	.LFE63-.LFB63
 3281 07bd 01       		.uleb128 0x1
 3282 07be 9C       		.byte	0x9c
 3283 07bf 12       		.uleb128 0x12
 3284 07c0 B6040000 		.4byte	.LASF69
 3285 07c4 01       		.byte	0x1
 3286 07c5 260B     		.2byte	0xb26
 3287 07c7 00000000 		.4byte	.LFB64
 3288 07cb 14000000 		.4byte	.LFE64-.LFB64
 3289 07cf 01       		.uleb128 0x1
 3290 07d0 9C       		.byte	0x9c
 3291 07d1 13       		.uleb128 0x13
 3292 07d2 6B000000 		.4byte	0x6b
 3293 07d6 E1070000 		.4byte	0x7e1
 3294 07da 14       		.uleb128 0x14
 3295 07db A4000000 		.4byte	0xa4
 3296 07df 0C       		.byte	0xc
 3297 07e0 00       		.byte	0
 3298 07e1 08       		.uleb128 0x8
 3299 07e2 A4080000 		.4byte	.LASF70
 3300 07e6 01       		.byte	0x1
 3301 07e7 5D       		.byte	0x5d
 3302 07e8 D1070000 		.4byte	0x7d1
 3303 07ec 05       		.uleb128 0x5
 3304 07ed 03       		.byte	0x3
 3305 07ee 40000000 		.4byte	CapSense_CSD_debounceCounter
 3306 07f2 13       		.uleb128 0x13
 3307 07f3 77000000 		.4byte	0x77
 3308 07f7 02080000 		.4byte	0x802
 3309 07fb 14       		.uleb128 0x14
 3310 07fc A4000000 		.4byte	0xa4
 3311 0800 0B       		.byte	0xb
 3312 0801 00       		.byte	0
 3313 0802 15       		.uleb128 0x15
 3314 0803 5E070000 		.4byte	.LASF71
 3315 0807 01       		.byte	0x1
 3316 0808 2C       		.byte	0x2c
 3317 0809 F2070000 		.4byte	0x7f2
 3318 080d 13       		.uleb128 0x13
 3319 080e 6B000000 		.4byte	0x6b
 3320 0812 1D080000 		.4byte	0x81d
 3321 0816 14       		.uleb128 0x14
 3322 0817 A4000000 		.4byte	0xa4
 3323 081b 01       		.byte	0x1
 3324 081c 00       		.byte	0
 3325 081d 15       		.uleb128 0x15
 3326 081e 80060000 		.4byte	.LASF72
 3327 0822 01       		.byte	0x1
 3328 0823 2D       		.byte	0x2d
 3329 0824 0D080000 		.4byte	0x80d
 3330 0828 13       		.uleb128 0x13
 3331 0829 B2000000 		.4byte	0xb2
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 110


 3332 082d 38080000 		.4byte	0x838
 3333 0831 14       		.uleb128 0x14
 3334 0832 A4000000 		.4byte	0xa4
 3335 0836 0B       		.byte	0xb
 3336 0837 00       		.byte	0
 3337 0838 15       		.uleb128 0x15
 3338 0839 2A030000 		.4byte	.LASF73
 3339 083d 01       		.byte	0x1
 3340 083e 2E       		.byte	0x2e
 3341 083f 43080000 		.4byte	0x843
 3342 0843 05       		.uleb128 0x5
 3343 0844 28080000 		.4byte	0x828
 3344 0848 16       		.uleb128 0x16
 3345 0849 00000000 		.4byte	.LASF74
 3346 084d 01       		.byte	0x1
 3347 084e 34       		.byte	0x34
 3348 084f F2070000 		.4byte	0x7f2
 3349 0853 05       		.uleb128 0x5
 3350 0854 03       		.byte	0x3
 3351 0855 00000000 		.4byte	CapSense_CSD_sensorBaseline
 3352 0859 13       		.uleb128 0x13
 3353 085a 6B000000 		.4byte	0x6b
 3354 085e 69080000 		.4byte	0x869
 3355 0862 14       		.uleb128 0x14
 3356 0863 A4000000 		.4byte	0xa4
 3357 0867 0B       		.byte	0xb
 3358 0868 00       		.byte	0
 3359 0869 16       		.uleb128 0x16
 3360 086a C3010000 		.4byte	.LASF75
 3361 086e 01       		.byte	0x1
 3362 086f 35       		.byte	0x35
 3363 0870 59080000 		.4byte	0x859
 3364 0874 05       		.uleb128 0x5
 3365 0875 03       		.byte	0x3
 3366 0876 00000000 		.4byte	CapSense_CSD_sensorBaselineLow
 3367 087a 16       		.uleb128 0x16
 3368 087b 34060000 		.4byte	.LASF76
 3369 087f 01       		.byte	0x1
 3370 0880 36       		.byte	0x36
 3371 0881 F2070000 		.4byte	0x7f2
 3372 0885 05       		.uleb128 0x5
 3373 0886 03       		.byte	0x3
 3374 0887 00000000 		.4byte	CapSense_CSD_sensorSignal
 3375 088b 16       		.uleb128 0x16
 3376 088c 39000000 		.4byte	.LASF77
 3377 0890 01       		.byte	0x1
 3378 0891 37       		.byte	0x37
 3379 0892 0D080000 		.4byte	0x80d
 3380 0896 05       		.uleb128 0x5
 3381 0897 03       		.byte	0x3
 3382 0898 00000000 		.4byte	CapSense_CSD_sensorOnMask
 3383 089c 16       		.uleb128 0x16
 3384 089d DD060000 		.4byte	.LASF78
 3385 08a1 01       		.byte	0x1
 3386 08a2 39       		.byte	0x39
 3387 08a3 59080000 		.4byte	0x859
 3388 08a7 05       		.uleb128 0x5
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 111


 3389 08a8 03       		.byte	0x3
 3390 08a9 00000000 		.4byte	CapSense_CSD_lowBaselineResetCnt
 3391 08ad 16       		.uleb128 0x16
 3392 08ae 7E050000 		.4byte	.LASF79
 3393 08b2 01       		.byte	0x1
 3394 08b3 3A       		.byte	0x3a
 3395 08b4 59080000 		.4byte	0x859
 3396 08b8 05       		.uleb128 0x5
 3397 08b9 03       		.byte	0x3
 3398 08ba 00000000 		.4byte	CapSense_CSD_lowBaselineReset
 3399 08be 16       		.uleb128 0x16
 3400 08bf EE050000 		.4byte	.LASF80
 3401 08c3 01       		.byte	0x1
 3402 08c4 49       		.byte	0x49
 3403 08c5 F2070000 		.4byte	0x7f2
 3404 08c9 05       		.uleb128 0x5
 3405 08ca 03       		.byte	0x3
 3406 08cb 00000000 		.4byte	CapSense_CSD_fingerThreshold
 3407 08cf 16       		.uleb128 0x16
 3408 08d0 6E020000 		.4byte	.LASF81
 3409 08d4 01       		.byte	0x1
 3410 08d5 4D       		.byte	0x4d
 3411 08d6 F2070000 		.4byte	0x7f2
 3412 08da 05       		.uleb128 0x5
 3413 08db 03       		.byte	0x3
 3414 08dc 00000000 		.4byte	CapSense_CSD_noiseThreshold
 3415 08e0 16       		.uleb128 0x16
 3416 08e1 FE060000 		.4byte	.LASF82
 3417 08e5 01       		.byte	0x1
 3418 08e6 51       		.byte	0x51
 3419 08e7 F2070000 		.4byte	0x7f2
 3420 08eb 05       		.uleb128 0x5
 3421 08ec 03       		.byte	0x3
 3422 08ed 00000000 		.4byte	CapSense_CSD_negativeNoiseThreshold
 3423 08f1 16       		.uleb128 0x16
 3424 08f2 23020000 		.4byte	.LASF83
 3425 08f6 01       		.byte	0x1
 3426 08f7 55       		.byte	0x55
 3427 08f8 F2070000 		.4byte	0x7f2
 3428 08fc 05       		.uleb128 0x5
 3429 08fd 03       		.byte	0x3
 3430 08fe 00000000 		.4byte	CapSense_CSD_hysteresis
 3431 0902 16       		.uleb128 0x16
 3432 0903 E9070000 		.4byte	.LASF84
 3433 0907 01       		.byte	0x1
 3434 0908 59       		.byte	0x59
 3435 0909 59080000 		.4byte	0x859
 3436 090d 05       		.uleb128 0x5
 3437 090e 03       		.byte	0x3
 3438 090f 00000000 		.4byte	CapSense_CSD_debounce
 3439 0913 16       		.uleb128 0x16
 3440 0914 7A040000 		.4byte	.LASF85
 3441 0918 01       		.byte	0x1
 3442 0919 61       		.byte	0x61
 3443 091a 24090000 		.4byte	0x924
 3444 091e 05       		.uleb128 0x5
 3445 091f 03       		.byte	0x3
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 112


 3446 0920 00000000 		.4byte	CapSense_CSD_rawDataIndex
 3447 0924 05       		.uleb128 0x5
 3448 0925 28080000 		.4byte	0x828
 3449 0929 16       		.uleb128 0x16
 3450 092a 59000000 		.4byte	.LASF86
 3451 092e 01       		.byte	0x1
 3452 092f 70       		.byte	0x70
 3453 0930 3A090000 		.4byte	0x93a
 3454 0934 05       		.uleb128 0x5
 3455 0935 03       		.byte	0x3
 3456 0936 00000000 		.4byte	CapSense_CSD_numberOfSensors
 3457 093a 05       		.uleb128 0x5
 3458 093b 28080000 		.4byte	0x828
 3459 093f 16       		.uleb128 0x16
 3460 0940 80000000 		.4byte	.LASF87
 3461 0944 01       		.byte	0x1
 3462 0945 1E       		.byte	0x1e
 3463 0946 F2070000 		.4byte	0x7f2
 3464 094a 05       		.uleb128 0x5
 3465 094b 03       		.byte	0x3
 3466 094c 00000000 		.4byte	CapSense_CSD_rawFilterData1
 3467 0950 16       		.uleb128 0x16
 3468 0951 AE020000 		.4byte	.LASF88
 3469 0955 01       		.byte	0x1
 3470 0956 1F       		.byte	0x1f
 3471 0957 F2070000 		.4byte	0x7f2
 3472 095b 05       		.uleb128 0x5
 3473 095c 03       		.byte	0x3
 3474 095d 00000000 		.4byte	CapSense_CSD_rawFilterData2
 3475 0961 16       		.uleb128 0x16
 3476 0962 40070000 		.4byte	.LASF89
 3477 0966 01       		.byte	0x1
 3478 0967 45       		.byte	0x45
 3479 0968 6B000000 		.4byte	0x6b
 3480 096c 05       		.uleb128 0x5
 3481 096d 03       		.byte	0x3
 3482 096e 00000000 		.4byte	CapSense_CSD_enableRawFilters
 3483 0972 00       		.byte	0
 3484              		.section	.debug_abbrev,"",%progbits
 3485              	.Ldebug_abbrev0:
 3486 0000 01       		.uleb128 0x1
 3487 0001 11       		.uleb128 0x11
 3488 0002 01       		.byte	0x1
 3489 0003 25       		.uleb128 0x25
 3490 0004 0E       		.uleb128 0xe
 3491 0005 13       		.uleb128 0x13
 3492 0006 0B       		.uleb128 0xb
 3493 0007 03       		.uleb128 0x3
 3494 0008 0E       		.uleb128 0xe
 3495 0009 1B       		.uleb128 0x1b
 3496 000a 0E       		.uleb128 0xe
 3497 000b 55       		.uleb128 0x55
 3498 000c 17       		.uleb128 0x17
 3499 000d 11       		.uleb128 0x11
 3500 000e 01       		.uleb128 0x1
 3501 000f 10       		.uleb128 0x10
 3502 0010 17       		.uleb128 0x17
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 113


 3503 0011 00       		.byte	0
 3504 0012 00       		.byte	0
 3505 0013 02       		.uleb128 0x2
 3506 0014 24       		.uleb128 0x24
 3507 0015 00       		.byte	0
 3508 0016 0B       		.uleb128 0xb
 3509 0017 0B       		.uleb128 0xb
 3510 0018 3E       		.uleb128 0x3e
 3511 0019 0B       		.uleb128 0xb
 3512 001a 03       		.uleb128 0x3
 3513 001b 0E       		.uleb128 0xe
 3514 001c 00       		.byte	0
 3515 001d 00       		.byte	0
 3516 001e 03       		.uleb128 0x3
 3517 001f 24       		.uleb128 0x24
 3518 0020 00       		.byte	0
 3519 0021 0B       		.uleb128 0xb
 3520 0022 0B       		.uleb128 0xb
 3521 0023 3E       		.uleb128 0x3e
 3522 0024 0B       		.uleb128 0xb
 3523 0025 03       		.uleb128 0x3
 3524 0026 08       		.uleb128 0x8
 3525 0027 00       		.byte	0
 3526 0028 00       		.byte	0
 3527 0029 04       		.uleb128 0x4
 3528 002a 16       		.uleb128 0x16
 3529 002b 00       		.byte	0
 3530 002c 03       		.uleb128 0x3
 3531 002d 0E       		.uleb128 0xe
 3532 002e 3A       		.uleb128 0x3a
 3533 002f 0B       		.uleb128 0xb
 3534 0030 3B       		.uleb128 0x3b
 3535 0031 05       		.uleb128 0x5
 3536 0032 49       		.uleb128 0x49
 3537 0033 13       		.uleb128 0x13
 3538 0034 00       		.byte	0
 3539 0035 00       		.byte	0
 3540 0036 05       		.uleb128 0x5
 3541 0037 26       		.uleb128 0x26
 3542 0038 00       		.byte	0
 3543 0039 49       		.uleb128 0x49
 3544 003a 13       		.uleb128 0x13
 3545 003b 00       		.byte	0
 3546 003c 00       		.byte	0
 3547 003d 06       		.uleb128 0x6
 3548 003e 2E       		.uleb128 0x2e
 3549 003f 01       		.byte	0x1
 3550 0040 3F       		.uleb128 0x3f
 3551 0041 19       		.uleb128 0x19
 3552 0042 03       		.uleb128 0x3
 3553 0043 0E       		.uleb128 0xe
 3554 0044 3A       		.uleb128 0x3a
 3555 0045 0B       		.uleb128 0xb
 3556 0046 3B       		.uleb128 0x3b
 3557 0047 0B       		.uleb128 0xb
 3558 0048 27       		.uleb128 0x27
 3559 0049 19       		.uleb128 0x19
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 114


 3560 004a 11       		.uleb128 0x11
 3561 004b 01       		.uleb128 0x1
 3562 004c 12       		.uleb128 0x12
 3563 004d 06       		.uleb128 0x6
 3564 004e 40       		.uleb128 0x40
 3565 004f 18       		.uleb128 0x18
 3566 0050 9742     		.uleb128 0x2117
 3567 0052 19       		.uleb128 0x19
 3568 0053 01       		.uleb128 0x1
 3569 0054 13       		.uleb128 0x13
 3570 0055 00       		.byte	0
 3571 0056 00       		.byte	0
 3572 0057 07       		.uleb128 0x7
 3573 0058 05       		.uleb128 0x5
 3574 0059 00       		.byte	0
 3575 005a 03       		.uleb128 0x3
 3576 005b 0E       		.uleb128 0xe
 3577 005c 3A       		.uleb128 0x3a
 3578 005d 0B       		.uleb128 0xb
 3579 005e 3B       		.uleb128 0x3b
 3580 005f 0B       		.uleb128 0xb
 3581 0060 49       		.uleb128 0x49
 3582 0061 13       		.uleb128 0x13
 3583 0062 02       		.uleb128 0x2
 3584 0063 18       		.uleb128 0x18
 3585 0064 00       		.byte	0
 3586 0065 00       		.byte	0
 3587 0066 08       		.uleb128 0x8
 3588 0067 34       		.uleb128 0x34
 3589 0068 00       		.byte	0
 3590 0069 03       		.uleb128 0x3
 3591 006a 0E       		.uleb128 0xe
 3592 006b 3A       		.uleb128 0x3a
 3593 006c 0B       		.uleb128 0xb
 3594 006d 3B       		.uleb128 0x3b
 3595 006e 0B       		.uleb128 0xb
 3596 006f 49       		.uleb128 0x49
 3597 0070 13       		.uleb128 0x13
 3598 0071 02       		.uleb128 0x2
 3599 0072 18       		.uleb128 0x18
 3600 0073 00       		.byte	0
 3601 0074 00       		.byte	0
 3602 0075 09       		.uleb128 0x9
 3603 0076 2E       		.uleb128 0x2e
 3604 0077 01       		.byte	0x1
 3605 0078 3F       		.uleb128 0x3f
 3606 0079 19       		.uleb128 0x19
 3607 007a 03       		.uleb128 0x3
 3608 007b 0E       		.uleb128 0xe
 3609 007c 3A       		.uleb128 0x3a
 3610 007d 0B       		.uleb128 0xb
 3611 007e 3B       		.uleb128 0x3b
 3612 007f 0B       		.uleb128 0xb
 3613 0080 27       		.uleb128 0x27
 3614 0081 19       		.uleb128 0x19
 3615 0082 11       		.uleb128 0x11
 3616 0083 01       		.uleb128 0x1
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 115


 3617 0084 12       		.uleb128 0x12
 3618 0085 06       		.uleb128 0x6
 3619 0086 40       		.uleb128 0x40
 3620 0087 18       		.uleb128 0x18
 3621 0088 9642     		.uleb128 0x2116
 3622 008a 19       		.uleb128 0x19
 3623 008b 01       		.uleb128 0x1
 3624 008c 13       		.uleb128 0x13
 3625 008d 00       		.byte	0
 3626 008e 00       		.byte	0
 3627 008f 0A       		.uleb128 0xa
 3628 0090 2E       		.uleb128 0x2e
 3629 0091 01       		.byte	0x1
 3630 0092 3F       		.uleb128 0x3f
 3631 0093 19       		.uleb128 0x19
 3632 0094 03       		.uleb128 0x3
 3633 0095 0E       		.uleb128 0xe
 3634 0096 3A       		.uleb128 0x3a
 3635 0097 0B       		.uleb128 0xb
 3636 0098 3B       		.uleb128 0x3b
 3637 0099 05       		.uleb128 0x5
 3638 009a 27       		.uleb128 0x27
 3639 009b 19       		.uleb128 0x19
 3640 009c 11       		.uleb128 0x11
 3641 009d 01       		.uleb128 0x1
 3642 009e 12       		.uleb128 0x12
 3643 009f 06       		.uleb128 0x6
 3644 00a0 40       		.uleb128 0x40
 3645 00a1 18       		.uleb128 0x18
 3646 00a2 9642     		.uleb128 0x2116
 3647 00a4 19       		.uleb128 0x19
 3648 00a5 01       		.uleb128 0x1
 3649 00a6 13       		.uleb128 0x13
 3650 00a7 00       		.byte	0
 3651 00a8 00       		.byte	0
 3652 00a9 0B       		.uleb128 0xb
 3653 00aa 34       		.uleb128 0x34
 3654 00ab 00       		.byte	0
 3655 00ac 03       		.uleb128 0x3
 3656 00ad 08       		.uleb128 0x8
 3657 00ae 3A       		.uleb128 0x3a
 3658 00af 0B       		.uleb128 0xb
 3659 00b0 3B       		.uleb128 0x3b
 3660 00b1 05       		.uleb128 0x5
 3661 00b2 49       		.uleb128 0x49
 3662 00b3 13       		.uleb128 0x13
 3663 00b4 02       		.uleb128 0x2
 3664 00b5 18       		.uleb128 0x18
 3665 00b6 00       		.byte	0
 3666 00b7 00       		.byte	0
 3667 00b8 0C       		.uleb128 0xc
 3668 00b9 34       		.uleb128 0x34
 3669 00ba 00       		.byte	0
 3670 00bb 03       		.uleb128 0x3
 3671 00bc 0E       		.uleb128 0xe
 3672 00bd 3A       		.uleb128 0x3a
 3673 00be 0B       		.uleb128 0xb
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 116


 3674 00bf 3B       		.uleb128 0x3b
 3675 00c0 05       		.uleb128 0x5
 3676 00c1 49       		.uleb128 0x49
 3677 00c2 13       		.uleb128 0x13
 3678 00c3 02       		.uleb128 0x2
 3679 00c4 18       		.uleb128 0x18
 3680 00c5 00       		.byte	0
 3681 00c6 00       		.byte	0
 3682 00c7 0D       		.uleb128 0xd
 3683 00c8 05       		.uleb128 0x5
 3684 00c9 00       		.byte	0
 3685 00ca 03       		.uleb128 0x3
 3686 00cb 0E       		.uleb128 0xe
 3687 00cc 3A       		.uleb128 0x3a
 3688 00cd 0B       		.uleb128 0xb
 3689 00ce 3B       		.uleb128 0x3b
 3690 00cf 05       		.uleb128 0x5
 3691 00d0 49       		.uleb128 0x49
 3692 00d1 13       		.uleb128 0x13
 3693 00d2 02       		.uleb128 0x2
 3694 00d3 18       		.uleb128 0x18
 3695 00d4 00       		.byte	0
 3696 00d5 00       		.byte	0
 3697 00d6 0E       		.uleb128 0xe
 3698 00d7 2E       		.uleb128 0x2e
 3699 00d8 01       		.byte	0x1
 3700 00d9 3F       		.uleb128 0x3f
 3701 00da 19       		.uleb128 0x19
 3702 00db 03       		.uleb128 0x3
 3703 00dc 0E       		.uleb128 0xe
 3704 00dd 3A       		.uleb128 0x3a
 3705 00de 0B       		.uleb128 0xb
 3706 00df 3B       		.uleb128 0x3b
 3707 00e0 05       		.uleb128 0x5
 3708 00e1 27       		.uleb128 0x27
 3709 00e2 19       		.uleb128 0x19
 3710 00e3 49       		.uleb128 0x49
 3711 00e4 13       		.uleb128 0x13
 3712 00e5 11       		.uleb128 0x11
 3713 00e6 01       		.uleb128 0x1
 3714 00e7 12       		.uleb128 0x12
 3715 00e8 06       		.uleb128 0x6
 3716 00e9 40       		.uleb128 0x40
 3717 00ea 18       		.uleb128 0x18
 3718 00eb 9742     		.uleb128 0x2117
 3719 00ed 19       		.uleb128 0x19
 3720 00ee 01       		.uleb128 0x1
 3721 00ef 13       		.uleb128 0x13
 3722 00f0 00       		.byte	0
 3723 00f1 00       		.byte	0
 3724 00f2 0F       		.uleb128 0xf
 3725 00f3 2E       		.uleb128 0x2e
 3726 00f4 01       		.byte	0x1
 3727 00f5 3F       		.uleb128 0x3f
 3728 00f6 19       		.uleb128 0x19
 3729 00f7 03       		.uleb128 0x3
 3730 00f8 0E       		.uleb128 0xe
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 117


 3731 00f9 3A       		.uleb128 0x3a
 3732 00fa 0B       		.uleb128 0xb
 3733 00fb 3B       		.uleb128 0x3b
 3734 00fc 05       		.uleb128 0x5
 3735 00fd 27       		.uleb128 0x27
 3736 00fe 19       		.uleb128 0x19
 3737 00ff 11       		.uleb128 0x11
 3738 0100 01       		.uleb128 0x1
 3739 0101 12       		.uleb128 0x12
 3740 0102 06       		.uleb128 0x6
 3741 0103 40       		.uleb128 0x40
 3742 0104 18       		.uleb128 0x18
 3743 0105 9742     		.uleb128 0x2117
 3744 0107 19       		.uleb128 0x19
 3745 0108 01       		.uleb128 0x1
 3746 0109 13       		.uleb128 0x13
 3747 010a 00       		.byte	0
 3748 010b 00       		.byte	0
 3749 010c 10       		.uleb128 0x10
 3750 010d 2E       		.uleb128 0x2e
 3751 010e 01       		.byte	0x1
 3752 010f 3F       		.uleb128 0x3f
 3753 0110 19       		.uleb128 0x19
 3754 0111 03       		.uleb128 0x3
 3755 0112 0E       		.uleb128 0xe
 3756 0113 3A       		.uleb128 0x3a
 3757 0114 0B       		.uleb128 0xb
 3758 0115 3B       		.uleb128 0x3b
 3759 0116 05       		.uleb128 0x5
 3760 0117 27       		.uleb128 0x27
 3761 0118 19       		.uleb128 0x19
 3762 0119 49       		.uleb128 0x49
 3763 011a 13       		.uleb128 0x13
 3764 011b 11       		.uleb128 0x11
 3765 011c 01       		.uleb128 0x1
 3766 011d 12       		.uleb128 0x12
 3767 011e 06       		.uleb128 0x6
 3768 011f 40       		.uleb128 0x40
 3769 0120 18       		.uleb128 0x18
 3770 0121 9642     		.uleb128 0x2116
 3771 0123 19       		.uleb128 0x19
 3772 0124 01       		.uleb128 0x1
 3773 0125 13       		.uleb128 0x13
 3774 0126 00       		.byte	0
 3775 0127 00       		.byte	0
 3776 0128 11       		.uleb128 0x11
 3777 0129 05       		.uleb128 0x5
 3778 012a 00       		.byte	0
 3779 012b 03       		.uleb128 0x3
 3780 012c 08       		.uleb128 0x8
 3781 012d 3A       		.uleb128 0x3a
 3782 012e 0B       		.uleb128 0xb
 3783 012f 3B       		.uleb128 0x3b
 3784 0130 05       		.uleb128 0x5
 3785 0131 49       		.uleb128 0x49
 3786 0132 13       		.uleb128 0x13
 3787 0133 02       		.uleb128 0x2
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 118


 3788 0134 18       		.uleb128 0x18
 3789 0135 00       		.byte	0
 3790 0136 00       		.byte	0
 3791 0137 12       		.uleb128 0x12
 3792 0138 2E       		.uleb128 0x2e
 3793 0139 00       		.byte	0
 3794 013a 3F       		.uleb128 0x3f
 3795 013b 19       		.uleb128 0x19
 3796 013c 03       		.uleb128 0x3
 3797 013d 0E       		.uleb128 0xe
 3798 013e 3A       		.uleb128 0x3a
 3799 013f 0B       		.uleb128 0xb
 3800 0140 3B       		.uleb128 0x3b
 3801 0141 05       		.uleb128 0x5
 3802 0142 27       		.uleb128 0x27
 3803 0143 19       		.uleb128 0x19
 3804 0144 11       		.uleb128 0x11
 3805 0145 01       		.uleb128 0x1
 3806 0146 12       		.uleb128 0x12
 3807 0147 06       		.uleb128 0x6
 3808 0148 40       		.uleb128 0x40
 3809 0149 18       		.uleb128 0x18
 3810 014a 9742     		.uleb128 0x2117
 3811 014c 19       		.uleb128 0x19
 3812 014d 00       		.byte	0
 3813 014e 00       		.byte	0
 3814 014f 13       		.uleb128 0x13
 3815 0150 01       		.uleb128 0x1
 3816 0151 01       		.byte	0x1
 3817 0152 49       		.uleb128 0x49
 3818 0153 13       		.uleb128 0x13
 3819 0154 01       		.uleb128 0x1
 3820 0155 13       		.uleb128 0x13
 3821 0156 00       		.byte	0
 3822 0157 00       		.byte	0
 3823 0158 14       		.uleb128 0x14
 3824 0159 21       		.uleb128 0x21
 3825 015a 00       		.byte	0
 3826 015b 49       		.uleb128 0x49
 3827 015c 13       		.uleb128 0x13
 3828 015d 2F       		.uleb128 0x2f
 3829 015e 0B       		.uleb128 0xb
 3830 015f 00       		.byte	0
 3831 0160 00       		.byte	0
 3832 0161 15       		.uleb128 0x15
 3833 0162 34       		.uleb128 0x34
 3834 0163 00       		.byte	0
 3835 0164 03       		.uleb128 0x3
 3836 0165 0E       		.uleb128 0xe
 3837 0166 3A       		.uleb128 0x3a
 3838 0167 0B       		.uleb128 0xb
 3839 0168 3B       		.uleb128 0x3b
 3840 0169 0B       		.uleb128 0xb
 3841 016a 49       		.uleb128 0x49
 3842 016b 13       		.uleb128 0x13
 3843 016c 3F       		.uleb128 0x3f
 3844 016d 19       		.uleb128 0x19
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 119


 3845 016e 3C       		.uleb128 0x3c
 3846 016f 19       		.uleb128 0x19
 3847 0170 00       		.byte	0
 3848 0171 00       		.byte	0
 3849 0172 16       		.uleb128 0x16
 3850 0173 34       		.uleb128 0x34
 3851 0174 00       		.byte	0
 3852 0175 03       		.uleb128 0x3
 3853 0176 0E       		.uleb128 0xe
 3854 0177 3A       		.uleb128 0x3a
 3855 0178 0B       		.uleb128 0xb
 3856 0179 3B       		.uleb128 0x3b
 3857 017a 0B       		.uleb128 0xb
 3858 017b 49       		.uleb128 0x49
 3859 017c 13       		.uleb128 0x13
 3860 017d 3F       		.uleb128 0x3f
 3861 017e 19       		.uleb128 0x19
 3862 017f 02       		.uleb128 0x2
 3863 0180 18       		.uleb128 0x18
 3864 0181 00       		.byte	0
 3865 0182 00       		.byte	0
 3866 0183 00       		.byte	0
 3867              		.section	.debug_aranges,"",%progbits
 3868 0000 1C010000 		.4byte	0x11c
 3869 0004 0200     		.2byte	0x2
 3870 0006 00000000 		.4byte	.Ldebug_info0
 3871 000a 04       		.byte	0x4
 3872 000b 00       		.byte	0
 3873 000c 0000     		.2byte	0
 3874 000e 0000     		.2byte	0
 3875 0010 00000000 		.4byte	.LFB32
 3876 0014 9C000000 		.4byte	.LFE32-.LFB32
 3877 0018 00000000 		.4byte	.LFB33
 3878 001c 2A000000 		.4byte	.LFE33-.LFB33
 3879 0020 00000000 		.4byte	.LFB34
 3880 0024 28000000 		.4byte	.LFE34-.LFB34
 3881 0028 00000000 		.4byte	.LFB35
 3882 002c 50000000 		.4byte	.LFE35-.LFB35
 3883 0030 00000000 		.4byte	.LFB36
 3884 0034 00020000 		.4byte	.LFE36-.LFB36
 3885 0038 00000000 		.4byte	.LFB37
 3886 003c 18000000 		.4byte	.LFE37-.LFB37
 3887 0040 00000000 		.4byte	.LFB38
 3888 0044 44000000 		.4byte	.LFE38-.LFB38
 3889 0048 00000000 		.4byte	.LFB39
 3890 004c 74000000 		.4byte	.LFE39-.LFB39
 3891 0050 00000000 		.4byte	.LFB40
 3892 0054 1C000000 		.4byte	.LFE40-.LFB40
 3893 0058 00000000 		.4byte	.LFB41
 3894 005c 28000000 		.4byte	.LFE41-.LFB41
 3895 0060 00000000 		.4byte	.LFB42
 3896 0064 1C000000 		.4byte	.LFE42-.LFB42
 3897 0068 00000000 		.4byte	.LFB43
 3898 006c 28000000 		.4byte	.LFE43-.LFB43
 3899 0070 00000000 		.4byte	.LFB44
 3900 0074 1C000000 		.4byte	.LFE44-.LFB44
 3901 0078 00000000 		.4byte	.LFB45
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 120


 3902 007c 1C000000 		.4byte	.LFE45-.LFB45
 3903 0080 00000000 		.4byte	.LFB46
 3904 0084 1C000000 		.4byte	.LFE46-.LFB46
 3905 0088 00000000 		.4byte	.LFB47
 3906 008c 1C000000 		.4byte	.LFE47-.LFB47
 3907 0090 00000000 		.4byte	.LFB48
 3908 0094 28000000 		.4byte	.LFE48-.LFB48
 3909 0098 00000000 		.4byte	.LFB49
 3910 009c 28000000 		.4byte	.LFE49-.LFB49
 3911 00a0 00000000 		.4byte	.LFB50
 3912 00a4 28000000 		.4byte	.LFE50-.LFB50
 3913 00a8 00000000 		.4byte	.LFB51
 3914 00ac 28000000 		.4byte	.LFE51-.LFB51
 3915 00b0 00000000 		.4byte	.LFB52
 3916 00b4 28000000 		.4byte	.LFE52-.LFB52
 3917 00b8 00000000 		.4byte	.LFB53
 3918 00bc 28000000 		.4byte	.LFE53-.LFB53
 3919 00c0 00000000 		.4byte	.LFB54
 3920 00c4 34010000 		.4byte	.LFE54-.LFB54
 3921 00c8 00000000 		.4byte	.LFB55
 3922 00cc 58000000 		.4byte	.LFE55-.LFB55
 3923 00d0 00000000 		.4byte	.LFB56
 3924 00d4 36000000 		.4byte	.LFE56-.LFB56
 3925 00d8 00000000 		.4byte	.LFB57
 3926 00dc 70000000 		.4byte	.LFE57-.LFB57
 3927 00e0 00000000 		.4byte	.LFB58
 3928 00e4 70000000 		.4byte	.LFE58-.LFB58
 3929 00e8 00000000 		.4byte	.LFB59
 3930 00ec 76000000 		.4byte	.LFE59-.LFB59
 3931 00f0 00000000 		.4byte	.LFB60
 3932 00f4 1C000000 		.4byte	.LFE60-.LFB60
 3933 00f8 00000000 		.4byte	.LFB61
 3934 00fc 1C000000 		.4byte	.LFE61-.LFB61
 3935 0100 00000000 		.4byte	.LFB62
 3936 0104 1C000000 		.4byte	.LFE62-.LFB62
 3937 0108 00000000 		.4byte	.LFB63
 3938 010c 14000000 		.4byte	.LFE63-.LFB63
 3939 0110 00000000 		.4byte	.LFB64
 3940 0114 14000000 		.4byte	.LFE64-.LFB64
 3941 0118 00000000 		.4byte	0
 3942 011c 00000000 		.4byte	0
 3943              		.section	.debug_ranges,"",%progbits
 3944              	.Ldebug_ranges0:
 3945 0000 00000000 		.4byte	.LFB32
 3946 0004 9C000000 		.4byte	.LFE32
 3947 0008 00000000 		.4byte	.LFB33
 3948 000c 2A000000 		.4byte	.LFE33
 3949 0010 00000000 		.4byte	.LFB34
 3950 0014 28000000 		.4byte	.LFE34
 3951 0018 00000000 		.4byte	.LFB35
 3952 001c 50000000 		.4byte	.LFE35
 3953 0020 00000000 		.4byte	.LFB36
 3954 0024 00020000 		.4byte	.LFE36
 3955 0028 00000000 		.4byte	.LFB37
 3956 002c 18000000 		.4byte	.LFE37
 3957 0030 00000000 		.4byte	.LFB38
 3958 0034 44000000 		.4byte	.LFE38
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 121


 3959 0038 00000000 		.4byte	.LFB39
 3960 003c 74000000 		.4byte	.LFE39
 3961 0040 00000000 		.4byte	.LFB40
 3962 0044 1C000000 		.4byte	.LFE40
 3963 0048 00000000 		.4byte	.LFB41
 3964 004c 28000000 		.4byte	.LFE41
 3965 0050 00000000 		.4byte	.LFB42
 3966 0054 1C000000 		.4byte	.LFE42
 3967 0058 00000000 		.4byte	.LFB43
 3968 005c 28000000 		.4byte	.LFE43
 3969 0060 00000000 		.4byte	.LFB44
 3970 0064 1C000000 		.4byte	.LFE44
 3971 0068 00000000 		.4byte	.LFB45
 3972 006c 1C000000 		.4byte	.LFE45
 3973 0070 00000000 		.4byte	.LFB46
 3974 0074 1C000000 		.4byte	.LFE46
 3975 0078 00000000 		.4byte	.LFB47
 3976 007c 1C000000 		.4byte	.LFE47
 3977 0080 00000000 		.4byte	.LFB48
 3978 0084 28000000 		.4byte	.LFE48
 3979 0088 00000000 		.4byte	.LFB49
 3980 008c 28000000 		.4byte	.LFE49
 3981 0090 00000000 		.4byte	.LFB50
 3982 0094 28000000 		.4byte	.LFE50
 3983 0098 00000000 		.4byte	.LFB51
 3984 009c 28000000 		.4byte	.LFE51
 3985 00a0 00000000 		.4byte	.LFB52
 3986 00a4 28000000 		.4byte	.LFE52
 3987 00a8 00000000 		.4byte	.LFB53
 3988 00ac 28000000 		.4byte	.LFE53
 3989 00b0 00000000 		.4byte	.LFB54
 3990 00b4 34010000 		.4byte	.LFE54
 3991 00b8 00000000 		.4byte	.LFB55
 3992 00bc 58000000 		.4byte	.LFE55
 3993 00c0 00000000 		.4byte	.LFB56
 3994 00c4 36000000 		.4byte	.LFE56
 3995 00c8 00000000 		.4byte	.LFB57
 3996 00cc 70000000 		.4byte	.LFE57
 3997 00d0 00000000 		.4byte	.LFB58
 3998 00d4 70000000 		.4byte	.LFE58
 3999 00d8 00000000 		.4byte	.LFB59
 4000 00dc 76000000 		.4byte	.LFE59
 4001 00e0 00000000 		.4byte	.LFB60
 4002 00e4 1C000000 		.4byte	.LFE60
 4003 00e8 00000000 		.4byte	.LFB61
 4004 00ec 1C000000 		.4byte	.LFE61
 4005 00f0 00000000 		.4byte	.LFB62
 4006 00f4 1C000000 		.4byte	.LFE62
 4007 00f8 00000000 		.4byte	.LFB63
 4008 00fc 14000000 		.4byte	.LFE63
 4009 0100 00000000 		.4byte	.LFB64
 4010 0104 14000000 		.4byte	.LFE64
 4011 0108 00000000 		.4byte	0
 4012 010c 00000000 		.4byte	0
 4013              		.section	.debug_line,"",%progbits
 4014              	.Ldebug_line0:
 4015 0000 A7030000 		.section	.debug_str,"MS",%progbits,1
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 122


 4015      02004E00 
 4015      00000201 
 4015      FB0E0D00 
 4015      01010101 
 4016              	.LASF74:
 4017 0000 43617053 		.ascii	"CapSense_CSD_sensorBaseline\000"
 4017      656E7365 
 4017      5F435344 
 4017      5F73656E 
 4017      736F7242 
 4018              	.LASF38:
 4019 001c 43617053 		.ascii	"CapSense_CSD_GetBaselineData\000"
 4019      656E7365 
 4019      5F435344 
 4019      5F476574 
 4019      42617365 
 4020              	.LASF77:
 4021 0039 43617053 		.ascii	"CapSense_CSD_sensorOnMask\000"
 4021      656E7365 
 4021      5F435344 
 4021      5F73656E 
 4021      736F724F 
 4022              	.LASF60:
 4023 0053 73746174 		.ascii	"state\000"
 4023      6500
 4024              	.LASF86:
 4025 0059 43617053 		.ascii	"CapSense_CSD_numberOfSensors\000"
 4025      656E7365 
 4025      5F435344 
 4025      5F6E756D 
 4025      6265724F 
 4026              	.LASF2:
 4027 0076 73686F72 		.ascii	"short int\000"
 4027      7420696E 
 4027      7400
 4028              	.LASF87:
 4029 0080 43617053 		.ascii	"CapSense_CSD_rawFilterData1\000"
 4029      656E7365 
 4029      5F435344 
 4029      5F726177 
 4029      46696C74 
 4030              	.LASF28:
 4031 009c 66696C74 		.ascii	"filteredRawData\000"
 4031      65726564 
 4031      52617744 
 4031      61746100 
 4032              	.LASF43:
 4033 00ac 43617053 		.ascii	"CapSense_CSD_GetNoiseThreshold\000"
 4033      656E7365 
 4033      5F435344 
 4033      5F476574 
 4033      4E6F6973 
 4034              	.LASF68:
 4035 00cb 43617053 		.ascii	"CapSense_CSD_EnableRawDataFilters\000"
 4035      656E7365 
 4035      5F435344 
 4035      5F456E61 
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 123


 4035      626C6552 
 4036              	.LASF31:
 4037 00ed 43617053 		.ascii	"CapSense_CSD_UpdateEnabledBaselines\000"
 4037      656E7365 
 4037      5F435344 
 4037      5F557064 
 4037      61746545 
 4038              	.LASF47:
 4039 0111 43617053 		.ascii	"CapSense_CSD_SetNoiseThreshold\000"
 4039      656E7365 
 4039      5F435344 
 4039      5F536574 
 4039      4E6F6973 
 4040              	.LASF37:
 4041 0130 64617461 		.ascii	"data\000"
 4041      00
 4042              	.LASF36:
 4043 0135 43617053 		.ascii	"CapSense_CSD_SetBaselineData\000"
 4043      656E7365 
 4043      5F435344 
 4043      5F536574 
 4043      42617365 
 4044              	.LASF18:
 4045 0152 43617053 		.ascii	"CapSense_CSD_InitializeSensorBaseline\000"
 4045      656E7365 
 4045      5F435344 
 4045      5F496E69 
 4045      7469616C 
 4046              	.LASF59:
 4047 0178 6E756D4F 		.ascii	"numOfSensors\000"
 4047      6653656E 
 4047      736F7273 
 4047      00
 4048              	.LASF41:
 4049 0185 76616C75 		.ascii	"value\000"
 4049      6500
 4050              	.LASF65:
 4051 018b 43617053 		.ascii	"CapSense_CSD_GetWidgetNumber\000"
 4051      656E7365 
 4051      5F435344 
 4051      5F476574 
 4051      57696467 
 4052              	.LASF10:
 4053 01a8 75696E74 		.ascii	"uint16\000"
 4053      313600
 4054              	.LASF19:
 4055 01af 73656E73 		.ascii	"sensor\000"
 4055      6F7200
 4056              	.LASF21:
 4057 01b6 77696467 		.ascii	"widget\000"
 4057      657400
 4058              	.LASF9:
 4059 01bd 75696E74 		.ascii	"uint8\000"
 4059      3800
 4060              	.LASF75:
 4061 01c3 43617053 		.ascii	"CapSense_CSD_sensorBaselineLow\000"
 4061      656E7365 
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 124


 4061      5F435344 
 4061      5F73656E 
 4061      736F7242 
 4062              	.LASF66:
 4063 01e2 43617053 		.ascii	"CapSense_CSD_GetLowBaselineReset\000"
 4063      656E7365 
 4063      5F435344 
 4063      5F476574 
 4063      4C6F7742 
 4064              	.LASF46:
 4065 0203 43617053 		.ascii	"CapSense_CSD_SetFingerThreshold\000"
 4065      656E7365 
 4065      5F435344 
 4065      5F536574 
 4065      46696E67 
 4066              	.LASF83:
 4067 0223 43617053 		.ascii	"CapSense_CSD_hysteresis\000"
 4067      656E7365 
 4067      5F435344 
 4067      5F687973 
 4067      74657265 
 4068              	.LASF12:
 4069 023b 666C6F61 		.ascii	"float\000"
 4069      7400
 4070              	.LASF64:
 4071 0241 43617053 		.ascii	"CapSense_CSD_MedianFilter\000"
 4071      656E7365 
 4071      5F435344 
 4071      5F4D6564 
 4071      69616E46 
 4072              	.LASF25:
 4073 025b 63616C63 		.ascii	"calc\000"
 4073      00
 4074              	.LASF6:
 4075 0260 6C6F6E67 		.ascii	"long long int\000"
 4075      206C6F6E 
 4075      6720696E 
 4075      7400
 4076              	.LASF81:
 4077 026e 43617053 		.ascii	"CapSense_CSD_noiseThreshold\000"
 4077      656E7365 
 4077      5F435344 
 4077      5F6E6F69 
 4077      73655468 
 4078              	.LASF61:
 4079 028a 43617053 		.ascii	"CapSense_CSD_CheckIsAnyWidgetActive\000"
 4079      656E7365 
 4079      5F435344 
 4079      5F436865 
 4079      636B4973 
 4080              	.LASF88:
 4081 02ae 43617053 		.ascii	"CapSense_CSD_rawFilterData2\000"
 4081      656E7365 
 4081      5F435344 
 4081      5F726177 
 4081      46696C74 
 4082              	.LASF4:
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 125


 4083 02ca 6C6F6E67 		.ascii	"long int\000"
 4083      20696E74 
 4083      00
 4084              	.LASF53:
 4085 02d3 6465626F 		.ascii	"debounce\000"
 4085      756E6365 
 4085      00
 4086              	.LASF51:
 4087 02dc 43617053 		.ascii	"CapSense_CSD_SetLowBaselineReset\000"
 4087      656E7365 
 4087      5F435344 
 4087      5F536574 
 4087      4C6F7742 
 4088              	.LASF40:
 4089 02fd 43617053 		.ascii	"CapSense_CSD_SetDiffCountData\000"
 4089      656E7365 
 4089      5F435344 
 4089      5F536574 
 4089      44696666 
 4090              	.LASF29:
 4091 031b 6E6F6973 		.ascii	"noiseThreshold\000"
 4091      65546872 
 4091      6573686F 
 4091      6C6400
 4092              	.LASF73:
 4093 032a 43617053 		.ascii	"CapSense_CSD_widgetNumber\000"
 4093      656E7365 
 4093      5F435344 
 4093      5F776964 
 4093      6765744E 
 4094              	.LASF90:
 4095 0344 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4095      43313120 
 4095      352E342E 
 4095      31203230 
 4095      31363036 
 4096 0377 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 4096      20726576 
 4096      6973696F 
 4096      6E203233 
 4096      37373135 
 4097 03aa 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4097      66756E63 
 4097      74696F6E 
 4097      2D736563 
 4097      74696F6E 
 4098              	.LASF1:
 4099 03d2 756E7369 		.ascii	"unsigned char\000"
 4099      676E6564 
 4099      20636861 
 4099      7200
 4100              	.LASF56:
 4101 03e0 68797374 		.ascii	"hysteresis\000"
 4101      65726573 
 4101      697300
 4102              	.LASF16:
 4103 03eb 6C6F6E67 		.ascii	"long double\000"
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 126


 4103      20646F75 
 4103      626C6500 
 4104              	.LASF32:
 4105 03f7 43617053 		.ascii	"CapSense_CSD_UpdateWidgetBaseline\000"
 4105      656E7365 
 4105      5F435344 
 4105      5F557064 
 4105      61746557 
 4106              	.LASF57:
 4107 0419 43617053 		.ascii	"CapSense_CSD_CheckIsWidgetActive\000"
 4107      656E7365 
 4107      5F435344 
 4107      5F436865 
 4107      636B4973 
 4108              	.LASF45:
 4109 043a 43617053 		.ascii	"CapSense_CSD_GetNegativeNoiseThreshold\000"
 4109      656E7365 
 4109      5F435344 
 4109      5F476574 
 4109      4E656761 
 4110              	.LASF67:
 4111 0461 43617053 		.ascii	"CapSense_CSD_GetDebounce\000"
 4111      656E7365 
 4111      5F435344 
 4111      5F476574 
 4111      4465626F 
 4112              	.LASF85:
 4113 047a 43617053 		.ascii	"CapSense_CSD_rawDataIndex\000"
 4113      656E7365 
 4113      5F435344 
 4113      5F726177 
 4113      44617461 
 4114              	.LASF30:
 4115 0494 43617053 		.ascii	"CapSense_CSD_UpdateSensorBaseline\000"
 4115      656E7365 
 4115      5F435344 
 4115      5F557064 
 4115      61746553 
 4116              	.LASF69:
 4117 04b6 43617053 		.ascii	"CapSense_CSD_DisableRawDataFilters\000"
 4117      656E7365 
 4117      5F435344 
 4117      5F446973 
 4117      61626C65 
 4118              	.LASF0:
 4119 04d9 7369676E 		.ascii	"signed char\000"
 4119      65642063 
 4119      68617200 
 4120              	.LASF7:
 4121 04e5 6C6F6E67 		.ascii	"long long unsigned int\000"
 4121      206C6F6E 
 4121      6720756E 
 4121      7369676E 
 4121      65642069 
 4122              	.LASF52:
 4123 04fc 43617053 		.ascii	"CapSense_CSD_CheckIsSensorActive\000"
 4123      656E7365 
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 127


 4123      5F435344 
 4123      5F436865 
 4123      636B4973 
 4124              	.LASF92:
 4125 051d 433A5C55 		.ascii	"C:\\Users\\SHOZO\\Documents\\PSoC Creator\\STELLANO"
 4125      73657273 
 4125      5C53484F 
 4125      5A4F5C44 
 4125      6F63756D 
 4126 054b 56415F32 		.ascii	"VA_2021\\STELLANOVA_2021.cydsn\000"
 4126      3032315C 
 4126      5354454C 
 4126      4C414E4F 
 4126      56415F32 
 4127              	.LASF8:
 4128 0569 756E7369 		.ascii	"unsigned int\000"
 4128      676E6564 
 4128      20696E74 
 4128      00
 4129              	.LASF27:
 4130 0576 74656D70 		.ascii	"tempRaw\000"
 4130      52617700 
 4131              	.LASF79:
 4132 057e 43617053 		.ascii	"CapSense_CSD_lowBaselineReset\000"
 4132      656E7365 
 4132      5F435344 
 4132      5F6C6F77 
 4132      42617365 
 4133              	.LASF34:
 4134 059c 66697273 		.ascii	"firstSensor\000"
 4134      7453656E 
 4134      736F7200 
 4135              	.LASF23:
 4136 05a8 69735365 		.ascii	"isSensorEnabled\000"
 4136      6E736F72 
 4136      456E6162 
 4136      6C656400 
 4137              	.LASF14:
 4138 05b8 63686172 		.ascii	"char\000"
 4138      00
 4139              	.LASF58:
 4140 05bd 72617749 		.ascii	"rawIndex\000"
 4140      6E646578 
 4140      00
 4141              	.LASF22:
 4142 05c6 43617053 		.ascii	"CapSense_CSD_InitializeEnabledBaselines\000"
 4142      656E7365 
 4142      5F435344 
 4142      5F496E69 
 4142      7469616C 
 4143              	.LASF80:
 4144 05ee 43617053 		.ascii	"CapSense_CSD_fingerThreshold\000"
 4144      656E7365 
 4144      5F435344 
 4144      5F66696E 
 4144      67657254 
 4145              	.LASF3:
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 128


 4146 060b 73686F72 		.ascii	"short unsigned int\000"
 4146      7420756E 
 4146      7369676E 
 4146      65642069 
 4146      6E7400
 4147              	.LASF17:
 4148 061e 43617053 		.ascii	"CapSense_CSD_BaseInit\000"
 4148      656E7365 
 4148      5F435344 
 4148      5F426173 
 4148      65496E69 
 4149              	.LASF76:
 4150 0634 43617053 		.ascii	"CapSense_CSD_sensorSignal\000"
 4150      656E7365 
 4150      5F435344 
 4150      5F73656E 
 4150      736F7253 
 4151              	.LASF35:
 4152 064e 6C617374 		.ascii	"lastSensor\000"
 4152      53656E73 
 4152      6F7200
 4153              	.LASF49:
 4154 0659 43617053 		.ascii	"CapSense_CSD_SetNegativeNoiseThreshold\000"
 4154      656E7365 
 4154      5F435344 
 4154      5F536574 
 4154      4E656761 
 4155              	.LASF72:
 4156 0680 43617053 		.ascii	"CapSense_CSD_sensorEnableMask\000"
 4156      656E7365 
 4156      5F435344 
 4156      5F73656E 
 4156      736F7245 
 4157              	.LASF11:
 4158 069e 75696E74 		.ascii	"uint32\000"
 4158      333200
 4159              	.LASF48:
 4160 06a5 43617053 		.ascii	"CapSense_CSD_SetFingerHysteresis\000"
 4160      656E7365 
 4160      5F435344 
 4160      5F536574 
 4160      46696E67 
 4161              	.LASF5:
 4162 06c6 6C6F6E67 		.ascii	"long unsigned int\000"
 4162      20756E73 
 4162      69676E65 
 4162      6420696E 
 4162      7400
 4163              	.LASF26:
 4164 06d8 7369676E 		.ascii	"sign\000"
 4164      00
 4165              	.LASF78:
 4166 06dd 43617053 		.ascii	"CapSense_CSD_lowBaselineResetCnt\000"
 4166      656E7365 
 4166      5F435344 
 4166      5F6C6F77 
 4166      42617365 
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 129


 4167              	.LASF82:
 4168 06fe 43617053 		.ascii	"CapSense_CSD_negativeNoiseThreshold\000"
 4168      656E7365 
 4168      5F435344 
 4168      5F6E6567 
 4168      61746976 
 4169              	.LASF39:
 4170 0722 43617053 		.ascii	"CapSense_CSD_GetDiffCountData\000"
 4170      656E7365 
 4170      5F435344 
 4170      5F476574 
 4170      44696666 
 4171              	.LASF89:
 4172 0740 43617053 		.ascii	"CapSense_CSD_enableRawFilters\000"
 4172      656E7365 
 4172      5F435344 
 4172      5F656E61 
 4172      626C6552 
 4173              	.LASF71:
 4174 075e 43617053 		.ascii	"CapSense_CSD_sensorRaw\000"
 4174      656E7365 
 4174      5F435344 
 4174      5F73656E 
 4174      736F7252 
 4175              	.LASF50:
 4176 0775 43617053 		.ascii	"CapSense_CSD_SetDebounce\000"
 4176      656E7365 
 4176      5F435344 
 4176      5F536574 
 4176      4465626F 
 4177              	.LASF24:
 4178 078e 43617053 		.ascii	"CapSense_CSD_UpdateBaselineNoThreshold\000"
 4178      656E7365 
 4178      5F435344 
 4178      5F557064 
 4178      61746542 
 4179              	.LASF15:
 4180 07b5 73697A65 		.ascii	"sizetype\000"
 4180      74797065 
 4180      00
 4181              	.LASF91:
 4182 07be 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_CSD_CSHL.c\000"
 4182      72617465 
 4182      645F536F 
 4182      75726365 
 4182      5C50536F 
 4183              	.LASF84:
 4184 07e9 43617053 		.ascii	"CapSense_CSD_debounce\000"
 4184      656E7365 
 4184      5F435344 
 4184      5F646562 
 4184      6F756E63 
 4185              	.LASF54:
 4186 07ff 6465626F 		.ascii	"debounceIndex\000"
 4186      756E6365 
 4186      496E6465 
 4186      7800
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccdpBxrg.s 			page 130


 4187              	.LASF42:
 4188 080d 43617053 		.ascii	"CapSense_CSD_GetFingerThreshold\000"
 4188      656E7365 
 4188      5F435344 
 4188      5F476574 
 4188      46696E67 
 4189              	.LASF13:
 4190 082d 646F7562 		.ascii	"double\000"
 4190      6C6500
 4191              	.LASF20:
 4192 0834 43617053 		.ascii	"CapSense_CSD_InitializeAllBaselines\000"
 4192      656E7365 
 4192      5F435344 
 4192      5F496E69 
 4192      7469616C 
 4193              	.LASF44:
 4194 0858 43617053 		.ascii	"CapSense_CSD_GetFingerHysteresis\000"
 4194      656E7365 
 4194      5F435344 
 4194      5F476574 
 4194      46696E67 
 4195              	.LASF33:
 4196 0879 73656E73 		.ascii	"sensorsPerWidget\000"
 4196      6F727350 
 4196      65725769 
 4196      64676574 
 4196      00
 4197              	.LASF62:
 4198 088a 43617053 		.ascii	"CapSense_CSD_EnableWidget\000"
 4198      656E7365 
 4198      5F435344 
 4198      5F456E61 
 4198      626C6557 
 4199              	.LASF70:
 4200 08a4 43617053 		.ascii	"CapSense_CSD_debounceCounter\000"
 4200      656E7365 
 4200      5F435344 
 4200      5F646562 
 4200      6F756E63 
 4201              	.LASF55:
 4202 08c1 66696E67 		.ascii	"fingerThreshold\000"
 4202      65725468 
 4202      72657368 
 4202      6F6C6400 
 4203              	.LASF63:
 4204 08d1 43617053 		.ascii	"CapSense_CSD_DisableWidget\000"
 4204      656E7365 
 4204      5F435344 
 4204      5F446973 
 4204      61626C65 
 4205              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
